{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/ELFPlot.jsx\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nexport class ELFPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.spd_test = this.props.test;\n    this.spd_ref = this.props.ref_spd;\n    this.caption = this.props.caption;\n    var i;\n    this.wavelength = [];\n\n    for (i = 0; i < 400; i++) {\n      this.wavelength[i] = i + 380;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [{\n        name: \"Test\",\n        x: this.wavelength,\n        y: this.spd_test,\n        type: \"scatter\",\n        mode: \"lines+points\",\n        marker: {\n          color: \"red\"\n        }\n      }, {\n        name: \"Reference\",\n        x: this.wavelength,\n        y: this.spd_ref,\n        type: \"scatter\",\n        mode: \"lines+points\",\n        marker: {\n          color: \"black\"\n        }\n      }],\n      layout: {\n        width: 600,\n        height: 400,\n        margin: {\n          l: 60,\n          r: 40,\n          b: 45,\n          t: 10,\n          pad: 4\n        },\n        xaxis: {\n          title: {\n            text: \"Wavelength (nm)\"\n          }\n        },\n        yaxis: {\n          title: {\n            text: \"Radiant Power  \u000b(Equal Luminous FLux)\"\n          },\n          tickformat: \"\",\n          showticklabels: false\n        }\n      },\n      config: {\n        displayModeBar: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), this.caption ? React.createElement(\"h6\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Spectral Power Distribution Comparison \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), \"Each SPD has been normalized so that the luminance factor (Y) is 100, as is done in IES TM-30 calculations.\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default ELFPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/ELFPlot.jsx"],"names":["React","Component","Plot","ELFPlot","constructor","props","spd_test","test","spd_ref","ref_spd","caption","i","wavelength","render","position","display","name","x","y","type","mode","marker","color","width","height","margin","l","r","b","t","pad","xaxis","title","text","yaxis","tickformat","showticklabels","displayModeBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKD,KAAL,CAAWE,IAA3B;AACA,SAAKC,OAAL,GAAe,KAAKH,KAAL,CAAWI,OAA1B;AACA,SAAKC,OAAL,GAAe,KAAKL,KAAL,CAAWK,OAA1B;AACA,QAAIC,CAAJ;AAEA,SAAKC,UAAL,GAAkB,EAAlB;;AACA,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,EAAtB,EAA0B;AACxB,WAAKC,UAAL,CAAgBD,CAAhB,IAAqBA,CAAC,GAAG,GAAzB;AACD;AACF;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,SAAZ;AAAuBC,QAAAA,OAAO,EAAE;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,CAAC,EAAE,KAAKL,UAFV;AAGEM,QAAAA,CAAC,EAAE,KAAKZ,QAHV;AAIEa,QAAAA,IAAI,EAAE,SAJR;AAKEC,QAAAA,IAAI,EAAE,cALR;AAMEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AANV,OADI,EASJ;AACEN,QAAAA,IAAI,EAAE,WADR;AAEEC,QAAAA,CAAC,EAAE,KAAKL,UAFV;AAGEM,QAAAA,CAAC,EAAE,KAAKV,OAHV;AAIEW,QAAAA,IAAI,EAAE,SAJR;AAKEC,QAAAA,IAAI,EAAE,cALR;AAMEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AANV,OATI,CADR;AAmBE,MAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,GADD;AAENC,QAAAA,MAAM,EAAE,GAFF;AAGNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE,EADG;AAENC,UAAAA,CAAC,EAAE,EAFG;AAGNC,UAAAA,CAAC,EAAE,EAHG;AAINC,UAAAA,CAAC,EAAE,EAJG;AAKNC,UAAAA,GAAG,EAAE;AALC,SAHF;AAUNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD;AADF,SAVD;AAeNC,QAAAA,KAAK,EAAE;AACLF,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WADF;AAILE,UAAAA,UAAU,EAAE,EAJP;AAKLC,UAAAA,cAAc,EAAE;AALX;AAfD,OAnBV;AA0CE,MAAA,MAAM,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OA1CV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EA6CG,KAAK3B,OAAL,GACC;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzC,gHADD,GAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDJ,CADF;AAyDD;;AAvEoC;AA0EvC,eAAeP,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport class ELFPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.spd_test = this.props.test;\n    this.spd_ref = this.props.ref_spd;\n    this.caption = this.props.caption;\n    var i;\n\n    this.wavelength = [];\n    for (i = 0; i < 400; i++) {\n      this.wavelength[i] = i + 380;\n    }\n  }\n  render() {\n    return (\n      <div style={{ position: \"inherit\", display: \"inline-block\" }}>\n        <Plot\n          data={[\n            {\n              name: \"Test\",\n              x: this.wavelength,\n              y: this.spd_test,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              marker: { color: \"red\" }\n            },\n            {\n              name: \"Reference\",\n              x: this.wavelength,\n              y: this.spd_ref,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              marker: { color: \"black\" }\n            }\n          ]}\n          layout={{\n            width: 600,\n            height: 400,\n            margin: {\n              l: 60,\n              r: 40,\n              b: 45,\n              t: 10,\n              pad: 4\n            },\n            xaxis: {\n              title: {\n                text: \"Wavelength (nm)\"\n              }\n            },\n            yaxis: {\n              title: {\n                text: \"Radiant Power  \u000b(Equal Luminous FLux)\"\n              },\n              tickformat: \"\",\n              showticklabels: false\n            }\n          }}\n          config={{ displayModeBar: false }}\n        />\n        {this.caption ? (\n          <h6 align=\"center\">\n            Spectral Power Distribution Comparison <br />\n            Each SPD has been normalized so that the luminance factor (Y) is\n            100, as is done in IES TM-30 calculations.\n          </h6>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ELFPlot;\n"]},"metadata":{},"sourceType":"module"}