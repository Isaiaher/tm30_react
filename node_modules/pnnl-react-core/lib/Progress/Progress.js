'use strict';

exports.__esModule = true;

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ProgressBar = require('react-bootstrap/lib/ProgressBar');

var _ProgressBar2 = _interopRequireDefault(_ProgressBar);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function filterObject(obj) {
  var ret = {};
  (0, _keys2['default'])(obj).filter(function (key) {
    return obj[key] !== undefined;
  }).forEach(function (key) {
    ret[key] = obj[key];
  });
  return ret;
}

var Progress = function (_Component) {
  (0, _inherits3['default'])(Progress, _Component);

  function Progress() {
    (0, _classCallCheck3['default'])(this, Progress);
    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));
  }

  Progress.createClickHandler = function createClickHandler(onClick, step) {
    return function () {
      return onClick(step);
    };
  };

  Progress.prototype.render = function render() {
    var _props = this.props,
        activeStep = _props.activeStep,
        invert = _props.invert,
        children = _props.children;


    var numChildren = _react.Children.count(children);
    var steps = [];

    _react.Children.forEach(children, function (child, index) {
      var controlProps = { index: index };

      if (activeStep === index) {
        controlProps.status = 'active';
      } else if (activeStep > index) {
        controlProps.status = 'complete';
      } else if (activeStep < index) {
        controlProps.status = 'inactive';
      }

      if (index + 1 === numChildren) {
        controlProps.last = true;
      }

      var definedProps = filterObject(child.props);

      steps.push(_react2['default'].cloneElement(child, (0, _assign2['default'])(controlProps, definedProps)));
    });

    var percentComplete = activeStep / (steps.length - 1) * 100;

    var progressClasses = (0, _classnames2['default'])('PnnlProgress', { invert: invert });

    return _react2['default'].createElement(
      'div',
      { className: progressClasses },
      _react2['default'].createElement(
        'div',
        { className: 'PnnlProgressBarContainer' },
        _react2['default'].createElement(_ProgressBar2['default'], { now: percentComplete })
      ),
      _react2['default'].createElement(
        'div',
        { className: 'PnnlProgressStepsContainer' },
        steps
      )
    );
  };

  return Progress;
}(_react.Component);

Progress.propTypes = {
  /**
   * Set the active step (zero based index). This will adjust the progress bar and try to automatically set the status on any `ProgressStep` children. You can always override this by passing a status prop to a `ProgressStep`.
   */
  activeStep: _propTypes2['default'].number,
  /**
   * Whether to adjust the colors because of the background.
   */
  invert: _propTypes2['default'].bool,
  /**
   * Should be two or more `ProgressStep` components, or components that resolve down to a `ProgressStep` like an `OverlayTrigger`.
   */
  children: _propTypes2['default'].oneOfType([_propTypes2['default'].arrayOf(_propTypes2['default'].node), _propTypes2['default'].node]).isRequired
};

Progress.defaultProps = {
  activeStep: 0,
  invert: false
};

exports['default'] = Progress;
module.exports = exports['default'];