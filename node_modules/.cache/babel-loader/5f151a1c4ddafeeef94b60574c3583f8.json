{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Overlay = require('react-bootstrap/lib/Overlay');\n\nvar _Overlay2 = _interopRequireDefault(_Overlay);\n\nvar _Popover = require('react-bootstrap/lib/Popover');\n\nvar _Popover2 = _interopRequireDefault(_Popover);\n\nvar _Person = require('../Person');\n\nvar _Person2 = _interopRequireDefault(_Person);\n\nvar _ProfileCard = require('../ProfileCard');\n\nvar _ProfileCard2 = _interopRequireDefault(_ProfileCard);\n\nvar _config = require('../config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar ProfilePopover = function (_Component) {\n  (0, _inherits3['default'])(ProfilePopover, _Component);\n\n  function ProfilePopover(props) {\n    (0, _classCallCheck3['default'])(this, ProfilePopover);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _Component.call(this, props));\n\n    _this.abortController = window && window.AbortController ? new window.AbortController() : undefined;\n\n    _this.updateState = function (data) {\n      _this.setState({\n        data: (0, _assign2['default'])(data, {\n          mapLink: data.space ? data.space.thumbnailImage : _config2['default'].defaultLocationImage\n        }, {\n          portraitLink: _config2['default'].opwhse.personImage(data.id)\n        })\n      });\n    };\n\n    _this.state = {\n      data: props.person || undefined,\n      show: false\n    };\n    _this.getUserData = _this.getUserData.bind(_this);\n    _this.toggle = _this.toggle.bind(_this);\n    return _this;\n  }\n\n  ProfilePopover.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    if (!this.props.id && !this.props.person.id) {\n      throw new Error('A person identifier was not supplied to ProfilePopover. This can be either props.id (Hanford ID) or props.person.id.');\n    } else if (this.props.id) {\n      this.getUserData(this.props.id).then(function (data) {\n        return _this2.updateState(data);\n      });\n    }\n  };\n\n  ProfilePopover.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n  };\n\n  ProfilePopover.prototype.getUserData = function getUserData(hid) {\n    var _this3 = this;\n\n    return new _promise2['default'](function (resolve, reject) {\n      if (_this3.props.id || !_this3.props.person.facility || !_this3.props.person.space) {\n        fetch(_config2['default'].opwhse.person(hid), {\n          signal: _this3.abortController && _this3.abortController.signal,\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (response) {\n          if (response.status >= 400) {\n            throw new Error(response.statusText);\n          } else if (response.ok) {\n            return response;\n          }\n\n          throw new Error('An error resulted when trying to call the profile form the API. ' + response.error);\n        }).then(function (resp) {\n          resp.json().then(function (data) {\n            resolve(data);\n          });\n        })['catch'](function (error) {\n          if (error.name === 'AbortError') return;\n          reject(new Error('An error resulted when trying to call the profile form the API. ' + error));\n        });\n      }\n    });\n  };\n\n  ProfilePopover.prototype.toggle = function toggle() {\n    this.setState({\n      show: !this.state.show\n    });\n  };\n\n  ProfilePopover.prototype.render = function render() {\n    var _this4 = this;\n\n    var defaultPerson = {\n      id: '12345',\n      firstName: ' ',\n      lastName: ' ',\n      title: ' '\n    };\n    var personProps = {\n      person: this.state.data || defaultPerson,\n      align: this.props.align,\n      altName: this.props.altName,\n      altTitle: this.props.altTitle,\n      onClickCallback: this.toggle,\n      isSwapped: this.props.isSwapped,\n      isCondensed: this.props.isCondensed,\n      size: this.props.size\n    };\n\n    if (this.state.data) {\n      var overlayProps = {\n        show: this.state.show,\n        target: this.overlayTarget,\n        placement: this.props.placement,\n        onHide: function onHide() {\n          return _this4.toggle();\n        }\n      };\n      var cardProps = {\n        person: this.state.data,\n        isCompact: this.props.isCompact,\n        isInsidePopover: true,\n        onCloseCallback: this.toggle\n      };\n      return _react2['default'].createElement('div', {\n        className: 'PnnlProfileCardContainer'\n      }, _react2['default'].createElement(_Person2['default'], (0, _extends3['default'])({}, personProps, {\n        ref: function ref(e) {\n          _this4.overlayTarget = e;\n        }\n      })), _react2['default'].createElement(_Overlay2['default'], (0, _extends3['default'])({}, overlayProps, {\n        rootClose: true\n      }), _react2['default'].createElement(_Popover2['default'], {\n        id: 'PnnlProfilePopover'\n      }, _react2['default'].createElement(_ProfileCard2['default'], cardProps))));\n    }\n\n    return this.props.altDefaultTemplate || _react2['default'].createElement('div', {\n      className: 'PnnlProfileCardContainer'\n    }, _react2['default'].createElement(_Person2['default'], personProps));\n  };\n\n  return ProfilePopover;\n}(_react.Component);\n\nProfilePopover.propTypes = {\n  /**\n    * A Hanford ID for the person you want to create the card for.\n    *\n    * The ID will be ran against: https://api.pnl.gov/operations/v2/people/{hid}?expand=space,facility\n    *\n    * `Note:` Not required if a person object is provided.\n    * @required\n    * */\n  id: _propTypes2['default'].string,\n\n  /**\n    * A Person object for the person you want to create the card for.\n    *\n    * The object needs to have the same naming convention as: https://api.pnl.gov/operations/v2/people/{hid}/?expand=space,facility,department\n    *\n    * `Note:` Not required if an id is provided.\n    * @required\n    * */\n  person: _propTypes2['default'].shape({\n    id: _propTypes2['default'].string,\n    firstName: _propTypes2['default'].string,\n    lastName: _propTypes2['default'].string,\n    title: _propTypes2['default'].string,\n    phoneNumber: _propTypes2['default'].string,\n    emailAddress: _propTypes2['default'].string,\n    mailstop: _propTypes2['default'].string,\n    mapLink: _propTypes2['default'].string,\n    portraitLink: _propTypes2['default'].string,\n    facility: _propTypes2['default'].shape({\n      abbreviation: _propTypes2['default'].string\n    }),\n    space: _propTypes2['default'].shape({\n      locationId: _propTypes2['default'].string,\n      name: _propTypes2['default'].string\n    }),\n    department: _propTypes2['default'].shape({\n      id: _propTypes2['default'].string,\n      code: _propTypes2['default'].string,\n      name: _propTypes2['default'].string\n    })\n  }),\n\n  /**\n   * Which side should the Avatar be aligned on? Choosing 'center' will stack the information\n   */\n  align: _propTypes2['default'].oneOf(['left', 'right', 'center']),\n\n  /**\n    * Overrides the `name` on the Person display.\n    * */\n  altName: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].element]),\n\n  /**\n    * Overrides the `title` on the Person display.\n    * */\n  altTitle: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].element]),\n\n  /**\n     * Overrides the default template when no person is found\n     */\n  altDefaultTemplate: _propTypes2['default'].element,\n\n  /**\n    * Sets the direction the ProfileCard is positioned towards.\n    * */\n  placement: _propTypes2['default'].oneOf(['left', 'right', 'top', 'bottom']),\n\n  /**\n    * Whether or not the contact card is in a compact format.\n    * */\n  isCompact: _propTypes2['default'].bool,\n\n  /**\n    * Swaps the `name` and `title` positions on the Person display.\n    *\n    * This will not change the styles of those two locations. It will only swap the values of the text pieces.\n    * */\n  isSwapped: _propTypes2['default'].bool,\n\n  /**\n    * Allows a condensed view of the Person display when true. By default, the `name` of the individual will\n    * appear below the image of the individual in a smaller font size, without the display of the `title`.\n    * If isSwapped is also true, the `title` of the individual will be displayed in place of the `name`.\n    *\n    * This will add a class, `condensed`, to the Person display.\n    * */\n  isCondensed: _propTypes2['default'].bool,\n\n  /**\n   * The size of the Avatar to be generated.\n   */\n  size: _propTypes2['default'].oneOf(['xs', 'sm', 'md', 'lg'])\n};\nProfilePopover.defaultProps = {\n  id: undefined,\n  person: undefined,\n  align: 'left',\n  altName: undefined,\n  altTitle: undefined,\n  altDefaultTemplate: undefined,\n  placement: 'right',\n  isCompact: false,\n  isSwapped: false,\n  isCondensed: false,\n  size: 'md'\n};\nexports['default'] = ProfilePopover;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}