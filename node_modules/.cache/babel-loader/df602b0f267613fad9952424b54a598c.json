{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Tabs/Graphical.jsx\";\n\n/**\n * Graphical.\n *\n * A component for the Graphical tab in the Reports page.\n * Based off of the Excel 'Results Graphical' tab in the\n * IES TM30 Excel Calculator\n *\n * This page has multiple graphs and explanation of the graphs.\n * A lot of Data is being visualized and is all done with the\n * Plotly module.\n *\n * TODO - Sloppy spacing. Using divs with inline styling. Hopefully fix that in the future\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Data1931 from \"../../../../Data/CIE_1931\";\nimport Data1976 from \"../../../../Data/CIE_1976\";\nimport ELFPlot from \"../Plots/ELFPlot\";\nimport CIEPlot from \"../Plots/CIEPlot\";\nimport SHPPlot from \"../Plots/SHPPlot\";\nimport HBAPlot from \"../Plots/HBAPlot\";\nimport CVGPlot from \"../Plots/CVGPlot\";\nimport VSPlot from \"../Plots/VSPlot\";\nimport LCFPlot from \"../Plots/LCFPlot\";\nimport LCSPlot from \"../Plots/LCSPlot\";\nimport LHSPlot from \"../Plots/LHSPlot\";\n/**\n * Graphical Class\n */\n\nexport class Graphical extends Component {\n  /**\n   * Constructor for the Graphical page\n   * Mostly just to bring in the data from the props\n   * \"this.tm30\" is the \"Numerical_Results\" object from the JSON results file\n   * if you are unsure of the format of the JSON take a look server side to see how\n   * the JSONs get formated and how to access the data\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.tm30 = this.props.tm30; //The data from the JSON file\n\n    this.input = this.props.input;\n  }\n  /**\n   * Render function for thr Graphical tab.\n   */\n\n\n  render() {\n    /**\n     * Return value of the Render\n     * TODO: Some spacing issues need to be fixed and inline formatting is sloppy.\n     */\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Test Source and Reference Illuminant \")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"SideScroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ELFPlot, {\n      test: this.tm30.normalized_SPD_test,\n      ref_spd: this.tm30.normalized_SPD_ref,\n      wavelengths: this.input.Wavelength,\n      caption: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(CIEPlot, {\n      spectrum_locus_x: Data1931.Spectrum_Locus.x,\n      spectrum_locus_y: Data1931.Spectrum_Locus.y,\n      blackbody_locus_x: Data1931.Blackbody_Locus.x,\n      blackbody_locus_y: Data1931.Blackbody_Locus.y,\n      x_label: \"x\",\n      y_label: \"y\",\n      test_source: [this.tm30.x[0], this.tm30.y[0]],\n      reference_illuminant: [this.tm30.x[1], this.tm30.y[1]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(CIEPlot, {\n      spectrum_locus_x: Data1976.Spectrum_Locus.u_prime,\n      spectrum_locus_y: Data1976.Spectrum_Locus.v_prime,\n      blackbody_locus_x: Data1976.Blackbody_Locus.u_prime,\n      blackbody_locus_y: Data1976.Blackbody_Locus.v_prime,\n      x_label: \"u'\",\n      y_label: \"v'\",\n      test_source: [this.tm30.u[0], this.tm30.v[0]],\n      reference_illuminant: [this.tm30.u[1], this.tm30.v[1]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Color Rendition by Hue-Angle Bin\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"SideScroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(SHPPlot, {\n      a_test_coordinates: this.tm30.a_test_coordinates,\n      b_test_coordinates: this.tm30.b_test_coordinates,\n      a_ref_coordinates: this.tm30.a_ref_coordinates,\n      b_ref_coordinates: this.tm30.b_ref_coordinates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: \"5%\",\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(HBAPlot, {\n      a_prime_test_j: this.tm30.a_prime_test_j,\n      b_prime_test_j: this.tm30.b_prime_test_j,\n      a_prime_ref_j: this.tm30.a_prime_ref_j,\n      b_prime_ref_j: this.tm30.b_prime_ref_j,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: \"5%\",\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(CVGPlot, {\n      xtest: this.tm30.path_xtest,\n      ytest: this.tm30.path_ytest,\n      xref: this.tm30.path_xref,\n      yref: this.tm30.path_yref,\n      rf: this.tm30.rg,\n      rg: this.tm30.rf,\n      cct: this.tm30.CCT[0],\n      duv: this.tm30.DUV[0],\n      small: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: \"5%\",\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(VSPlot, {\n      a_test_coordinates: this.tm30.a_test_coordinates,\n      b_test_coordinates: this.tm30.b_test_coordinates,\n      a_ref_coordinates: this.tm30.a_ref_coordinates,\n      b_ref_coordinates: this.tm30.b_ref_coordinates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: \"2%\",\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Color Rendition by Hue-Angle Bin\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"SideScroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(LCSPlot, {\n      data: this.tm30.local_chroma_shift,\n      long: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"2%\",\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n        paddingTop: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Local Chroma Shift\"), \"Local Chroma Shift is determined from the average radial change\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), \"for the color evaluation samples within each hue-angle bin. Chroma\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), \"shift is a funciton of absolute chroma, so Local Chroma Shift\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), \"values are represented as a percentage. The number of samples per\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), \"bin (m), which can vary based on the CCT used for the calculation,\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), \"is shown at the top. [The colors of the bars are for visual \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), \"orientation only.]\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"SideScroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(LHSPlot, {\n      data: this.tm30.local_hue_shift,\n      long: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"2%\",\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n        paddingTop: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Local Hue Shift\"), \"Local hue shift is deteremined from the average change \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), \"perpendicular to the hue-angle bin for the color evaluation \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), \"samples within each hue-angle bin. The number of samples per bin\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), \"(m), which can vary based on the CCT used for the calculation, is\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), \"shown at the top. [The colors of the bars are for visual \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), \"orientation only.]\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"SideScroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(LCFPlot, {\n      data: this.tm30.local_color_fidelity,\n      long: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"2%\",\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n        paddingTop: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Local Color Fidelity\"), \"Local Color Fidelity is the average difference in CAM02-UCS for\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), \"the color evaluation samples in each hue-angle bin. The number of\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), \"samples per bin, which can vary based on the CCT used for the\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), \"calculation, is shown at the top. [The colors of the bars are for\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), \"visual orientation only.]\"))));\n  }\n\n}\n/**\n * Export the Graphical component\n */\n\nexport default Graphical;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Tabs/Graphical.jsx"],"names":["React","Component","Card","Grid","Row","Data1931","Data1976","ELFPlot","CIEPlot","SHPPlot","HBAPlot","CVGPlot","VSPlot","LCFPlot","LCSPlot","LHSPlot","Graphical","constructor","props","tm30","input","render","normalized_SPD_test","normalized_SPD_ref","Wavelength","Spectrum_Locus","x","y","Blackbody_Locus","u_prime","v_prime","u","v","a_test_coordinates","b_test_coordinates","a_ref_coordinates","b_ref_coordinates","width","position","display","a_prime_test_j","b_prime_test_j","a_prime_ref_j","b_prime_ref_j","path_xtest","path_ytest","path_xref","path_yref","rg","rf","CCT","DUV","local_chroma_shift","verticalAlign","paddingTop","local_hue_shift","local_color_fidelity"],"mappings":"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","sourcesContent":["/**\n * Graphical.\n *\n * A component for the Graphical tab in the Reports page.\n * Based off of the Excel 'Results Graphical' tab in the\n * IES TM30 Excel Calculator\n *\n * This page has multiple graphs and explanation of the graphs.\n * A lot of Data is being visualized and is all done with the\n * Plotly module.\n *\n * TODO - Sloppy spacing. Using divs with inline styling. Hopefully fix that in the future\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Data1931 from \"../../../../Data/CIE_1931\";\nimport Data1976 from \"../../../../Data/CIE_1976\";\nimport ELFPlot from \"../Plots/ELFPlot\";\nimport CIEPlot from \"../Plots/CIEPlot\";\nimport SHPPlot from \"../Plots/SHPPlot\";\nimport HBAPlot from \"../Plots/HBAPlot\";\nimport CVGPlot from \"../Plots/CVGPlot\";\nimport VSPlot from \"../Plots/VSPlot\";\nimport LCFPlot from \"../Plots/LCFPlot\";\nimport LCSPlot from \"../Plots/LCSPlot\";\nimport LHSPlot from \"../Plots/LHSPlot\";\n\n/**\n * Graphical Class\n */\nexport class Graphical extends Component {\n  /**\n   * Constructor for the Graphical page\n   * Mostly just to bring in the data from the props\n   * \"this.tm30\" is the \"Numerical_Results\" object from the JSON results file\n   * if you are unsure of the format of the JSON take a look server side to see how\n   * the JSONs get formated and how to access the data\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.tm30 = this.props.tm30; //The data from the JSON file\n    this.input = this.props.input;\n  }\n  /**\n   * Render function for thr Graphical tab.\n   */\n  render() {\n    /**\n     * Return value of the Render\n     * TODO: Some spacing issues need to be fixed and inline formatting is sloppy.\n     */\n    return (\n      <Grid>\n        <Row>\n          <h2 align=\"center\">Test Source and Reference Illuminant </h2>\n        </Row>\n        <Row>\n          <Card className=\"SideScroll\">\n            <ELFPlot\n              test={this.tm30.normalized_SPD_test}\n              ref_spd={this.tm30.normalized_SPD_ref}\n              wavelengths={this.input.Wavelength}\n              caption={true}\n            ></ELFPlot>\n\n            <CIEPlot\n              spectrum_locus_x={Data1931.Spectrum_Locus.x}\n              spectrum_locus_y={Data1931.Spectrum_Locus.y}\n              blackbody_locus_x={Data1931.Blackbody_Locus.x}\n              blackbody_locus_y={Data1931.Blackbody_Locus.y}\n              x_label={\"x\"}\n              y_label={\"y\"}\n              test_source={[this.tm30.x[0], this.tm30.y[0]]}\n              reference_illuminant={[this.tm30.x[1], this.tm30.y[1]]}\n            ></CIEPlot>\n            <CIEPlot\n              spectrum_locus_x={Data1976.Spectrum_Locus.u_prime}\n              spectrum_locus_y={Data1976.Spectrum_Locus.v_prime}\n              blackbody_locus_x={Data1976.Blackbody_Locus.u_prime}\n              blackbody_locus_y={Data1976.Blackbody_Locus.v_prime}\n              x_label={\"u'\"}\n              y_label={\"v'\"}\n              test_source={[this.tm30.u[0], this.tm30.v[0]]}\n              reference_illuminant={[this.tm30.u[1], this.tm30.v[1]]}\n            ></CIEPlot>\n          </Card>\n        </Row>\n        <br />\n        <Row>\n          <h2 align=\"center\">Color Rendition by Hue-Angle Bin</h2>\n        </Row>\n        <Row>\n          <Card className=\"SideScroll\">\n            <SHPPlot\n              a_test_coordinates={this.tm30.a_test_coordinates}\n              b_test_coordinates={this.tm30.b_test_coordinates}\n              a_ref_coordinates={this.tm30.a_ref_coordinates}\n              b_ref_coordinates={this.tm30.b_ref_coordinates}\n            />\n            <div\n              style={{\n                width: \"5%\",\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            />\n            <HBAPlot\n              a_prime_test_j={this.tm30.a_prime_test_j}\n              b_prime_test_j={this.tm30.b_prime_test_j}\n              a_prime_ref_j={this.tm30.a_prime_ref_j}\n              b_prime_ref_j={this.tm30.b_prime_ref_j}\n            />\n\n            <div\n              style={{\n                width: \"5%\",\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            />\n\n            <CVGPlot\n              xtest={this.tm30.path_xtest}\n              ytest={this.tm30.path_ytest}\n              xref={this.tm30.path_xref}\n              yref={this.tm30.path_yref}\n              rf={this.tm30.rg}\n              rg={this.tm30.rf}\n              cct={this.tm30.CCT[0]}\n              duv={this.tm30.DUV[0]}\n              small={true}\n            />\n            <div\n              style={{\n                width: \"5%\",\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            />\n            <VSPlot\n              a_test_coordinates={this.tm30.a_test_coordinates}\n              b_test_coordinates={this.tm30.b_test_coordinates}\n              a_ref_coordinates={this.tm30.a_ref_coordinates}\n              b_ref_coordinates={this.tm30.b_ref_coordinates}\n            />\n            <div\n              style={{\n                width: \"2%\",\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            />\n          </Card>\n        </Row>\n        <br />\n        <Row>\n          <h2 align=\"center\">Color Rendition by Hue-Angle Bin</h2>\n        </Row>\n        <Row>\n          <Card className=\"SideScroll\">\n            <div\n              style={{\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            >\n              <LCSPlot\n                data={this.tm30.local_chroma_shift}\n                long={true}\n              ></LCSPlot>\n            </div>\n            <div\n              style={{\n                width: \"2%\",\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            />\n            <div\n              style={{\n                position: \"inherit\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                paddingTop: \"2%\"\n              }}\n            >\n              <h5>Local Chroma Shift</h5>\n              Local Chroma Shift is determined from the average radial change{\" \"}\n              <br />\n              for the color evaluation samples within each hue-angle bin. Chroma{\" \"}\n              <br />\n              shift is a funciton of absolute chroma, so Local Chroma Shift{\" \"}\n              <br />\n              values are represented as a percentage. The number of samples per{\" \"}\n              <br />\n              bin (m), which can vary based on the CCT used for the calculation,{\" \"}\n              <br />\n              is shown at the top. [The colors of the bars are for visual <br />\n              orientation only.]\n            </div>\n          </Card>\n        </Row>\n        <Row>\n          <Card className=\"SideScroll\">\n            <div\n              style={{\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            >\n              <LHSPlot data={this.tm30.local_hue_shift} long={true}></LHSPlot>\n            </div>\n            <div\n              style={{\n                width: \"2%\",\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            />\n            <div\n              style={{\n                position: \"inherit\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                paddingTop: \"2%\"\n              }}\n            >\n              <h5>Local Hue Shift</h5>\n              Local hue shift is deteremined from the average change <br />\n              perpendicular to the hue-angle bin for the color evaluation <br />\n              samples within each hue-angle bin. The number of samples per bin{\" \"}\n              <br />\n              (m), which can vary based on the CCT used for the calculation, is{\" \"}\n              <br />\n              shown at the top. [The colors of the bars are for visual <br />\n              orientation only.]\n            </div>\n          </Card>\n        </Row>\n        <Row>\n          <Card className=\"SideScroll\">\n            <div\n              style={{\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            >\n              <LCFPlot\n                data={this.tm30.local_color_fidelity}\n                long={true}\n              ></LCFPlot>\n            </div>\n            <div\n              style={{\n                width: \"2%\",\n                position: \"inherit\",\n                display: \"inline-block\"\n              }}\n            />\n            <div\n              style={{\n                position: \"inherit\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                paddingTop: \"2%\"\n              }}\n            >\n              <h5>Local Color Fidelity</h5>\n              Local Color Fidelity is the average difference in CAM02-UCS for{\" \"}\n              <br />\n              the color evaluation samples in each hue-angle bin. The number of{\" \"}\n              <br />\n              samples per bin, which can vary based on the CCT used for the{\" \"}\n              <br />\n              calculation, is shown at the top. [The colors of the bars are for{\" \"}\n              <br />\n              visual orientation only.]\n            </div>\n          </Card>\n        </Row>\n      </Grid>\n    );\n  }\n}\n/**\n * Export the Graphical component\n */\nexport default Graphical;\n"]},"metadata":{},"sourceType":"module"}