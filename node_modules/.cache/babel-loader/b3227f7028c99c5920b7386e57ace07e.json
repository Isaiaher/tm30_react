{"ast":null,"code":"import _defineProperty from \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_SPD_WAVELENGTH, SET_EXAMPLE_OPEN, SET_PASTE_OPEN, SET_EXAMPLE, SET_CVG_OPTIONS_BIN_LABELS, SET_CVG_OPTIONS_BIN_DIVIDERS, SET_CVG_OPTIONS_CHROMA_ISOLINES } from \"../redux/types\";\nconst initialState = {\n  spd: [],\n  wavelengths: [],\n  loading: false,\n  example_open: false,\n  paste_open: false,\n  example: \"\",\n  bin_labels: true,\n  bin_dividers: true,\n  chroma_isolines: true //cvg_options: { bin_labels: true, bin_dividers: true, chroma_isolines: true }\n\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_SPD_WAVELENGTH:\n      return _objectSpread({}, state, {\n        spd: action.payload.spd,\n        wavelengths: action.payload.wavelengths\n      });\n\n    case SET_EXAMPLE_OPEN:\n      return _objectSpread({}, state, {\n        example_open: true,\n        paste_open: false\n      });\n\n    case SET_PASTE_OPEN:\n      return _objectSpread({}, state, {\n        example_open: false,\n        paste_open: true\n      });\n\n    case SET_EXAMPLE:\n      return _objectSpread({}, state, {\n        example: action.payload\n      });\n\n    case SET_CVG_OPTIONS_BIN_LABELS:\n      return _objectSpread({}, state, {\n        bin_labels: action.payload\n      });\n\n    case SET_CVG_OPTIONS_BIN_DIVIDERS:\n      return _objectSpread({}, state, {\n        bin_dividers: action.payload\n      });\n\n    case SET_CVG_OPTIONS_CHROMA_ISOLINES:\n      return _objectSpread({}, state, {\n        chroma_isolines: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/reducers/dataReducers.js"],"names":["SET_SPD_WAVELENGTH","SET_EXAMPLE_OPEN","SET_PASTE_OPEN","SET_EXAMPLE","SET_CVG_OPTIONS_BIN_LABELS","SET_CVG_OPTIONS_BIN_DIVIDERS","SET_CVG_OPTIONS_CHROMA_ISOLINES","initialState","spd","wavelengths","loading","example_open","paste_open","example","bin_labels","bin_dividers","chroma_isolines","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,kBADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,0BALF,EAMEC,4BANF,EAOEC,+BAPF,QAQO,gBARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,EADc;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,YAAY,EAAE,KAJK;AAKnBC,EAAAA,UAAU,EAAE,KALO;AAMnBC,EAAAA,OAAO,EAAE,EANU;AAOnBC,EAAAA,UAAU,EAAE,IAPO;AAQnBC,EAAAA,YAAY,EAAE,IARK;AASnBC,EAAAA,eAAe,EAAE,IATE,CAUnB;;AAVmB,CAArB;AAaA,eAAe,UAASC,KAAK,GAAGV,YAAjB,EAA+BW,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,kBAAL;AACE,+BACKiB,KADL;AAEET,QAAAA,GAAG,EAAEU,MAAM,CAACE,OAAP,CAAeZ,GAFtB;AAGEC,QAAAA,WAAW,EAAES,MAAM,CAACE,OAAP,CAAeX;AAH9B;;AAKF,SAAKR,gBAAL;AACE,+BACKgB,KADL;AAEEN,QAAAA,YAAY,EAAE,IAFhB;AAGEC,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKV,cAAL;AACE,+BACKe,KADL;AAEEN,QAAAA,YAAY,EAAE,KAFhB;AAGEC,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKT,WAAL;AACE,+BACKc,KADL;AAEEJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFlB;;AAIF,SAAKhB,0BAAL;AACE,+BACKa,KADL;AAEEH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFrB;;AAIF,SAAKf,4BAAL;AACE,+BACKY,KADL;AAEEF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAFvB;;AAIF,SAAKd,+BAAL;AACE,+BACKW,KADL;AAEED,QAAAA,eAAe,EAAEE,MAAM,CAACE;AAF1B;;AAIF;AACE,aAAOH,KAAP;AAxCJ;AA0CD","sourcesContent":["import {\n  SET_SPD_WAVELENGTH,\n  SET_EXAMPLE_OPEN,\n  SET_PASTE_OPEN,\n  SET_EXAMPLE,\n  SET_CVG_OPTIONS_BIN_LABELS,\n  SET_CVG_OPTIONS_BIN_DIVIDERS,\n  SET_CVG_OPTIONS_CHROMA_ISOLINES\n} from \"../redux/types\";\n\nconst initialState = {\n  spd: [],\n  wavelengths: [],\n  loading: false,\n  example_open: false,\n  paste_open: false,\n  example: \"\",\n  bin_labels: true,\n  bin_dividers: true,\n  chroma_isolines: true\n  //cvg_options: { bin_labels: true, bin_dividers: true, chroma_isolines: true }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SPD_WAVELENGTH:\n      return {\n        ...state,\n        spd: action.payload.spd,\n        wavelengths: action.payload.wavelengths\n      };\n    case SET_EXAMPLE_OPEN:\n      return {\n        ...state,\n        example_open: true,\n        paste_open: false\n      };\n    case SET_PASTE_OPEN:\n      return {\n        ...state,\n        example_open: false,\n        paste_open: true\n      };\n    case SET_EXAMPLE:\n      return {\n        ...state,\n        example: action.payload\n      };\n    case SET_CVG_OPTIONS_BIN_LABELS:\n      return {\n        ...state,\n        bin_labels: action.payload\n      };\n    case SET_CVG_OPTIONS_BIN_DIVIDERS:\n      return {\n        ...state,\n        bin_dividers: action.payload\n      };\n    case SET_CVG_OPTIONS_CHROMA_ISOLINES:\n      return {\n        ...state,\n        chroma_isolines: action.payload\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}