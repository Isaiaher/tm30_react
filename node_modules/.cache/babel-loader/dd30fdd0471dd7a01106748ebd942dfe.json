{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _phoneParser = require('../__helpers/phoneParser');\n\nvar _phoneParser2 = _interopRequireDefault(_phoneParser);\n\nvar _Avatar = require('../Avatar');\n\nvar _Avatar2 = _interopRequireDefault(_Avatar);\n\nvar _Icon = require('../Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _config = require('../config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _departments = require('../__helpers/departments');\n\nvar _departments2 = _interopRequireDefault(_departments);\n\nvar _Image = require('../Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar ProfileCard = function ProfileCard(_ref) {\n  var isCompact = _ref.isCompact,\n      isInsidePopover = _ref.isInsidePopover,\n      onCloseCallback = _ref.onCloseCallback,\n      person = _ref.person;\n  var id = person.id,\n      firstName = person.firstName,\n      lastName = person.lastName,\n      title = person.title,\n      phoneNumber = person.phoneNumber,\n      emailAddress = person.emailAddress,\n      mailstop = person.mailstop,\n      portraitLink = person.portraitLink; // Person may not have an assigned facility and or space (eg. works from home)\n\n  var _person$facility = person.facility;\n  _person$facility = _person$facility === undefined ? {} : _person$facility;\n  var _person$facility$abbr = _person$facility.abbreviation,\n      abbreviation = _person$facility$abbr === undefined ? null : _person$facility$abbr;\n  var _person$space = person.space;\n  _person$space = _person$space === undefined ? {} : _person$space;\n  var _person$space$locatio = _person$space.locationId,\n      locationId = _person$space$locatio === undefined ? null : _person$space$locatio,\n      _person$space$name = _person$space.name,\n      locationName = _person$space$name === undefined ? null : _person$space$name;\n  var _person$department = person.department;\n  _person$department = _person$department === undefined ? {} : _person$department;\n  var _person$department$id = _person$department.id,\n      departmentId = _person$department$id === undefined ? null : _person$department$id,\n      _person$department$co = _person$department.code,\n      code = _person$department$co === undefined ? null : _person$department$co,\n      _person$department$na = _person$department.name,\n      departmentName = _person$department$na === undefined ? null : _person$department$na;\n  var deptColor = code ? (0, _departments2['default'])(code) : 'platinum-50';\n  var profileClasses = (0, _classnames2['default'])('PnnlProfileCard', {\n    isCompact: isCompact\n  }, deptColor);\n  var closeButton = isInsidePopover ? _react2['default'].createElement('button', {\n    className: 'close',\n    onClick: onCloseCallback || null\n  }, '\\xD7') : null;\n  var name = firstName + ' ' + lastName;\n  var avatarText = firstName.slice(0, 1);\n  avatarText = avatarText.concat(lastName.slice(0, 1));\n  var avatarComponent = portraitLink !== undefined ? _react2['default'].createElement(_Avatar2['default'], {\n    src: portraitLink,\n    size: 'lg'\n  }) : _react2['default'].createElement(_Avatar2['default'], {\n    size: 'lg'\n  }, avatarText); // Only allow the IM link if the person has a PNNL email address\n\n  var pnnlIM = emailAddress && emailAddress.indexOf('@pnnl.gov') !== -1;\n  return _react2['default'].createElement('div', {\n    className: profileClasses,\n    key: id\n  }, _react2['default'].createElement('div', null, closeButton), _react2['default'].createElement('section', {\n    className: 'person'\n  }, avatarComponent, firstName && lastName ? _react2['default'].createElement('h1', null, name) : null, title ? _react2['default'].createElement('small', {\n    className: 'jobTitle'\n  }, title) : null), _react2['default'].createElement('ul', {\n    className: 'contacts'\n  }, pnnlIM && _react2['default'].createElement('li', {\n    className: 'lync'\n  }, _react2['default'].createElement(_Icon2['default'], {\n    icon: 'comment',\n    iconDisplay: 'outline'\n  }), _react2['default'].createElement('a', {\n    href: 'sip:' + emailAddress.toLowerCase()\n  }, 'Instant Message')), phoneNumber && _react2['default'].createElement('li', {\n    className: 'phone'\n  }, _react2['default'].createElement(_Icon2['default'], {\n    icon: 'phone',\n    iconDisplay: 'outline'\n  }), _react2['default'].createElement('a', {\n    href: 'tel:' + (0, _phoneParser2['default'])(phoneNumber, '+1xxxxxxxxxx')\n  }, (0, _phoneParser2['default'])(phoneNumber, '(xxx) xxx-xxxx'))), emailAddress && _react2['default'].createElement('li', {\n    className: 'email'\n  }, _react2['default'].createElement(_Icon2['default'], {\n    icon: 'email',\n    iconDisplay: 'outline'\n  }), _react2['default'].createElement('a', {\n    href: 'mailto:' + emailAddress.toLowerCase()\n  }, emailAddress.toLowerCase())), locationId && _react2['default'].createElement('li', {\n    className: 'location'\n  }, _react2['default'].createElement(_Icon2['default'], {\n    icon: 'location',\n    iconDisplay: 'outline'\n  }), _react2['default'].createElement('a', {\n    href: _config2['default'].mitLocation(locationId),\n    target: '_blank'\n  }, abbreviation ? _react2['default'].createElement('span', {\n    className: 'facility_abbreviation'\n  }, abbreviation, ' ') : null, locationName ? _react2['default'].createElement('span', {\n    className: 'facility_location'\n  }, locationName) : null, mailstop ? _react2['default'].createElement('span', {\n    className: 'mailstop'\n  }, 'MSIN ' + mailstop) : null, locationId ? _react2['default'].createElement(_Image2['default'], {\n    src: _config2['default'].opwhse.locationImage(locationId),\n    alt: locationName\n  }) : null)), departmentId && _react2['default'].createElement('li', {\n    className: 'department'\n  }, _react2['default'].createElement(_Avatar2['default'], {\n    size: 'xs',\n    className: deptColor\n  }, _react2['default'].createElement(_Icon2['default'], {\n    icon: 'org'\n  })), _react2['default'].createElement('a', {\n    href: _config2['default'].deptLocation(departmentId),\n    target: '_blank'\n  }, departmentName))));\n};\n/* eslint react/jsx-no-bind: 0 */\n\n\nProfileCard.propTypes = {\n  /**\n    * A Person object for the person you want to create the card for.\n    *\n    * The object needs to have the same naming convention as: https://api.pnl.gov/operations/v2/people/{hid}/?expand=space,facility,department\n    * @required\n    * */\n  person: _propTypes2['default'].shape({\n    id: _propTypes2['default'].string,\n    firstName: _propTypes2['default'].string,\n    lastName: _propTypes2['default'].string,\n    title: _propTypes2['default'].string,\n    phoneNumber: _propTypes2['default'].string,\n    emailAddress: _propTypes2['default'].string,\n    mailstop: _propTypes2['default'].string,\n    mapLink: _propTypes2['default'].string,\n    portraitLink: _propTypes2['default'].string,\n    facility: _propTypes2['default'].shape({\n      abbreviation: _propTypes2['default'].string\n    }),\n    space: _propTypes2['default'].shape({\n      locationId: _propTypes2['default'].string,\n      name: _propTypes2['default'].string\n    }),\n    department: _propTypes2['default'].shape({\n      id: _propTypes2['default'].string,\n      code: _propTypes2['default'].string,\n      name: _propTypes2['default'].string\n    })\n  }).isRequired,\n\n  /**\n    * Callback you want to run when the close button is `clicked`.\n    *\n    * Only applies when `isInsidePopover` property is `true`\n    * */\n  onCloseCallback: _propTypes2['default'].func,\n\n  /**\n    * Whether or not the contact card is in a compact format.\n    * */\n  isCompact: _propTypes2['default'].bool,\n\n  /**\n    * Whether or not the contact card is included in a Popover.\n    * */\n  isInsidePopover: _propTypes2['default'].bool\n};\nProfileCard.defaultProps = {\n  onCloseCallback: undefined,\n  isCompact: false,\n  isInsidePopover: false\n};\nexports['default'] = ProfileCard;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}