{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n    var i;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [{\n        name: \"Test\",\n        x: this.xtest,\n        y: this.ytest,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        marker: {\n          color: \"red\"\n        }\n      }, {\n        /*\n        name: \"Reference\",\n        x: this.wavelength,\n        y: this.spd_ref,\n        type: \"scatter\",\n        mode: \"lines+points\",\n        marker: { color: \"black\" }\n        */\n      }],\n      layout: {\n        width: 500,\n        height: 500,\n        margin: {\n          l: 10,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 4\n        },\n        xaxis: {\n          title: {\n            text: \"\",\n            showticklabels: false\n          }\n        },\n        yaxis: {\n          title: {\n            text: \"\"\n          },\n          tickformat: \"\",\n          showticklabels: false\n        }\n      },\n      config: {\n        displayModeBar: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default CVGPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx"],"names":["React","Component","Plot","CVGPlot","constructor","props","xtest","push","ytest","i","render","name","x","y","type","line","shape","smoothing","mode","marker","color","width","height","margin","l","r","b","t","pad","xaxis","title","text","showticklabels","yaxis","tickformat","displayModeBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKD,KAAL,CAAWC,KAAxB;AACA,SAAKA,KAAL,CAAWC,IAAX,CAAgB,KAAKD,KAAL,CAAW,CAAX,CAAhB;AACA,SAAKE,KAAL,GAAa,KAAKH,KAAL,CAAWG,KAAxB;AACA,SAAKA,KAAL,CAAWD,IAAX,CAAgB,KAAKC,KAAL,CAAW,CAAX,CAAhB;AACA,QAAIC,CAAJ;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,CAAC,EAAE,KAAKN,KAFV;AAGEO,QAAAA,CAAC,EAAE,KAAKL,KAHV;AAIEM,QAAAA,IAAI,EAAE,SAJR;AAKEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEC,QAAAA,IAAI,EAAE,cANR;AAOEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAPV,OADI,EAUJ;AACE;;;;;;;;AADF,OAVI,CADR;AAsBE,MAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,GADD;AAENC,QAAAA,MAAM,EAAE,GAFF;AAGNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE,EADG;AAENC,UAAAA,CAAC,EAAE,EAFG;AAGNC,UAAAA,CAAC,EAAE,EAHG;AAINC,UAAAA,CAAC,EAAE,EAJG;AAKNC,UAAAA,GAAG,EAAE;AALC,SAHF;AAUNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE,EADD;AAELC,YAAAA,cAAc,EAAE;AAFX;AADF,SAVD;AAgBNC,QAAAA,KAAK,EAAE;AACLH,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WADF;AAILG,UAAAA,UAAU,EAAE,EAJP;AAKLF,UAAAA,cAAc,EAAE;AALX;AAhBD,OAtBV;AA8CE,MAAA,MAAM,EAAE;AAAEG,QAAAA,cAAc,EAAE;AAAlB,OA9CV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAoDD;;AA9DoC;AAiEvC,eAAehC,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n    var i;\n  }\n  render() {\n    return (\n      <div>\n        <Plot\n          data={[\n            {\n              name: \"Test\",\n              x: this.xtest,\n              y: this.ytest,\n              type: \"scatter\",\n              line: { shape: \"spline\", smoothing: 1.3 },\n              mode: \"lines+points\",\n              marker: { color: \"red\" }\n            },\n            {\n              /*\n              name: \"Reference\",\n              x: this.wavelength,\n              y: this.spd_ref,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              marker: { color: \"black\" }\n              */\n            }\n          ]}\n          layout={{\n            width: 500,\n            height: 500,\n            margin: {\n              l: 10,\n              r: 10,\n              b: 45,\n              t: 10,\n              pad: 4\n            },\n            xaxis: {\n              title: {\n                text: \"\",\n                showticklabels: false\n              }\n            },\n            yaxis: {\n              title: {\n                text: \"\"\n              },\n              tickformat: \"\",\n              showticklabels: false\n            }\n          }}\n          config={{ displayModeBar: false }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CVGPlot;\n"]},"metadata":{},"sourceType":"module"}