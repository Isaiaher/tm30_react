{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/LCFPlot.jsx\";\n\n/**\n * Local Hue Shift Bar Graph\n *\n * A component for the Local Hue Shift Bar Graph. Your basic\n * bar graph with the \"local_hue_shift\" data from the returned JSON\n * from the C code. There are a few conditionals if it is Big (Graphical Results)\n * or not (the basic results). The difference between the two is pixel size and\n * spacing between the bars.\n *\n * TODO - Add the Samples per bin (m) above each bar\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n/**\n * LHSPlot Class\n */\n\nexport class LHSPlot extends Component {\n  /**\n   * Constructor that pulls in data from the props.\n   * Also uses the \"long\" variable boolean to check\n   * if it is the graph for the Graphical page\n   * which will make the graph longer and have more\n   * spacing in between the bars\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    var lcs = this.props.data; //The lcs variable name is a remnant of copying and pasting from another component\n\n    var i;\n    this.long = this.props.long;\n    /**\n     * Check whether it is the long graph or not.\n     * The long graph is used in the graphical results\n     * tab in the report page.\n     */\n\n    if (this.long) {\n      this.width = 800;\n      this.height = 400;\n      this.bar_gap = 5;\n    } else {\n      this.width = 400;\n      this.height = 350;\n      this.bar_gap = 0;\n    }\n\n    this.x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n    this.y = [lcs[0], lcs[1], lcs[2], lcs[3], lcs[4], lcs[5], lcs[6], lcs[7], lcs[8], lcs[9], lcs[10], lcs[11], lcs[12], lcs[13], lcs[14], lcs[15]];\n    this.y_rounded = [];\n\n    for (i = 0; i < 16; i++) {\n      this.y_rounded[i] = \"\".concat(Math.round(this.y[i]));\n    }\n    /**\n     * Colors for each bar/Huebin. Used throughout the code.\n     */\n\n\n    this.bar_colors = [\"#b45c60\", \"#cb7761\", \"#cb824b\", \"#d7ad67\", \"#ac9a5d\", \"#919E60\", \"#678B5F\", \"#62B08F\", \"#7CBABA\", \"#2C797D\", \"#54778C\", \"#7189B1\", \"#988CA9\", \"#735876\", \"#8F6682\", \"#B97B8E\"];\n  }\n  /**\n   * Render method for the LCFPlot\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      title: null,\n      data: [{\n        name: \"\",\n        type: \"bar\",\n        x: this.x,\n        y: this.y,\n        marker: {\n          color: this.bar_colors\n        },\n        textfont: {\n          size: 14\n        },\n        text: this.y_rounded,\n        textposition: \"outside\",\n        hovertemplate: \"R<sub>f,h%{x}</sub>: %{text}\"\n      }],\n      layout: {\n        width: this.width,\n        height: this.height,\n        margin: {\n          l: 60,\n          r: 0,\n          b: 45,\n          t: 10,\n          pad: 4\n        },\n        xaxis: {\n          title: {\n            text: \"Hue-Angle Bin (<i>j</i>)\"\n          },\n          tickmode: \"linear\"\n        },\n        yaxis: {\n          range: [0, 115],\n          title: {\n            text: \"Local Color Fidelity (R<sub><i>f,hj</i></sub>)\"\n          },\n          tickformat: \"\"\n        },\n        bargap: this.bar_gap\n      },\n      config: {\n        displayModeBar: true,\n        showSendToCloud: true,\n        displaylogo: false,\n        modeBarButtonsToRemove: [\"zoom2d\", \"pan2d\", \"select2d\", \"lasso2d\", \"zoomIn2d\", \"zoomOut2d\", \"autoScale2d\", \"resetScale2d\", \"hoverClosestCartesian\", \"hoverCompareCartesian\", \"zoom3d\", \"pan3d\", \"resetCameraDefault3d\", \"resetCameraLastSave3d\", \"hoverClosest3d\", \"orbitRotation\", \"tableRotation\", \"zoomInGeo\", \"zoomOutGeo\", \"resetGeo\", \"hoverClosestGeo\", \"sendDataToCloud\", \"hoverClosestGl2d\", \"hoverClosestPie\", \"toggleHover\", \"resetViews\", \"toggleSpikelines\", \"resetViewMapbox\"],\n        responsive: true,\n        toImageButtonOptions: {\n          format: \"png\",\n          // one of png, svg, jpeg, webp\n          filename: \"custom_image\",\n          height: 500,\n          width: 700,\n          scale: 1 // Multiply title/legend/axis/canvas sizes by this factor\n\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default LHSPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/LCFPlot.jsx"],"names":["React","Component","Plot","LHSPlot","constructor","props","lcs","data","i","long","width","height","bar_gap","x","y","y_rounded","Math","round","bar_colors","render","name","type","marker","color","textfont","size","text","textposition","hovertemplate","margin","l","r","b","t","pad","xaxis","title","tickmode","yaxis","range","tickformat","bargap","displayModeBar","showSendToCloud","displaylogo","modeBarButtonsToRemove","responsive","toImageButtonOptions","format","filename","scale"],"mappings":"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","sourcesContent":["/**\n * Local Hue Shift Bar Graph\n *\n * A component for the Local Hue Shift Bar Graph. Your basic\n * bar graph with the \"local_hue_shift\" data from the returned JSON\n * from the C code. There are a few conditionals if it is Big (Graphical Results)\n * or not (the basic results). The difference between the two is pixel size and\n * spacing between the bars.\n *\n * TODO - Add the Samples per bin (m) above each bar\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n/**\n * LHSPlot Class\n */\nexport class LHSPlot extends Component {\n  /**\n   * Constructor that pulls in data from the props.\n   * Also uses the \"long\" variable boolean to check\n   * if it is the graph for the Graphical page\n   * which will make the graph longer and have more\n   * spacing in between the bars\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    var lcs = this.props.data; //The lcs variable name is a remnant of copying and pasting from another component\n    var i;\n    this.long = this.props.long;\n    /**\n     * Check whether it is the long graph or not.\n     * The long graph is used in the graphical results\n     * tab in the report page.\n     */\n    if (this.long) {\n      this.width = 800;\n      this.height = 400;\n      this.bar_gap = 5;\n    } else {\n      this.width = 400;\n      this.height = 350;\n      this.bar_gap = 0;\n    }\n\n    this.x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n    this.y = [\n      lcs[0],\n      lcs[1],\n      lcs[2],\n      lcs[3],\n      lcs[4],\n      lcs[5],\n      lcs[6],\n      lcs[7],\n      lcs[8],\n      lcs[9],\n      lcs[10],\n      lcs[11],\n      lcs[12],\n      lcs[13],\n      lcs[14],\n      lcs[15]\n    ];\n\n    this.y_rounded = [];\n\n    for (i = 0; i < 16; i++) {\n      this.y_rounded[i] = `${Math.round(this.y[i])}`;\n    }\n    /**\n     * Colors for each bar/Huebin. Used throughout the code.\n     */\n    this.bar_colors = [\n      \"#b45c60\",\n      \"#cb7761\",\n      \"#cb824b\",\n      \"#d7ad67\",\n      \"#ac9a5d\",\n      \"#919E60\",\n      \"#678B5F\",\n      \"#62B08F\",\n      \"#7CBABA\",\n      \"#2C797D\",\n      \"#54778C\",\n      \"#7189B1\",\n      \"#988CA9\",\n      \"#735876\",\n      \"#8F6682\",\n      \"#B97B8E\"\n    ];\n  }\n  /**\n   * Render method for the LCFPlot\n   */\n  render() {\n    return (\n      <div>\n        <Plot\n          title={null}\n          data={[\n            {\n              name: \"\",\n              type: \"bar\",\n              x: this.x,\n              y: this.y,\n              marker: {\n                color: this.bar_colors\n              },\n              textfont: {\n                size: 14\n              },\n              text: this.y_rounded,\n              textposition: \"outside\",\n              hovertemplate: `R<sub>f,h%{x}</sub>: %{text}`\n            }\n          ]}\n          layout={{\n            width: this.width,\n            height: this.height,\n            margin: {\n              l: 60,\n              r: 0,\n              b: 45,\n              t: 10,\n              pad: 4\n            },\n            xaxis: {\n              title: {\n                text: \"Hue-Angle Bin (<i>j</i>)\"\n              },\n              tickmode: \"linear\"\n            },\n            yaxis: {\n              range: [0, 115],\n              title: {\n                text: \"Local Color Fidelity (R<sub><i>f,hj</i></sub>)\"\n              },\n              tickformat: \"\"\n            },\n            bargap: this.bar_gap\n          }}\n          config={{\n            displayModeBar: true,\n            showSendToCloud: true,\n            displaylogo: false,\n            modeBarButtonsToRemove: [\n              \"zoom2d\",\n              \"pan2d\",\n              \"select2d\",\n              \"lasso2d\",\n              \"zoomIn2d\",\n              \"zoomOut2d\",\n              \"autoScale2d\",\n              \"resetScale2d\",\n              \"hoverClosestCartesian\",\n              \"hoverCompareCartesian\",\n              \"zoom3d\",\n              \"pan3d\",\n              \"resetCameraDefault3d\",\n              \"resetCameraLastSave3d\",\n              \"hoverClosest3d\",\n              \"orbitRotation\",\n              \"tableRotation\",\n              \"zoomInGeo\",\n              \"zoomOutGeo\",\n              \"resetGeo\",\n              \"hoverClosestGeo\",\n              \"sendDataToCloud\",\n              \"hoverClosestGl2d\",\n              \"hoverClosestPie\",\n              \"toggleHover\",\n              \"resetViews\",\n              \"toggleSpikelines\",\n              \"resetViewMapbox\"\n            ],\n            responsive: true,\n            toImageButtonOptions: {\n              format: \"png\", // one of png, svg, jpeg, webp\n              filename: \"custom_image\",\n              height: 500,\n              width: 700,\n              scale: 1 // Multiply title/legend/axis/canvas sizes by this factor\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LHSPlot;\n"]},"metadata":{},"sourceType":"module"}