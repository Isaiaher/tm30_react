'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Link = require('react-router-dom/Link');

var _Link2 = _interopRequireDefault(_Link);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Badge = require('react-bootstrap/lib/Badge');

var _Badge2 = _interopRequireDefault(_Badge);

var _Button = require('react-bootstrap/lib/Button');

var _Button2 = _interopRequireDefault(_Button);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ValidationIcon = require('../ValidationIcon');

var _ValidationIcon2 = _interopRequireDefault(_ValidationIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var SidebarItem = function (_React$Component) {
  (0, _inherits3['default'])(SidebarItem, _React$Component);

  function SidebarItem(props) {
    (0, _classCallCheck3['default'])(this, SidebarItem);

    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));

    _this.state = {
      itemActive: _this.props.itemActive
    };

    _this.renderAnchor = _this.renderAnchor.bind(_this);
    _this.renderButton = _this.renderButton.bind(_this);
    _this.renderValidation = _this.renderValidation.bind(_this);
    return _this;
  }

  SidebarItem.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    this.setState({
      itemActive: nextProps.itemActive
    });
  };

  SidebarItem.prototype.renderAnchor = function renderAnchor() {
    var _props = this.props,
        title = _props.title,
        count = _props.count,
        href = _props.href,
        validationState = _props.validationState;
    /* eslint-disable jsx-a11y/anchor-is-valid */

    return _react2['default'].createElement(
      _Link2['default'],
      { to: href },
      validationState && this.renderValidation(),
      title,
      count && _react2['default'].createElement(
        _Badge2['default'],
        null,
        count
      )
    );
    /* eslint-enable jsx-a11y/anchor-is-valid */
  };

  SidebarItem.prototype.renderButton = function renderButton() {
    var _props2 = this.props,
        title = _props2.title,
        count = _props2.count,
        onClick = _props2.onClick,
        validationState = _props2.validationState;


    return _react2['default'].createElement(
      _Button2['default'],
      { bsStyle: 'link', onClick: onClick },
      validationState && this.renderValidation(),
      title,
      count && _react2['default'].createElement(
        _Badge2['default'],
        null,
        count
      )
    );
  };

  SidebarItem.prototype.renderValidation = function renderValidation() {
    var validationState = this.props.validationState;


    return _react2['default'].createElement(_ValidationIcon2['default'], { validationState: validationState });
  };

  SidebarItem.prototype.render = function render() {
    var _props3 = this.props,
        onClick = _props3.onClick,
        children = _props3.children;

    var itemClasses = (0, _classnames2['default'])('PnnlSidebarItem', { active: this.state.itemActive });

    var actionLink = null;
    if (onClick) {
      actionLink = this.renderButton();
    } else {
      actionLink = this.renderAnchor();
    }

    return _react2['default'].createElement(
      'div',
      { className: itemClasses },
      actionLink,
      children
    );
  };

  return SidebarItem;
}(_react2['default'].Component);

SidebarItem.propTypes = {
  /**
   * If included, adds a Badge component with the count to the SidebarItem.
   */
  count: _propTypes2['default'].number,
  /**
   * If no onClick prop is supplied, a Link to this href will be created as the major element of the SidebarItem instead of a Button.
   */
  href: _propTypes2['default'].string,
  /**
   * Whether this SidebarItem is currently active/visible.
   */
  itemActive: _propTypes2['default'].bool,
  /**
   * Will create a Button to trigger the click action as the major element of the SidebarItem instead of a Link. The function will also be called onKeypress
   */
  onClick: _propTypes2['default'].func,
  /**
   * The label to be displayed in the Link/Button.
   * @required
   */
  title: _propTypes2['default'].string.isRequired,
  /**
   * If the SidebarItem has validation, display an icon summarizing the validation state. Adds a span and ValidationIcon before the title.
   */
  validationState: _propTypes2['default'].oneOf(['success', 'error', 'incomplete', 'warning']),
  /**
   * Additional components to be added to the SidebarItem.  Actions and Dropdowns are common items.
   */
  children: _propTypes2['default'].node
};

SidebarItem.defaultProps = {
  count: null,
  href: '',
  itemActive: false,
  onClick: undefined,
  validationState: null,
  children: null
};

exports['default'] = SidebarItem;
module.exports = exports['default'];