/* eslint import/no-extraneous-dependencies: ["error", {"devDependencies": true}] */
import 'whatwg-fetch';
import React from 'react';
import { storiesOf } from '@storybook/react'; // eslint-disable-line
import { action } from '@storybook/addon-actions'; // eslint-disable-line
import { MenuItem, Dropdown } from 'react-bootstrap';


import * as C from '../index';

storiesOf('Sidebar', module)

  .add('with items', () => {
    const sidebar = (
      <C.Sidebar>
        <C.SidebarItem title="Item 1" href="http://labweb.pnl.gov" />
        <C.SidebarItem title="Item 2" itemActive count={1} onClick={action('clicked item 2')} />
        <C.SidebarItem title="Item 3" onClick={action('clicked item 3')} />
      </C.Sidebar>
    );
    const dummyContent = [];
    for (let i = 0; i < 30; i += 1) {
      dummyContent.push(<p key={i}>Dummy Content</p>);
    }
    return (
      <C.SidebarWrapper sidebarComponent={sidebar}>
        <h1>Other Content</h1>
        {dummyContent}
      </C.SidebarWrapper>
    );
  })
  .add('with actions and menus', () => {
    const menuAndTrigger = (
      <Dropdown id="dropdown-custom-menu">
        <C.Action bsRole="toggle" icon="menu-android-horizontal" />

        <Dropdown.Menu>
          <MenuItem eventKey="1">Red</MenuItem>
          <MenuItem eventKey="2">Blue</MenuItem>
          <MenuItem eventKey="3">Orange</MenuItem>
          <MenuItem eventKey="4">Red-Orange</MenuItem>
        </Dropdown.Menu>
      </Dropdown>
    );

    const firstHeader = (
      <C.SidebarHeader title="Heading 1" validationState="success" collapsible>
        <C.Action icon="refresh" onClick={action('clicked heading refresh')} />
        {menuAndTrigger}
      </C.SidebarHeader>
    );

    const sidebar = (
      <C.Sidebar>
        <C.SidebarPanel header={firstHeader} collapsible>
          <C.SidebarItem title="Item 1" href="http://labweb.pnl.gov" validationState="success">
            <C.Action icon="edit" onClick={action('clicked item 1 edit')} />
            <C.Action icon="trash" onClick={action('clicked item 1 delete')} />
          </C.SidebarItem>
          <C.SidebarItem title="Item 2" itemActive count={1} validationState="success" onClick={action('clicked item 2')}>
            <C.Action icon="trash" onClick={action('clicked item 2 delete')} />
          </C.SidebarItem>
          <C.SidebarItem title="Item 3" validationState="success" onClick={action('clicked item 3')}>
            <C.Action icon="trash" onClick={action('clicked item 3 delete')} />
          </C.SidebarItem>
        </C.SidebarPanel>
        <C.SidebarPanel header="Toggle 2" validationState="error" collapsible>
          <C.SidebarItem title="Item 4" href="http://labweb.pnl.gov" validationState="incomplete">
            <C.Action icon="edit" onClick={action('clicked item 1 edit')} />
            {menuAndTrigger}
          </C.SidebarItem>
          <C.SidebarItem title="Item 5" validationState="warning" count={2} onClick={action('clicked item 5')}>
            {menuAndTrigger}
          </C.SidebarItem>
          <C.SidebarItem title="Item 6" validationState="error" onClick={action('clicked item 6')} />
        </C.SidebarPanel>
      </C.Sidebar>
    );

    const dummyContent = [];
    for (let i = 0; i < 30; i += 1) {
      dummyContent.push(<p key={i}>Dummy Content</p>);
    }
    return (
      <C.SidebarWrapper sidebarComponent={sidebar} collapsible fluid>
        <h1>Other Content</h1>
        {dummyContent}
      </C.SidebarWrapper>
    );
  });
