import React from 'react';
import PropTypes from 'prop-types';
import Panel from 'react-bootstrap/lib/Panel';
import SidebarHeader from '../SidebarHeader';

class SidebarPanel extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      open: this.props.open,
    };

    this.togglePanelVisibility = this.togglePanelVisibility.bind(this);
    this.buildHeader = this.buildHeader.bind(this);
  }

  togglePanelVisibility() {
    this.setState({
      open: !this.state.open,
    });
  }

  buildHeader(isOpen) {
    const { header, collapsible, validationState } = this.props;
    if (typeof header === 'string') {
      return (
        <SidebarHeader open={isOpen} validationState={validationState} title={header} collapsible={collapsible} />
      );
    }

    return header;
  }

  render() {
    const { children, collapsible } = this.props;
    const headerElement = this.buildHeader(this.state.open);

    return (
      <Panel expanded={this.state.open} onToggle={this.togglePanelVisibility}>
        {headerElement}
        <Panel.Body collapsible={collapsible}>
          {children}
        </Panel.Body>
      </Panel>
    );
  }
}

SidebarPanel.propTypes = {
  /**
   * Whether the SidebarPanel can be collapsed by triggering a connected SidebarHeader.
   */
  collapsible: PropTypes.bool,
  /**
   * Either a pre-built SidebarHeader component, or a title to be used in a default SidebarHeader. Unless you have additional Actions to be contained in a custom SidebarHeader, the default should do what you want.
   * @required
   */
  header: PropTypes.oneOfType([
    PropTypes.node,
    PropTypes.string
  ]).isRequired,
  /**
   * Whether the SidebarPanel is open, or not.
   */
  open: PropTypes.bool,
  /**
   * If the SidebarPanel has validation, display an icon summarizing the validation state. Adds a span and Icon before the title.
   */
  validationState: PropTypes.oneOf(['success', 'error', 'incomplete', 'warning']),
  /**
   * The content to be displayed after the SidebarHeader.  Often a combination of SidebarItem, Timeline, or other form inputs.
   * @required
   */
  children: PropTypes.node.isRequired,
};

SidebarPanel.defaultProps = {
  collapsible: false,
  open: true,
  validationState: null,
};

export default SidebarPanel;
