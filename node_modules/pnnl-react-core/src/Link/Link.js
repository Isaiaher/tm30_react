import React from 'react';
import NavLink from 'react-router-dom/NavLink';
import PropTypes from 'prop-types';

export default class Link extends React.Component {
  isInternal() {
    const { to } = this.props;
    return (to.indexOf('http') !== 0 && to.indexOf('mailto') !== 0 && to.indexOf('tel') !== 0 && to.indexOf('sip') !== 0 && to.indexOf('pnnlinstaller') !== 0);
  }

  render() {
    const {
      to, children, className, activeClassName, onlyActiveOnIndex,
    } = this.props;

    if (this.isInternal()) {
      return (
        <NavLink to={to} className={className} activeClassName={activeClassName} exact={onlyActiveOnIndex}>
          {children}
        </NavLink>);
    }

    return (<a href={to} className={className}>{children}</a>);
  }
}

Link.propTypes = {
  /**
    * The URL that you want to link to.
    * @required
    * */
  to: PropTypes.string.isRequired,
  /**
    * The link passed as children
    * @required
    * */
  children: PropTypes.node.isRequired,
  /**
    * A class to apply to the link, if you need app-specific styling
    * */
  className: PropTypes.string,
  /**
    * The class to apply when the link is active (may we suggest "active"?)
    * */
  activeClassName: PropTypes.string,
  /**
    * When this is true the active class will only be applied when the path matches exactly, not for any sub-page matches
    * */
  onlyActiveOnIndex: PropTypes.bool,
};

Link.defaultProps = {
  activeClassName: 'active',
  onlyActiveOnIndex: true,
  className: '',
};
