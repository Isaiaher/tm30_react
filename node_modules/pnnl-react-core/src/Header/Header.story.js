/* eslint import/no-extraneous-dependencies: ["error", {"devDependencies": true}] */
import 'whatwg-fetch';
import React from 'react';
import { storiesOf } from '@storybook/react'; // eslint-disable-line
import { Col } from 'react-bootstrap';
import { BrowserRouter, Route } from 'react-router-dom';

import * as C from '../index';

storiesOf('Header', module)
  .add('with navigation', () => {
    const nav = (
      <C.NavBar>
        <Col sm={2} componentClass="ul">
          <C.NavItem to="tel:5095555555" text="Phone Home" icon="phone" />
        </Col>
        <Col sm={8} componentClass="ul">
          <C.NavItem to="/" icon="list" text="Dashboard" onlyActiveOnIndex />
          <C.NavItem to="/answers" icon="comment" text="Answers" />
          <C.NavItem to="/feedback" icon="thumbs-up" text="Feedback" />
          <C.NavItem to="/system-messages" icon="alert" text="System Messages" />
        </Col>
        <Col sm={2} componentClass="ul">
          <C.NavItem to="mailto:somebody@pnnl.gov" icon="email" text="Email" />
        </Col>
      </C.NavBar>
    );

    return (
      <BrowserRouter>
        <Route
          path="/"
          render={() => (
            <C.Header
              appTitle="PNNL React Core"
              hasSearch={false}
              primaryNav={nav}
            />
          )}
        />
      </BrowserRouter>
    );
  })
  .add('with custom className', () => {
    const nav = (
      <C.NavBar>
        <Col componentClass="ul" style={{ textAlign: 'center' }}>
          <C.NavItem to="/" icon="list" text="Dashboard" onlyActiveOnIndex />
          <C.NavItem to="/answers" icon="comment" text="Answers" />
          <C.NavItem to="/feedback" icon="thumbs-up" text="Feedback" />
          <C.NavItem to="/system-messages" icon="alert" text="System Messages" />
        </Col>
      </C.NavBar>
    );

    return (
      <BrowserRouter>
        <Route
          path="/"
          render={() => (
            <C.Header
              appTitle="PNNL React Core"
              hasSearch={false}
              primaryNav={nav}
              className="topaz"
            />
          )}
        />
      </BrowserRouter>
    );
  })
  .add('with parent label', () => {
    const nav = (
      <C.NavBar>
        <Col componentClass="ul" style={{ textAlign: 'center' }}>
          <C.NavItem to="/" icon="list" text="Dashboard" onlyActiveOnIndex />
          <C.NavItem to="/answers" icon="comment" text="Answers" />
          <C.NavItem to="/feedback" icon="thumbs-up" text="Feedback" />
          <C.NavItem to="/system-messages" icon="alert" text="System Messages" />
        </Col>
      </C.NavBar>
    );

    return (
      <BrowserRouter>
        <Route
          path="/"
          render={() => (
            <C.Header
              appTitle="PNNL React Core"
              hasSearch={false}
              primaryNav={nav}
              parentSiteProps={{
                label: 'myPNNL /',
              }}
            />
          )}
        />
      </BrowserRouter>
    );
  })
  .add('with linked parent label', () => {
    const nav = (
      <C.NavBar>
        <Col componentClass="ul" style={{ textAlign: 'center' }}>
          <C.NavItem to="/" icon="list" text="Dashboard" onlyActiveOnIndex />
          <C.NavItem to="/answers" icon="comment" text="Answers" />
          <C.NavItem to="/feedback" icon="thumbs-up" text="Feedback" />
          <C.NavItem to="/system-messages" icon="alert" text="System Messages" />
        </Col>
      </C.NavBar>
    );

    return (
      <BrowserRouter>
        <Route
          path="/"
          render={() => (
            <C.Header
              appTitle="PNNL React Core"
              hasSearch={false}
              primaryNav={nav}
              parentSiteProps={{
                label: 'myPNNL /',
                linkHref: 'https://my.pnnl.gov'
              }}
            />
          )}
        />
      </BrowserRouter>
    );
  })
  .add('with linked parent label image', () => {
    const nav = (
      <C.NavBar>
        <Col componentClass="ul" style={{ textAlign: 'center' }}>
          <C.NavItem to="/" icon="list" text="Dashboard" onlyActiveOnIndex />
          <C.NavItem to="/answers" icon="comment" text="Answers" />
          <C.NavItem to="/feedback" icon="thumbs-up" text="Feedback" />
          <C.NavItem to="/system-messages" icon="alert" text="System Messages" />
        </Col>
      </C.NavBar>
    );

    return (
      <BrowserRouter>
        <Route
          path="/"
          render={() => (
            <C.Header
              appTitle="PNNL React Core"
              hasSearch={false}
              primaryNav={nav}
              className="platinum"
              parentSiteProps={{
                label: 'myPNNL /',
                linkHref: 'https://my.pnnl.gov',
                imageHref: 'https://my.pnnl.gov/themes/project/mypnnl_theme/images/myPNNL-logo.png'
              }}
            />
          )}
        />
      </BrowserRouter>
    );
  })
  .add('no nav', () => (
    <BrowserRouter>
      <Route
        path="/"
        render={() => (
          <C.Header
            appTitle="PNNL React Core"
            hasSearch={false}
          />
        )}
      />
    </BrowserRouter>
  ));
