'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _config = require('../config');

var _config2 = _interopRequireDefault(_config);

var _Facility = require('../Facility');

var _Facility2 = _interopRequireDefault(_Facility);

var _Space = require('../Space');

var _Space2 = _interopRequireDefault(_Space);

var _Loader = require('../Loader');

var _Loader2 = _interopRequireDefault(_Loader);

var _restApiHelper = require('../__helpers/restApiHelper');

var _restApiHelper2 = _interopRequireDefault(_restApiHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var Location = function (_React$Component) {
  (0, _inherits3['default'])(Location, _React$Component);

  function Location(props) {
    (0, _classCallCheck3['default'])(this, Location);

    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));

    _this.abortController = window && window.AbortController ? new window.AbortController() : undefined;

    _this.state = {
      data: _this.props.location || undefined
    };
    return _this;
  }

  Location.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    if (!this.props.id && !this.props.location) {
      throw new Error('A location identifier was not supplied. This can be either props.id (Location Id) or props.location.id.');
    }
    if (this.props.id && !this.props.location) {
      _restApiHelper2['default'].GET(_config2['default'].opwhse.location(this.props.id), {
        signal: this.abortController && this.abortController.signal
      }).then(function (data) {
        _this2.setState({
          data: data
        });
      })['catch'](function (error) {
        throw new Error('An error resulted when trying to get the location from the API. ' + error);
      });
    }
  };

  Location.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.abortController) {
      this.abortController.abort();
    }
  };

  Location.prototype.render = function render() {
    var data = this.state.data;


    if (!data) {
      return _react2['default'].createElement(_Loader2['default'], { show: true });
    }

    if (data.isFacility === true) {
      return _react2['default'].createElement(_Facility2['default'], (0, _extends3['default'])({ facility: data.facility }, this.props));
    }
    if (data.isSpace === true) {
      return _react2['default'].createElement(_Space2['default'], (0, _extends3['default'])({ space: (0, _extends3['default'])({}, data.space, { facility: data.facility }) }, this.props));
    }
    return _react2['default'].createElement(
      'div',
      null,
      'Unknown Location Type'
    );
  };

  return Location;
}(_react2['default'].Component);

Location.propTypes = {
  id: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),
  /**
    * A Facility object for the facility you want to display.
    *
    *
    * The object needs to have the same naming convention as: https://api.pnl.gov/operations/v2/locations/{id}?expand=facility
    * @required
    * */
  location: _propTypes2['default'].shape({
    id: _propTypes2['default'].string,
    name: _propTypes2['default'].string,
    thumbnailImage: _propTypes2['default'].string,
    isFacility: _propTypes2['default'].bool,
    facility: _propTypes2['default'].shape({
      id: _propTypes2['default'].string,
      name: _propTypes2['default'].string
    })
  }),

  /**
   * Which side should the Avatar be aligned on? Choosing 'center' will stack the information
   */
  align: _propTypes2['default'].oneOf(['left', 'right', 'center']),

  /**
    * Callback you want to run if the Person component is `clicked`.
    * */
  onClick: _propTypes2['default'].func,

  /**
   * The size of the Avatar to be generated.
   */
  size: _propTypes2['default'].oneOf(['xs', 'sm', 'md', 'lg'])
};
Location.defaultProps = {
  align: 'left',
  onClick: undefined,
  size: 'md',
  location: undefined,
  id: undefined
};
exports['default'] = Location;
module.exports = exports['default'];