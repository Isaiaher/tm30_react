import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { OverlayTrigger, Tooltip } from 'react-bootstrap';
import classNames from 'classnames';
import titleCase from 'title-case';
import Avatar from '../Avatar';
import Icon from '../Icon';

class ProgressStep extends Component {
  constructor(props) {
    super(props);

    this.renderAvatar = this.renderAvatar.bind(this);
    this.renderButton = this.renderButton.bind(this);
    this.renderNode = this.renderNode.bind(this);
  }

  renderAvatar() {
    const {
      avatar,
      status,
    } = this.props;

    // return custom avatar component
    if (avatar) {
      return avatar;
    }

    let { icon } = this.props;
    let avatarClass = 'text-platinum white';
    let iconDisplay = 'outline';

    switch (status) {
      case 'active':
        avatarClass = 'text-gold gold-10';
        iconDisplay = 'solid';
        break;
      case 'complete':
        avatarClass = 'text-white emerald';
        iconDisplay = 'solid';
        break;
      case 'error':
        avatarClass = 'text-white ruby';
        iconDisplay = 'solid';
        icon = 'error';
        break;
      case 'warning':
        avatarClass = 'text-ruby white';
        icon = 'alert';
        break;
      default:
        break;
    }

    avatarClass = classNames(avatarClass, [`PnnlProgressStep-${status}`]);

    // Return default inactive avatar component
    return (
      <Avatar className={avatarClass} size="sm">
        <Icon icon={icon} iconDisplay={iconDisplay} />
      </Avatar>
    );
  }

  renderNode() {
    const {
      label,
    } = this.props;

    return (
      <div className="PnnlProgressStep">
        {this.renderAvatar()}
        <span className="PnnlProgressStepLabel">
          {label}
        </span>
      </div>
    );
  }

  renderButton() {
    const {
      label,
      onClick,
    } = this.props;
    const stepClasses = classNames('PnnlProgressStep', 'hasClick');

    return (
      <button
        className={stepClasses}
        onClick={onClick}
        onKeyDown={onClick}
      >
        {this.renderAvatar()}
        <span className="PnnlProgressStepLabel">
          {label}
        </span>
      </button>
    );
  }

  render() {
    const {
      label,
      onClick,
      status,
    } = this.props;

    let node = this.renderNode();
    if (onClick) {
      node = this.renderButton();
    }


    return (
      <OverlayTrigger
        overlay={<Tooltip id={`progress-${label}`}>{titleCase(status)}</Tooltip>}
        placement="top"
        delayShow={300}
        delayHide={150}
      >
        {node}
      </OverlayTrigger>
    );
  }
}

ProgressStep.propTypes = {
  /**
   * The avatar displayed above the step label. If no avatar is supplied, a default avatar will be displayed.
   */
  avatar: PropTypes.node,
  /**
   * Available progress states
   */
  status: PropTypes.oneOf([
    'inactive',
    'active',
    'complete',
    'error',
    'warning',
  ]),
  /**
   * Label for display*
   */
  label: PropTypes.string,
  /**
   * Custom icon name to display
   */
  icon: PropTypes.string,
  /**
    * Optional function to call when clicking a step.
    * Can be used to swap out the detail component when clicking a particular step.
    * */
  onClick: PropTypes.func
};

ProgressStep.defaultProps = {
  avatar: undefined,
  label: '',
  icon: 'checkmark',
  status: undefined,
  onClick: undefined,
};

export default ProgressStep;
