{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Documents/ies_tm30_web_app/React App/src/components/pages/Calculator/FileInput.jsx\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/es/Button\";\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\";\nimport { withRouter } from \"react-router-dom\";\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n    this.formData = new FormData();\n    this.state = {\n      loading: false,\n      data: [],\n      tableReady: false,\n      disabled: true\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    /**\n     * Send file to server\n     * */\n\n    this.setState({\n      loading: true\n    }, () => {\n      this.formData.append(\"file\", this.fileInput.current.files[0]);\n      axios.post(\"http://localhost:5000/api/uploadSPDX\", this.formData).then(res => {\n        return res.data;\n      }).then(data => {\n        console.log(data.data);\n        this.setState({\n          loading: false,\n          data: data.data,\n          tableReady: true\n        });\n        /**\n         * Not Really Used anymore but still could be used later\n         */\n\n        localStorage.setItem(\"data\", JSON.stringify(this.state.data));\n        /**\n         * Pushes the data to the Reports page and redirects to that page\n         */\n\n        this.props.history.push({\n          pathname: \"/Report\",\n          state: {\n            data: this.state.data\n          }\n        });\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      disabled: false\n    });\n  }\n\n  render() {\n    const loading = this.state.loading;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Import .spdx file:\", React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" \", \"Calculating Results \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \" \", React.createElement(LoadingSpinner, {\n      color: \"copper\",\n      size: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \" \")) : React.createElement(Button, {\n      bsSize: \"sm\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Calculate\"), this.state.tableReady ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Wavelength\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Power Value\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.data.map(function (item, key) {\n      return React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, item.wavelength), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, item.powerValue));\n    })))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(FileInput);","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Documents/ies_tm30_web_app/React App/src/components/pages/Calculator/FileInput.jsx"],"names":["React","Button","render","axios","LoadingSpinner","withRouter","FileInput","Component","constructor","props","handleSubmit","bind","fileInput","createRef","formData","FormData","state","loading","data","tableReady","disabled","event","preventDefault","setState","append","current","files","post","then","res","console","log","localStorage","setItem","JSON","stringify","history","push","pathname","handleChange","map","item","key","wavelength","powerValue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/es/Button\";\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\";\nimport { withRouter } from \"react-router-dom\";\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n    this.formData = new FormData();\n    this.state = {\n      loading: false,\n      data: [],\n      tableReady: false,\n      disabled: true\n    };\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    /**\n     * Send file to server\n     * */\n    this.setState({ loading: true }, () => {\n      this.formData.append(\"file\", this.fileInput.current.files[0]);\n      axios\n        .post(\"http://localhost:5000/api/uploadSPDX\", this.formData)\n        .then(res => {\n          return res.data;\n        })\n        .then(data => {\n          console.log(data.data);\n          this.setState({\n            loading: false,\n            data: data.data,\n            tableReady: true\n          });\n          /**\n           * Not Really Used anymore but still could be used later\n           */\n          localStorage.setItem(\"data\", JSON.stringify(this.state.data));\n          /**\n           * Pushes the data to the Reports page and redirects to that page\n           */\n          this.props.history.push({\n            pathname: \"/Report\",\n            state: {\n              data: this.state.data\n            }\n          });\n        });\n    });\n  }\n\n  handleChange(event){\n    this.setState({\n      disabled: false\n    })\n  }\n\n  render() {\n    const loading = this.state.loading;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Import .spdx file:\n          <input type=\"file\" ref={this.fileInput} onChange={this.handleChange}/>\n        </label>\n        <br />\n        {loading ? (\n          <div>\n            <label>\n              {\" \"}\n              Calculating Results <br />{\" \"}\n              <LoadingSpinner color=\"copper\" size=\"6\" />{\" \"}\n            </label>\n          </div>\n        ) : (\n          <Button bsSize=\"sm\" type=\"submit\">\n            Calculate\n          </Button>\n        )}\n        {this.state.tableReady ? (\n          <div>\n            <br />\n            <table>\n              <thead>\n                <tr>\n                  <th>Wavelength</th>\n                  <th>Power Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.data.map(function(item, key) {\n                  return (\n                    <tr key={key}>\n                      <td>{item.wavelength}</td>\n                      <td>{item.powerValue}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </form>\n    );\n  }\n}\nexport default withRouter(FileInput);\n"]},"metadata":{},"sourceType":"module"}