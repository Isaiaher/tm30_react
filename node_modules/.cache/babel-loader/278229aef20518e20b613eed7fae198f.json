{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n    this.xref = this.props.xref;\n    this.xref.push(this.xref[0]);\n    this.yref = this.props.yref;\n    this.yref.push(this.yref[0]);\n    this.rf = Math.round(this.props.rf);\n    this.rg = Math.round(this.props.rg);\n    this.cct = Math.round(this.props.cct);\n    this.duv = Math.round(this.props.duv * 10000) / 10000;\n    const colors = [\"#b45c60\", \"#cb7761\", \"#cb824b\", \"#d7ad67\", \"#ac9a5d\", \"#919E60\", \"#678B5F\", \"#62B08F\", \"#7CBABA\", \"#2C797D\", \"#54778C\", \"#7189B1\", \"#988CA9\", \"#735876\", \"#8F6682\", \"#B97B8E\"];\n    var i;\n    this.arrows = [];\n    var i_arrow;\n\n    for (i = 0; i < 16; i++) {\n      i_arrow = {\n        x: this.xtest[i],\n        y: this.ytest[i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.xref[i],\n        ay: this.yref[i],\n        arrowcolor: colors[i]\n      };\n      this.arrows.push(i_arrow);\n    }\n\n    console.log(this.arrows);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [{\n        name: \"Test\",\n        x: this.xtest,\n        y: this.ytest,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"red\"\n        }\n      }, {\n        name: \"Reference\",\n        x: this.xref,\n        y: this.yref,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"black\"\n        }\n      }, {\n        x: [0.1, 0.2, 0.3, 0.4, 0.5, 1.5, -1.5],\n        y: [0, 0, 0, 0, 0, 0, 0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"dash\",\n          width: 2\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false\n      }, {\n        y: [0.1, 0.2, 0.3, 0.4, 0.5, 1.5, -1.5],\n        x: [0, 0, 0, 0, 0, 0, 0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"dash\",\n          width: 2\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false\n      }],\n      layout: {\n        autosize: true,\n        width: 600,\n        height: 600,\n        margin: {\n          l: 0,\n          r: 0,\n          b: 0,\n          t: 0\n        },\n        xaxis: {\n          visible: false,\n          range: [-1.5, 1.5],\n          title: {\n            text: \"\" //showticklabels: false\n\n          }\n        },\n        yaxis: {\n          visible: false,\n          range: [-1.5, 1.5],\n          title: {\n            text: \"\"\n          },\n          tickformat: \"\" //showticklabels: false\n\n        },\n        images: [{\n          source: \"http://localhost:8000/CVGbackground.png\",\n          xref: \"x\",\n          yref: \"y\",\n          x: -1.5,\n          y: 1.5,\n          sizex: 3,\n          sizey: 3,\n          sizing: \"stretch\",\n          layer: \"below\"\n        }],\n        annotations: [...this.arrows, {\n          x: -1.25,\n          y: 1.25,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.rf, \"</b><br /><i>Rf</i>\"),\n          font: {\n            size: 20\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: 1.25,\n          y: 1.25,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.rg, \"</b><br /><i>Rg</i>\"),\n          font: {\n            size: 20\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: 1.15,\n          y: -1.25,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.duv, \"</b><br /><i>Duv</i>\"),\n          font: {\n            size: 20\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: -1.25,\n          y: -1.25,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>   \".concat(this.cct, \" K</b><br /><i>CCT</i>\"),\n          font: {\n            size: 20\n          },\n          ax: 0,\n          ay: 0\n        }]\n      },\n      config: {\n        displayModeBar: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default CVGPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx"],"names":["React","Component","Plot","CVGPlot","constructor","props","xtest","push","ytest","xref","yref","rf","Math","round","rg","cct","duv","colors","i","arrows","i_arrow","x","y","text","showarrow","arrowhead","axref","ayref","ax","ay","arrowcolor","console","log","render","name","type","line","shape","smoothing","mode","connectgaps","marker","color","dash","width","showlegend","autosize","height","margin","l","r","b","t","xaxis","visible","range","title","yaxis","tickformat","images","source","sizex","sizey","sizing","layer","annotations","font","size","displayModeBar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n\n    this.xref = this.props.xref;\n    this.xref.push(this.xref[0]);\n    this.yref = this.props.yref;\n    this.yref.push(this.yref[0]);\n\n    this.rf = Math.round(this.props.rf);\n    this.rg = Math.round(this.props.rg);\n    this.cct = Math.round(this.props.cct);\n    this.duv = Math.round(this.props.duv * 10000) / 10000;\n\n    const colors = [\n      \"#b45c60\",\n      \"#cb7761\",\n      \"#cb824b\",\n      \"#d7ad67\",\n      \"#ac9a5d\",\n      \"#919E60\",\n      \"#678B5F\",\n      \"#62B08F\",\n      \"#7CBABA\",\n      \"#2C797D\",\n      \"#54778C\",\n      \"#7189B1\",\n      \"#988CA9\",\n      \"#735876\",\n      \"#8F6682\",\n      \"#B97B8E\"\n    ];\n\n    var i;\n    this.arrows = [];\n    var i_arrow;\n    for (i = 0; i < 16; i++) {\n      i_arrow = {\n        x: this.xtest[i],\n        y: this.ytest[i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.xref[i],\n        ay: this.yref[i],\n        arrowcolor: colors[i]\n      };\n      this.arrows.push(i_arrow);\n    }\n    console.log(this.arrows);\n  }\n  render() {\n    return (\n      <div>\n        <Plot\n          data={[\n            {\n              name: \"Test\",\n              x: this.xtest,\n              y: this.ytest,\n              type: \"scatter\",\n              line: { shape: \"spline\", smoothing: 1.3 },\n              mode: \"lines+points\",\n              connectgaps: true,\n              marker: { color: \"red\" }\n            },\n            {\n              name: \"Reference\",\n              x: this.xref,\n              y: this.yref,\n              type: \"scatter\",\n              line: { shape: \"spline\", smoothing: 1.3 },\n              mode: \"lines+points\",\n              connectgaps: true,\n              marker: { color: \"black\" }\n            },\n            {\n              x: [0.1, 0.2, 0.3, 0.4, 0.5, 1.5, -1.5],\n              y: [0, 0, 0, 0, 0, 0, 0],\n              mode: \"lines\",\n              name: \"Solid\",\n              line: {\n                dash: \"dash\",\n                width: 2\n              },\n              marker: { color: \"grey\" },\n              showlegend: false\n            },\n            {\n              y: [0.1, 0.2, 0.3, 0.4, 0.5, 1.5, -1.5],\n              x: [0, 0, 0, 0, 0, 0, 0],\n              mode: \"lines\",\n              name: \"Solid\",\n              line: {\n                dash: \"dash\",\n                width: 2\n              },\n              marker: { color: \"grey\" },\n              showlegend: false\n            }\n          ]}\n          layout={{\n            autosize: true,\n            width: 600,\n            height: 600,\n            margin: {\n              l: 0,\n              r: 0,\n              b: 0,\n              t: 0\n            },\n            xaxis: {\n              visible: false,\n              range: [-1.5, 1.5],\n              title: {\n                text: \"\"\n              }\n              //showticklabels: false\n            },\n            yaxis: {\n              visible: false,\n              range: [-1.5, 1.5],\n              title: {\n                text: \"\"\n              },\n              tickformat: \"\"\n              //showticklabels: false\n            },\n            images: [\n              {\n                source: \"http://localhost:8000/CVGbackground.png\",\n                xref: \"x\",\n                yref: \"y\",\n                x: -1.5,\n                y: 1.5,\n                sizex: 3,\n                sizey: 3,\n                sizing: \"stretch\",\n                layer: \"below\"\n              }\n            ],\n            annotations: [\n              ...this.arrows,\n              {\n                x: -1.25,\n                y: 1.25,\n                xref: \"x\",\n                yref: \"y\",\n                text: `<b>${this.rf}</b><br /><i>Rf</i>`,\n                font: {\n                  size: 20\n                },\n                ax: 0,\n                ay: 0\n              },\n              {\n                x: 1.25,\n                y: 1.25,\n                xref: \"x\",\n                yref: \"y\",\n                text: `<b>${this.rg}</b><br /><i>Rg</i>`,\n                font: {\n                  size: 20\n                },\n                ax: 0,\n                ay: 0\n              },\n              {\n                x: 1.15,\n                y: -1.25,\n                xref: \"x\",\n                yref: \"y\",\n                text: `<b>${this.duv}</b><br /><i>Duv</i>`,\n                font: {\n                  size: 20\n                },\n                ax: 0,\n                ay: 0\n              },\n              {\n                x: -1.25,\n                y: -1.25,\n                xref: \"x\",\n                yref: \"y\",\n                text: `<b>   ${this.cct} K</b><br /><i>CCT</i>`,\n                font: {\n                  size: 20\n                },\n                ax: 0,\n                ay: 0\n              }\n            ]\n          }}\n          config={{ displayModeBar: false }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CVGPlot;\n"]},"metadata":{},"sourceType":"module"}