'use strict';

require('whatwg-fetch');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _react3 = require('@storybook/react');

var _addonActions = require('@storybook/addon-actions');

var _reactBootstrap = require('react-bootstrap');

var _index = require('../index');

var C = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// eslint-disable-line
/* eslint import/no-extraneous-dependencies: ["error", {"devDependencies": true}] */
(0, _react3.storiesOf)('Sidebar', module).add('with items', function () {
  var sidebar = _react2['default'].createElement(
    C.Sidebar,
    null,
    _react2['default'].createElement(C.SidebarItem, { title: 'Item 1', href: 'http://labweb.pnl.gov' }),
    _react2['default'].createElement(C.SidebarItem, { title: 'Item 2', itemActive: true, count: 1, onClick: (0, _addonActions.action)('clicked item 2') }),
    _react2['default'].createElement(C.SidebarItem, { title: 'Item 3', onClick: (0, _addonActions.action)('clicked item 3') })
  );
  var dummyContent = [];
  for (var i = 0; i < 30; i += 1) {
    dummyContent.push(_react2['default'].createElement(
      'p',
      { key: i },
      'Dummy Content'
    ));
  }
  return _react2['default'].createElement(
    C.SidebarWrapper,
    { sidebarComponent: sidebar },
    _react2['default'].createElement(
      'h1',
      null,
      'Other Content'
    ),
    dummyContent
  );
}).add('with actions and menus', function () {
  var menuAndTrigger = _react2['default'].createElement(
    _reactBootstrap.Dropdown,
    { id: 'dropdown-custom-menu' },
    _react2['default'].createElement(C.Action, { bsRole: 'toggle', icon: 'menu-android-horizontal' }),
    _react2['default'].createElement(
      _reactBootstrap.Dropdown.Menu,
      null,
      _react2['default'].createElement(
        _reactBootstrap.MenuItem,
        { eventKey: '1' },
        'Red'
      ),
      _react2['default'].createElement(
        _reactBootstrap.MenuItem,
        { eventKey: '2' },
        'Blue'
      ),
      _react2['default'].createElement(
        _reactBootstrap.MenuItem,
        { eventKey: '3' },
        'Orange'
      ),
      _react2['default'].createElement(
        _reactBootstrap.MenuItem,
        { eventKey: '4' },
        'Red-Orange'
      )
    )
  );

  var firstHeader = _react2['default'].createElement(
    C.SidebarHeader,
    { title: 'Heading 1', validationState: 'success', collapsible: true },
    _react2['default'].createElement(C.Action, { icon: 'refresh', onClick: (0, _addonActions.action)('clicked heading refresh') }),
    menuAndTrigger
  );

  var sidebar = _react2['default'].createElement(
    C.Sidebar,
    null,
    _react2['default'].createElement(
      C.SidebarPanel,
      { header: firstHeader, collapsible: true },
      _react2['default'].createElement(
        C.SidebarItem,
        { title: 'Item 1', href: 'http://labweb.pnl.gov', validationState: 'success' },
        _react2['default'].createElement(C.Action, { icon: 'edit', onClick: (0, _addonActions.action)('clicked item 1 edit') }),
        _react2['default'].createElement(C.Action, { icon: 'trash', onClick: (0, _addonActions.action)('clicked item 1 delete') })
      ),
      _react2['default'].createElement(
        C.SidebarItem,
        { title: 'Item 2', itemActive: true, count: 1, validationState: 'success', onClick: (0, _addonActions.action)('clicked item 2') },
        _react2['default'].createElement(C.Action, { icon: 'trash', onClick: (0, _addonActions.action)('clicked item 2 delete') })
      ),
      _react2['default'].createElement(
        C.SidebarItem,
        { title: 'Item 3', validationState: 'success', onClick: (0, _addonActions.action)('clicked item 3') },
        _react2['default'].createElement(C.Action, { icon: 'trash', onClick: (0, _addonActions.action)('clicked item 3 delete') })
      )
    ),
    _react2['default'].createElement(
      C.SidebarPanel,
      { header: 'Toggle 2', validationState: 'error', collapsible: true },
      _react2['default'].createElement(
        C.SidebarItem,
        { title: 'Item 4', href: 'http://labweb.pnl.gov', validationState: 'incomplete' },
        _react2['default'].createElement(C.Action, { icon: 'edit', onClick: (0, _addonActions.action)('clicked item 1 edit') }),
        menuAndTrigger
      ),
      _react2['default'].createElement(
        C.SidebarItem,
        { title: 'Item 5', validationState: 'warning', count: 2, onClick: (0, _addonActions.action)('clicked item 5') },
        menuAndTrigger
      ),
      _react2['default'].createElement(C.SidebarItem, { title: 'Item 6', validationState: 'error', onClick: (0, _addonActions.action)('clicked item 6') })
    )
  );

  var dummyContent = [];
  for (var i = 0; i < 30; i += 1) {
    dummyContent.push(_react2['default'].createElement(
      'p',
      { key: i },
      'Dummy Content'
    ));
  }
  return _react2['default'].createElement(
    C.SidebarWrapper,
    { sidebarComponent: sidebar, collapsible: true, fluid: true },
    _react2['default'].createElement(
      'h1',
      null,
      'Other Content'
    ),
    dummyContent
  );
}); // eslint-disable-line