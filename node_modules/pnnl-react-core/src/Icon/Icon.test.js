import React from 'react';
import { shallow } from 'enzyme';

import Icon from './Icon';

const svgIcon = {
  svg: {
    '@xmlns': 'http://www.w3.org/2000/svg',
    '@width': '100',
    '@height': '100',
    '@viewBox': '0 0 100 100',
    '@class': 'PnnlIcon default',
    '@style': '',
    defs: '',
    g: {
      '@class': 'pnnl-icon-aed-vector',
      path: [{
        '@xmlns': 'http://www.w3.org/2000/svg', '@class': 'pnnl-icon-aed-default-solid-1', '@mask': '', '@d': 'M68.687 11.954c-7.073 0-14.126 3.326-18.687 8.718-4.561-5.392-11.611-8.718-18.689-8.718-12.849 0-22.82 9.95-22.82 22.797 0 3.523.698 7.043 1.982 10.322.64 1.631 1.403 3.308 2.396 4.76 8.083 11.815 19.458 21.571 30.107 31.061.397.355.839.688 1.206 1.072l5.816 6.08 5.817-5.66c21.587-19.092 35.693-31.894 35.693-47.683.001-12.845-9.971-22.749-22.821-22.749zM40.926 71.007l-.004.011v-.008c0 .001.004-.003.004-.003l8.746-20.476-13.895-.624 24.211-26.634-9.589 20.765 13.823.765c.001.001-23.2 26.506-23.296 26.204z',
      }, {
        '@xmlns': 'http://www.w3.org/2000/svg', '@class': 'pnnl-icon-aed-outline-1', '@mask': '', '@d': 'M68.687 16.154c10.616 0 18.622 7.975 18.622 18.55 0 13.562-12.385 25.176-34.275 44.536l-.075.066-.071.07-2.782 2.706-2.885-3.016c-.399-.418-.798-.754-1.119-1.024-.11-.093-.22-.185-.332-.284l-2.272-2.021c-9.804-8.713-19.942-17.722-27.162-28.275-.663-.97-1.283-2.216-1.952-3.922-1.107-2.827-1.693-5.866-1.693-8.79 0-10.602 8.005-18.597 18.62-18.597 5.778 0 11.71 2.77 15.483 7.23L50 27.175l3.207-3.791c3.772-4.46 9.703-7.23 15.48-7.23m0-4.2c-7.073 0-14.126 3.326-18.687 8.718-4.561-5.392-11.611-8.718-18.689-8.718-12.849 0-22.82 9.95-22.82 22.797 0 3.523.698 7.043 1.982 10.322.64 1.631 1.403 3.308 2.396 4.76 8.083 11.815 19.458 21.571 30.107 31.061.397.355.839.688 1.206 1.072l5.816 6.08 5.817-5.66c21.587-19.092 35.693-31.894 35.693-47.683.001-12.845-9.971-22.749-22.821-22.749z',
      }, {
        '@xmlns': 'http://www.w3.org/2000/svg', '@class': 'pnnl-icon-aed-outline-2', '@mask': '', '@d': 'M40.922 71.018l8.75-20.486-13.895-.624 24.211-26.634-9.589 20.765 13.823.765S40.921 71.424 40.921 71.01v.008z',
      }],
    },
  },
};
global.fetch = jest.fn().mockImplementation(() => {
  const jsonFunc = () => svgIcon;
  return Promise.resolve({ json: jsonFunc });
});

const customIcons = (maskUrl) => {
  const icons = {
    'training-groups': (
      <g className="pnnl-icon-training-vector">
        <path className="pnnl-icon-training-groups-default-solid-outline-1" mask={maskUrl} d="M76.961 24.152c-6.358 0-11.764 4.023-13.849 9.658.001-.004.002-.008.004-.012l-15.567-3.392c.077-.706.122-1.422.122-2.149 0-10.884-8.823-19.706-19.707-19.706S8.257 17.373 8.257 28.257c0 10.883 8.822 19.707 19.707 19.707 1.086 0 2.143-.111 3.18-.28l4.188 15.27c.073-.029.148-.052.221-.08-5.558 2.124-9.51 7.491-9.51 13.795 0 8.162 6.616 14.78 14.781 14.78 8.161 0 14.779-6.618 14.779-14.78 0-8.163-6.618-14.779-14.779-14.779-.501 0-.996.026-1.484.075.004-.001.008-.002.012-.002L35.14 46.597c-.003.001-.006.002-.01.003 5.434-2.125 9.69-6.583 11.533-12.151l15.572 3.394c-.026.361-.055.722-.055 1.089 0 8.163 6.618 14.781 14.779 14.781 8.162 0 14.781-6.618 14.781-14.781.002-8.163-6.617-14.78-14.779-14.78zM51.404 76.669c0 5.834-4.746 10.58-10.579 10.58-5.834 0-10.581-4.746-10.581-10.58 0-5.833 4.746-10.579 10.581-10.579 5.834 0 10.579 4.746 10.579 10.579zM38.082 62.154c.357-.068.717-.124 1.083-.166-.366.041-.727.099-1.083.166zm-1.186.281c.214-.06.428-.116.646-.166-.218.048-.433.106-.646.166zm-3.712-15.192h0zm-5.219-3.479c-8.55 0-15.506-6.956-15.506-15.506s6.956-15.506 15.506-15.506 15.506 6.956 15.506 15.506-6.956 15.506-15.506 15.506zm19.247-11.306c-.09.409-.196.812-.311 1.211.114-.399.222-.801.311-1.211zm.333-2.026c-.053.483-.13.957-.218 1.427.088-.471.165-.945.218-1.427zm14.82 6.284c-.006.043-.014.085-.02.128.007-.043.014-.085.02-.128zm14.596 12.796c-5.833 0-10.579-4.746-10.579-10.581 0-5.833 4.746-10.579 10.579-10.579 5.835 0 10.581 4.746 10.581 10.579 0 5.835-4.746 10.581-10.581 10.581z" />
        <path className="pnnl-icon-training-groups-default-solid-1" mask={maskUrl} d="M51.404 76.669c0 5.834-4.746 10.58-10.579 10.58-5.834 0-10.581-4.746-10.581-10.58 0-5.833 4.746-10.579 10.581-10.579 5.834 0 10.579 4.746 10.579 10.579z" />
        <path className="pnnl-icon-training-groups-default-solid-2" mask={maskUrl} d="M27.965 43.764c-8.55 0-15.506-6.956-15.506-15.506s6.956-15.506 15.506-15.506 15.506 6.956 15.506 15.506-6.956 15.506-15.506 15.506z" />
        <path className="pnnl-icon-training-groups-default-solid-3" mask={maskUrl} d="M76.961 49.512c-5.833 0-10.579-4.746-10.579-10.581 0-5.833 4.746-10.579 10.579-10.579 5.835 0 10.581 4.746 10.581 10.579 0 5.835-4.746 10.581-10.581 10.581z" />
      </g>
    ),
  };
  return icons;
};

/*
* During test writing you can selectively run just these tests or skip individual ones while you
* work on others https://facebook.github.io/jest/docs/en/api.html#testskipname-fn
*/
describe('<Icon />', () => {
  beforeEach(() => localStorage.clear());

  const defaultProps = { icon: 'aed' };

  describe('checking for component import errors', () => {
    it('should be in the component index file', () => {
      const loadedIndexFile = require('../index.js');
      expect(loadedIndexFile).toBeTruthy();
      expect(loadedIndexFile.Icon).toBeTruthy();
    });

    it('should be in the components directory', () => {
      expect(Icon).toBeTruthy();
    });
  });

  describe('prop type validation', () => {
    it('should log 1 error when missing required props.', () => {
      console.error = jest.fn();

      shallow(<Icon />);
      expect(console.error).toHaveBeenCalledTimes(1);

      console.error.mockClear();
    });
  });

  test('Renders expected output with mocked Api data', () => {
    const wrapper = shallow(<Icon {...defaultProps} />);
    wrapper.setState({ svg: svgIcon.svg });
    expect(wrapper).toMatchSnapshot();
  });

  test('Icon renders expected output for custom icon', () => {
    const wrapper = shallow(<Icon icon="training-groups" extension={customIcons} />);
    expect(wrapper).toMatchSnapshot();
  });
});
