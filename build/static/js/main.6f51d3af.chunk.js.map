{"version":3,"sources":["components/pages/Home/Home.jsx","components/pages/Report/Plots/SPDxWavelength.jsx","actions/dataActions.js","redux/types.js","components/pages/Calculator/Sections/Examples.jsx","components/pages/Calculator/Sections/FileInput.jsx","components/pages/Calculator/Sections/Paste.jsx","components/pages/Calculator/Calc.jsx","components/pages/Report/Plots/LHSPlot.jsx","components/pages/Report/Plots/LCSPlot.jsx","components/pages/Report/Plots/LCFPlot.jsx","components/pages/Report/Plots/ELFPlot.jsx","components/pages/Report/Plots/CVGPlot.jsx","components/pages/Report/Tabs/Numerical.jsx","components/pages/Report/Plots/CIEPlot.jsx","components/pages/Report/Plots/SHPPlot.jsx","components/pages/Report/Plots/HBAPlot.jsx","components/pages/Report/Plots/VSPlot.jsx","components/pages/Report/Tabs/Graphical.jsx","components/pages/Report/Tabs/Simple.jsx","components/pages/Report/Tabs/Intermediate.jsx","components/pages/Report/Report.jsx","components/pages/Profile/Profile.jsx","components/pages/404/404.jsx","components/core/Navigation/Navigation.jsx","components/core/Navigation/Footer.jsx","actions/me.js","App.js","lib/restApiHelper.js","sagas/me.js","sagas/root.js","reducers/me.js","reducers/dataReducers.js","reducers/index.js","store.js","index.js"],"names":["Home","react_default","a","createElement","console","log","Grid","className","Card_default","style","color","SPDxWavelength","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","errors","inherits","createClass","key","value","react_plotly_default","useResizeHandler","width","data","name","x","wavelength","y","spd","type","mode","hovertemplate","marker","layout","height","legend","xanchor","yanchor","orientation","margin","l","r","b","t","pad","xaxis","title","text","tick0","dtick","range","yaxis","tickformat","config","displaylogo","modeBarButtons","responsive","toImageButtonOptions","format","filename","scale","Component","setSPDxWavelength","wavelengths","dispatch","payload","setBinLabels","bin_labels","setBinDividers","bin_dividers","setChromaIsolines","chroma_isolines","Examples","i","populateSPDcells","grid_items","wavelength_temp","spd_temp","push","readOnly","state","example_number","setState","grid","concat","loading","tableReady","disabled","header_length","exampleHeaders","headers","length","examples","handleSubmit","bind","assertThisInitialized","handleChange","event","_this2","exSpd","preventDefault","axios","defaults","common","accept","post","then","res","history","pathname","_this3","target","example","setExampleOpen","_this4","optionItems","map","Row","Col","xs","onSubmit","onChange","Loader_default","size","Button","bsSize","example_open","Plots_SPDxWavelength","lib_default","valueRenderer","cell","onCellsChanged","changes","row","toConsumableArray","forEach","_ref","col","_objectSpread","React","withRouter","connect","dataReducers","FileInput","fileInput","createRef","formData","FormData","append","current","files","ref","item","powerValue","LightTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","Tooltip","Paste","spd_length","wavelength_end","wavelength_start","parseInt","step","updateGraph","array_i","wavelengths_temp","handleLeave","handleCreateTable","displayTable","setPasteOpen","handleSPDChange","spd_paste","handleStartChange","handleEndChange","handleStepChange","handleNameChange","SPDs","spd_array","wavelength_array","handleSubmitTable","split","alert","position","display","placement","defaultValue","onClick","paste_open","Paste_objectSpread","Calc","import_file","paste_data","active","updateWindowDimensions","pageChanged","window","addEventListener","removeEventListener","innerWidth","innerHeight","e","align","Pagination","Item","Sections_Examples","cvg_options","Sections_FileInput","Sections_Paste","LHSPlot","lcs","long","intermediate","bar_gap","paddingBottom","y_rounded","Math","round","toFixed","bar_colors","textfont","textangle","textposition","tickmode","font","bargap","LCSPlot","y_full","outsidetextfont","tickvals","ticktext","defineProperty","modeBarButtonsToAdd","ELFPlot","spd_test","test","spd_ref","ref_spd","caption","small","small_style","showticklabels","CVGPlot","theta","clearChromaIsolines","minus_20p_x","minus_20p_y","minus_10p_x","minus_10p_y","even_x","even_y","plus_10p_x","plus_10p_y","plus_20p_x","plus_20p_y","chroma_isolines_labels","handleBinLabels","handleBinDividers","handleChromaIsolines","createBinLines","bin_lines","line","dash","showlegend","hoverinfo","createBinNumbers","bin_numbers","cos","PI","sin","xref","yref","ax","ay","createChromaIsolines","xtest","ytest","rf","rg","cct","duv","small_bool","arrow_size","x_size","y_size","rg_label","rf_label","duv_label","cct_label","padding","black_x","black_y","cog","path","ascent","descent","hashtag","circle","colors","sqrt","pow","i_arrow","arrows","showarrow","arrowhead","arrowwidth","axref","ayref","arrowcolor","symbol","opacity","shape","smoothing","connectgaps","autosize","visible","images","source","sizex","sizey","sizing","layer","annotations","icon","click","Numerical","tm30","input","lhs","lcf","huebin_row","sample_count","atest","btest","aref","bref","da","db","pathxref","pathyref","pathxtest","pathytest","ces","color_sample_fidelity","j_test_coordinates","a_test_coordinates","b_test_coordinates","j_ref_coordinates","a_ref_coordinates","b_ref_coordinates","hue_angle_bin","normalized_SPD_test","normalized_SPD_ref","Wavelength","local_chroma_shift","local_hue_shift","local_color_fidelity","a_prime_test_j","b_prime_test_j","a_prime_ref_j","b_prime_ref_j","da_relative","db_relative","path_xref","path_yref","path_xtest","path_ytest","backgroundColor","fluid","Table","striped","bordered","hover","borderBottom","borderTop","paddingTop","colSpan","borderRight","borderLeft","component","index","Fragment","CCT","DUV","u","v","LER","CIEPlot","spectrum_locus_x","spectrum_locus_y","blackbody_locus_x","blackbody_locus_y","x_label","y_label","test_source","reference_illuminant","x_legend","y_legend","year","displayModeBar","SHPPlot","ticks","showline","showgrid","HBAPlot","zeroline","VSPlot","SampleColors","Graphical","options","md","Plots_ELFPlot","Plots_CIEPlot","Data1931","Spectrum_Locus","Blackbody_Locus","Data1976","u_prime","v_prime","Plots_SHPPlot","Plots_HBAPlot","Plots_CVGPlot","Plots_VSPlot","Plots_LCSPlot","verticalAlign","Plots_LHSPlot","LCFPlot","Simple","Intermediate","num","Report","root","&$checked","checked","Checkbox","assign","handleJSONDownload","require","fileDownload","json","location","handleXMLDownload","xml","handleClick","anchorEl","currentTarget","handleClose","handleHTMLtoImage","htmlToImage","toBlob","document","getElementById","dataUrl","JSON","stringify","convert","json2xml","compact","spaces","items","basic","numerical","simple","graphical","full","marginLeft","marginRight","id","Numerical_Results","paddingRight","paddingLeft","Tabs_Numerical","Tabs_Graphical","Tabs_Simple","Tabs_Intermediate","Profile","FourOhFour","Link","to","Navigation","NavBar_default","sm","componentClass","NavItem_default","onlyActiveOnIndex","Footer","apply","arguments","src","process","href","ME_FETCH_START","ME_FETCH_SUCCESS","ME_FETCH_ERROR","App","HashRouter","basename","Header_default","appLogo","appTitle","primaryNav","core_Navigation_Navigation","hasSearch","Switch","Route","exact","Navigation_Footer","fetch","baseOptions","method","credentials","Content-Type","statusHelper","response","status","Promise","resolve","reject","Error","statusText","callFetch","url","catch","error","api","GET","overriddenOptions","undefined","POST","body","PUT","PATCH","DELETE","toQueryString","obj","parts","keys","prototype","hasOwnProperty","encodeURIComponent","join","fetchCurrentUser","meSaga","action","regenerator_default","wrap","_context","prev","next","hid","sent","put","t0","stop","_marked","_context2","takeLatest","_marked2","rootSaga","root_marked","formatOpwhsePerson","department","included","find","facility","space","relationships","locations","loc","meta","isSpace","usage","attributes","locationId","_payload$data$attribu","email","phone","mailstop","portrait","me_objectSpread","objectWithoutProperties","emailAddress","address","phoneNumber","number","msin","portraitLink","initialState","combineReducers","me","dataReducers_objectSpread","sagaMiddleware","createSagaMiddleware","createBrowserHistory","store","createStore","rootReducer","compose","applyMiddleware","thunkMiddleware","run","configureStore","ReactDOM","render","es"],"mappings":"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","file":"static/js/main.6f51d3af.chunk.js","sourcesContent":["/**\n * Home.\n *\n * A component for the Homepage of the tm30 web calculator.\n * Contains instructions and uses for the calculator.\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React from \"react\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport { red } from \"@material-ui/core/colors\";\nimport { rgbToHex } from \"@material-ui/core/styles\";\n//import Footer from \"pnnl-react-core/lib/WebFooter/WebFooter\";\n\n/**\n * Home Class\n */\nconst Home = () => {\n  /**\n   * Return for the Home class. Mostly instructions and boilerplate info.\n   */\n  return (\n    <div>\n      {console.log(\"Version 1.2.4\")}\n      <Grid className=\"home-container\">\n        <br />\n        <br />\n        <Card>\n          <h1>Overview</h1>\n          <ul>\n            <li>\n              This Web Application has been approved and copyrighted by the\n              Illuminating Engineering Society (IES) for use in conjunction with\n              ANSI/IES TM-30-18. In the event of any discrepancy between the\n              calculation tool should be directed to Michael Royer at\n              michael.royer@pnnl.gov\n            </li>\n            <li>\n              This calculation tool requires the use of an internet connection\n              to send data to a remote server that runs the calculations. It\n              works on both PC and Mac. The tool works with an inputed SPD from\n              380 - 780 by a specified step.{\" \"}\n              <span style={{ color: \"red\" }}>\n                <b>As of 12/07/2020 the step size can only be an integer.</b>\n              </span>\n            </li>\n            <li>\n              There is no way to manipulate the C code running on the remote\n              server. Please contact Michael Royer if a change is necessary.\n            </li>\n          </ul>\n        </Card>\n        <br />\n        <br />\n        <Card>\n          <h1>Instructions</h1>\n          <ol>\n            <li>\n              Ensure that you have internet access and are able to send data. If\n              you do not have an internet connection and attempt to send an SPD\n              (via the 'Calculate button') you will get an endless loading icon.\n              Please refresh your browser and connect to internet.\n              <ul>\n                <li>\n                  If you do have internet connection and get an endless loading\n                  icon, refresh the page and/or right click on white space,\n                  click 'inspect', click on 'console' and read the output\n                  message\n                </li>\n              </ul>\n            </li>\n            <li>\n              Use the \"Data Input\" tab to input the spectral power distribution\n              (SPD) and its associated attributes for a light source.\n              <ul>\n                <li>\n                  The SPD may be input by A) selecting an SPD from the\n                  'examples' drop-down menu, B) importing an SPDX-format file\n                  (using the \"Import .spdx file\" button), or C) pasting the\n                  power values from another document (using the \"Paste\" tab).\n                </li>\n                <li>\n                  If an SPD is chosen from the library or imported from an\n                  SPDX-format file, the calculation will be performed once the\n                  user clicks 'calculate'.\n                </li>\n                <li>\n                  If the values are pasted, you must adjust the start\n                  wavelength, end wavelength, and increment to match the data\n                  you have entered; these inputs are in the 'Pate' tab and will\n                  create a table to paste into once the user click 'Create\n                  Table'. The preferred wavelength range is 380 to 780 nm. The\n                  increment, which describes the difference in wavelength for\n                  consecutive values in the SPD, should always be 5 nm or less.\n                  1 nm is preferred. After pasting the SPD and entering the\n                  parameters, click \"Calculate\" to initiate the calculation.\n                </li>\n                <li>\n                  <b>Important - This web app actually can't do this yet </b>\n                  This web app can calculate display values for color samples to\n                  illustrate the effect of the test source relative to the\n                  reference illuminant. These visualizations increase the\n                  calculation time. This feature can be turned off using the\n                  check box on the \"Main\" sheet.\n                </li>\n                <li>\n                  The display of the Color Vector Graphic can be altered by the\n                  user by checking or unchecking the boxes corresponding to the\n                  bin labels, bin divider lines, and polar increments.\n                </li>\n                <li>\n                  All user-input and calculated data can be cleared by going\n                  back to the data input tab or navigating away and then back.\n                  Refreshing on the report page will not clear the data.\n                </li>\n              </ul>\n            </li>\n            <li>\n              An overview of the calculation results is provided in the\n              \"Calculator\" sheet. Additional results are available in the\n              \"Results Graphical\" and \"Results Numerical\" sheets. The \"CVG\"\n              sheet provides different versions of the Color Vector Graphic that\n              do not change in response to the user input on the \"Calculator\"\n              sheet.\n            </li>\n            <li>\n              Three versions of printable reports are available in sheets\n              \"Simple Report\", \"Intermediate Report\", and \"Full Report\". Simply\n              click on the \"Image\" button to download the report. Printing size\n              is up to the user.\n            </li>\n            <li>\n              <b>Important - This web app actually can't do this yet </b> -\n              Three libraries of SPDs are included in this workbook. SPDs may be\n              stored in the \"User SPDs\" library for recall via the main\n              calculation, or to be calculated as a group (numerical results\n              only). New SPDs can be added by to the library by adding the\n              header information and power values. <br /> The \"Commercial SPDs\"\n              library includes SPDs provided by manufacturers. It may not be\n              modified by the user. Please check for updates at\n              http://www.ies.org/redirect/tm-30/. <br /> The \"Example SPDs\"\n              library includes a set of SPDs intended to help users understand\n              ANSI/IES TM-30-18. This Library has been populated with a subset\n              of SPDs used in: Kevin W. Houser, Minchen Wei, Aurélien David,\n              Michael R. Krames, and Xiangyou Sharon Shen. Optics Express, Vol.\n              21, Issue 8, pp. 10393-10411 (2013) -\n              http://dx.doi.org/10.1364/OE.21.010393. Please refer to this\n              manuscript for additional specifics and citations regarding the\n              origins of the SPDs. These SPDs serve only as examples and should\n              not be considered official representations of any lamp technology\n              or manufacturer. The dataset is not intended to be a statistical\n              sample for use in analyses.\n            </li>\n            <li>\n              <b>Important - This web app actually can't do this yet </b> - The\n              \"Multiple Calculator\" sheet allows for simultaneous calculation of\n              a large number of SPDs from any of the three libraries. It\n              provides numerical results only. Calculating large numbers of SPDs\n              may require considerable time.\n            </li>\n            <li>\n              <b>Important - Not Needed for web app </b> - The sheets not\n              previously mentioned (gray color) include data that is used in the\n              calculations, such as the reflectance factors of each of the 99\n              CES. It may be informative to view these tabs, but the values must\n              not be modified.\n            </li>\n            <li>\n              <b>Important - Not Needed for web app </b> - Do not modify the\n              position of any cells within this workbook, as it may cause errors\n              in the code used to execute the calculation.\n            </li>\n          </ol>\n        </Card>\n        <br />\n        <br />\n        <Card>\n          <h1>Troubleshoot</h1>\n          <ol>\n            <li>\n              If you receive an endless spinning circle please check your\n              connection. If your connection is fine, refresh the web page and\n              try again. If that doesn't work, right click on white space and\n              click 'inspect', from there navigate to 'console', and see your\n              error message.\n              <ul>\n                <li>\n                  Potential errors could be a 404 - Server down or unreachable\n                </li>\n              </ul>\n            </li>\n            <li>\n              If none of your calculations are working, the server is most\n              likely down for maintenance\n            </li>\n          </ol>\n        </Card>\n      </Grid>\n    </div>\n  );\n};\n/**\n * Export command\n */\nexport default Home;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport class SPDxWavelength extends Component {\n  /**\n   * Constructor that grabs the data passed in the props\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.errors = [];\n  }\n  render() {\n    return (\n      <div>\n        <Plot\n          useResizeHandler={true}\n          style={{ width: \"100%\" }}\n          data={[\n            {\n              name: \"SPD Value\",\n              x: this.props.wavelength,\n              y: this.props.spd,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              hovertemplate: \"%{y:.4f}\",\n              marker: { color: \"black\" }\n            }\n          ]}\n          layout={{\n            //width: 800,\n            height: 200,\n            legend: {\n              xanchor: \"center\",\n              yanchor: \"top\",\n              y: -0.2,\n              x: 0.5,\n              orientation: \"h\"\n            },\n            margin: {\n              l: 60,\n              r: 30,\n              b: 60,\n              t: 20,\n              pad: 4\n            },\n            xaxis: {\n              title: {\n                text: \"Wavelength (nm)\"\n              },\n              tick0: 380,\n              dtick: 50,\n              range: [380, 780]\n            },\n            yaxis: {\n              title: {\n                text: \"SPD Value\"\n              },\n              tickformat: \".1f\",\n              tick0: 0.0,\n              dtick: 0.2,\n              range: [0.0, 1.0]\n            }\n          }}\n          config={{\n            displaylogo: false,\n            modeBarButtons: [[\"toImage\"]],\n            responsive: true,\n            toImageButtonOptions: {\n              format: \"png\", // one of png, svg, jpeg, webp\n              filename: \"Equal Luminous Flux\",\n              height: 700,\n              width: 900,\n              scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SPDxWavelength;\n","import {\n  SET_SPD_WAVELENGTH,\n  SET_EXAMPLE_OPEN,\n  SET_PASTE_OPEN,\n  SET_EXAMPLE,\n  SET_BIN_LABELS,\n  SET_BIN_DIVIDERS,\n  SET_CHROMA_ISOLINES\n} from \"../redux/types\";\n\nexport const setSPDxWavelength = (spd, wavelengths) => dispatch => {\n  dispatch({ type: SET_SPD_WAVELENGTH, payload: { spd, wavelengths } });\n};\n\nexport const setExampleOpen = () => dispatch => {\n  dispatch({ type: SET_EXAMPLE_OPEN });\n};\n\nexport const setPasteOpen = () => dispatch => {\n  dispatch({ type: SET_EXAMPLE, payload: \"\" });\n  dispatch({ type: SET_PASTE_OPEN });\n};\n\nexport const setExample = example => dispatch => {\n  dispatch({ type: SET_EXAMPLE, payload: example });\n};\n\nexport const setBinLabels = bin_labels => dispatch => {\n  dispatch({ type: SET_BIN_LABELS, payload: bin_labels });\n};\nexport const setBinDividers = bin_dividers => dispatch => {\n  dispatch({ type: SET_BIN_DIVIDERS, payload: bin_dividers });\n};\nexport const setChromaIsolines = chroma_isolines => dispatch => {\n  dispatch({ type: SET_CHROMA_ISOLINES, payload: chroma_isolines });\n};\n","//Data Reducer types\nexport const SET_SPD_WAVELENGTH = \"SET_SPD_WAVELENGTH\";\nexport const SET_EXAMPLE_OPEN = \"SET_EXAMPLE_OPEN\";\nexport const SET_PASTE_OPEN = \"SET_PASTE_OPEN\";\nexport const SET_EXAMPLE = \"SET_EXAMPLE\";\nexport const SET_BIN_LABELS = \"SET_BIN_LABELS\";\nexport const SET_BIN_DIVIDERS = \"SET_BIN_DIVIDERS\";\nexport const SET_CHROMA_ISOLINES = \"SET_CHROMA_ISOLINES\";\n","/**\n * Examples.\n *\n * A component for the drop down menu of all the different examples.\n * Takes the headers (names) of each example from the \"ExampleHeaders.json\" file.\n * Makes an api call to the server using the \"ExamplesSpds.json\" data.\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React from \"react\";\nimport Button from \"react-bootstrap/es/Button\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\";\nimport data from \"../../../../Data/ExamplesSpds.json\";\nimport exampleHeaders from \"../../../../Data/ExampleHeaders.json\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Col from \"react-bootstrap/es/Col\";\nimport Row from \"react-bootstrap/es/Row\";\nimport ReactDataSheet from \"react-datasheet\";\nimport SPDxWavelength from \"../../Report/Plots/SPDxWavelength\";\n//Redux\nimport { setSPDxWavelength } from \"../../../../actions/dataActions\";\nimport { setExampleOpen } from \"../../../../actions/dataActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n/**\n * Examples Class\n */\nclass Examples extends React.Component {\n  /**\n   * Constructor method that creates the state and \"examples\" array\n   * which holds all the examples names, imported from \"ExampleHeaders.json\"\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      example_number: \"\",\n      loading: false,\n      data: [],\n      tableReady: false,\n      disabled: true,\n      name: \"\",\n      grid: [\n        [\n          { readOnly: true, value: \"Wavelength\" },\n          { readOnly: true, className: \"cell\", value: \"SPD\" }\n        ]\n      ]\n    };\n    var i;\n    var header_length = exampleHeaders.headers.length;\n    this.examples = [];\n    /**\n     * Push all the example names into \"this.examples\"\n     */\n    for (i = 0; i < header_length; i++) {\n      this.examples.push(exampleHeaders.headers[i][\"Example\"]);\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /**\n   * Handler function to perform the necessary steps to make the API command.\n   * The function is called when 'Calculate' button under the examples is clicked\n   * @param {*} event\n   */\n  handleSubmit(event) {\n    var wavelength = [];\n    if (this.state.example_number !== \"\") {\n      var exSpd = []; //The example SPD being grabbed from the \"ExamplesSpds.json\" file\n      var i;\n      for (i = 0; i < 401; i++) {\n        exSpd.push(data.data[i][this.state.example_number]);\n        wavelength.push(380 + i);\n      }\n      event.preventDefault();\n      /**\n       * Set the loading state to true to enable the spinner icon\n       */\n      this.setState({ loading: true }, () => {\n        axios.defaults.headers.common = {};\n        axios.defaults.headers.common.accept = \"application/json\";\n        /**\n         * Call to the API with the Example SPD Information.\n         */\n        axios\n          //.post(\"http://lampprod03.pnl.gov:8081/api/tm30Paste\", {\n          .post(\"https://rcdemo.pnnl.gov/api/tm30Paste\", {\n            //.post(\"https://lampprod03.pnl.gov/api/tm30Paste\", {\n            //.post(\"http://localhost:5000/api/tm30Paste\", {\n            spd: exSpd,\n            wavelength: wavelength\n          })\n          .then(res => {\n            return res.data;\n          })\n          .then(data => {\n            /**\n             * Set the state that loading is now false (No Spinner),\n             * data is now the JSON from the TM30 Web C program,\n             * and table ready is true\n             * TODO: TableReady isn't really needed anymore due to not having a table on the Calculator page.\n             */\n            this.setState({\n              loading: false,\n              data: data.data,\n              tableReady: true\n            });\n\n            /**\n             * Redux command that we can use later to cache the data\n             * localStorage.setItem(\"data\", JSON.stringify(this.state.data));\n             */\n\n            /**\n             * Pushes the data to the Reports page and redirects to that page\n             */\n            this.props.history.push({\n              pathname: \"/Report\",\n              state: {\n                data: this.state.data,\n                name: this.state.name\n              }\n            });\n          });\n      });\n    }\n  }\n\n  populateSPDcells = () => {\n    var grid_items = [];\n    var wavelength_temp = [];\n    var spd_temp = [];\n    var i;\n    for (i = 0; i < 401; i++) {\n      grid_items.push([\n        {\n          readOnly: true,\n          value: i + 380,\n          className: \"cell\"\n        },\n        { value: data.data[i][this.state.example_number] }\n      ]);\n      wavelength_temp[i] = i + 380;\n      spd_temp[i] = data.data[i][this.state.example_number];\n    }\n    this.props.setSPDxWavelength(spd_temp, wavelength_temp);\n    this.setState({\n      grid: [\n        [\n          { readOnly: true, value: \"Wavelength\" },\n          { readOnly: true, className: \"cell\", value: \"SPD\" }\n        ],\n        ...grid_items\n      ]\n    });\n  };\n\n  /**\n   * Function that handles a change in the drop down menu.\n   * Basically the only functionality is that if the value is not equal to \"\" (Choose Example)\n   * then the button is disabled. Doesn't allow the user to send empty data or invalid data.\n   * @param {*} event   //The event of changeing the drop down menu\n   */\n  handleChange(event) {\n    if (event.target.value === \"\") {\n      this.setState({\n        example_number: event.target.value,\n        disabled: true,\n        tableReady: false\n      });\n    } else {\n      var example = event.target.value;\n      this.setState(\n        {\n          example_number: example,\n          disabled: false,\n          tableReady: true,\n          //name: example.substr(example.indexOf(\" \") + 1)\n          name: example\n        },\n        () => {\n          this.props.setExampleOpen();\n          this.populateSPDcells();\n        }\n      );\n    }\n  }\n  /**\n   * Render the component\n   */\n  render() {\n    const loading = this.state.loading; //If the loading spinner should be visible\n    /**\n     * Mapping the example names stored in \"this.example\" to be actual drop-down menu items\n     */\n    let optionItems = this.examples.map(example => (\n      <option key={example} value={example}>\n        {example}\n      </option>\n    ));\n    /**\n     * Return of the render\n     */\n    return (\n      /**\n       * Start of the form with a submission handler from above\n       */\n      <Grid>\n        <Row>\n          <Col xs={3}>\n            <form onSubmit={this.handleSubmit}>\n              <select\n                value={this.state.example_number}\n                onChange={this.handleChange}\n              >\n                <option value=\"\">Choose an Example</option>\n                {optionItems}\n              </select>\n              <br />\n              <br />\n              {loading ? (\n                <div>\n                  <label>\n                    {\" \"}\n                    Calculating Results <br />{\" \"}\n                    <LoadingSpinner color=\"copper\" size={6} />{\" \"}\n                  </label>\n                </div>\n              ) : (\n                <Button\n                  bsSize=\"sm\"\n                  type=\"submit\"\n                  disabled={this.state.disabled}\n                >\n                  Calculate\n                </Button>\n              )}\n            </form>\n          </Col>\n          <Col xs={8}>\n            {this.props.example_open ? (\n              <div>\n                <SPDxWavelength\n                  spd={this.props.SPDxWavelength.spd}\n                  wavelength={this.props.SPDxWavelength.wavelengths}\n                />\n                <br />\n                <ReactDataSheet\n                  data={this.state.grid}\n                  valueRenderer={cell => cell.value}\n                  onCellsChanged={changes => {\n                    const grid = this.state.grid.map(row => [...row]);\n                    changes.forEach(({ cell, row, col, value }) => {\n                      grid[row][col] = { ...grid[row][col], value };\n                    });\n                    this.setState({ grid });\n                  }}\n                />\n              </div>\n            ) : (\n              <div />\n            )}\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nExamples.propTypes = {\n  setSPDxWavelength: PropTypes.func.isRequired,\n  setExampleOpen: PropTypes.func.isRequired\n  //data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  SPDxWavelength: {\n    spd: state.dataReducers.spd,\n    wavelengths: state.dataReducers.wavelengths\n  },\n  example_open: state.dataReducers.example_open\n});\n\n/**\n * Export withRouter to be able to jump to the Reports page with the JSON Data\n */\nexport default withRouter(\n  connect(mapStateToProps, { setSPDxWavelength, setExampleOpen })(Examples)\n);\n//export default withRouter(Examples);\n","/**\n * FileInput.\n *\n * A component for the file input functionality of the calculator.\n * Takes a SPDX file and sends it to the server to be ran and\n * outputs the data.\n *\n * !IMPORTANT this functionality is no longer supported without LUXPY as of 11.07.2019\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React from \"react\";\nimport Button from \"react-bootstrap/es/Button\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\";\nimport { withRouter } from \"react-router-dom\";\n/**\n * FileInput class\n */\nclass FileInput extends React.Component {\n  /**\n   * Constructor function that sets the state, creates a\n   * file referance and binds the change functions\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.fileInput = React.createRef();\n    this.formData = new FormData();\n    this.state = {\n      loading: false,\n      data: [],\n      tableReady: false,\n      disabled: true\n    };\n  }\n  /**\n   * A function that handles the submission of a file.\n   * @param {*} event\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    /**\n     * Send file to server\n     * */\n    this.setState({ loading: true }, () => {\n      this.formData.append(\"file\", this.fileInput.current.files[0]);\n      axios\n        .post(\"http://localhost:5000/api/uploadSPDX\", this.formData)\n        .then(res => {\n          return res.data;\n        })\n        .then(data => {\n          console.log(data.data);\n          this.setState({\n            loading: false,\n            data: data.data,\n            tableReady: true\n          });\n          /**\n           * Not Really Used anymore but still could be used later\n           * localStorage.setItem(\"data\", JSON.stringify(this.state.data));\n           */\n\n          /**\n           * Pushes the data to the Reports page and redirects to that page\n           */\n          this.props.history.push({\n            pathname: \"/Report\",\n            state: {\n              data: this.state.data\n            }\n          });\n        });\n    });\n  }\n  /**\n   * Function to handle when a user chooses a file to upload.\n   * Mostly to change the button from disabled to abled so a user\n   * cannot send an empty request to the server\n   * @param {*} event   //The event of choosing a file to upload.\n   */\n  handleChange(event) {\n    console.log(event.target.value);\n    if (event.target.value === \"\") {\n      this.setState({\n        disabled: true\n      });\n    } else {\n      this.setState({\n        disabled: false\n      });\n    }\n  }\n\n  /**\n   * Render function of FileInput\n   */\n  render() {\n    const loading = this.state.loading;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <input\n            type=\"file\"\n            ref={this.fileInput}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n        {loading ? (\n          <div>\n            <label>\n              {\" \"}\n              Calculating Results <br />{\" \"}\n              <LoadingSpinner color=\"copper\" size=\"6\" />{\" \"}\n            </label>\n          </div>\n        ) : (\n          <Button bsSize=\"sm\" type=\"submit\" disabled={true}>\n            Calculate\n          </Button>\n        )}\n        {this.state.tableReady ? (\n          <div>\n            <br />\n            <table>\n              <thead>\n                <tr>\n                  <th>Wavelength</th>\n                  <th>Power Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.data.map(function(item, key) {\n                  return (\n                    <tr key={key}>\n                      <td>{item.wavelength}</td>\n                      <td>{item.powerValue}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </form>\n    );\n  }\n}\n/**\n * Export WithRouter so we can jump to the Report page.\n */\nexport default withRouter(FileInput);\n","/**\n * Paste.\n *\n * A component for the Paste option of the calculator.\n * A user can paste in an SPD and run the TM30\n * Calculation with that input.\n *\n * !The backend can not handle anything that is not a 380-780 by 1 step SPD as of 11.07.2019\n *\n * !Backend can handle integer values of wavelength size. as of 12.16.2019\n *\n * TODO Implement the Linear Interpolation functionality to the Pasting option.\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/es/Button\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport Card from \"pnnl-react-core/lib/Card\";\n//import Button from \"@material-ui/core/Button\";\nimport { withRouter } from \"react-router-dom\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\";\nimport axios from \"axios\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport ReactDataSheet from \"react-datasheet\";\n//import \"react-datasheet/lib/react-datasheet.css\";\nimport SPDxWavelength from \"../../Report/Plots/SPDxWavelength\";\n//Redux\nimport { setSPDxWavelength } from \"../../../../actions/dataActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setPasteOpen } from \"../../../../actions/dataActions\";\n\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    boxShadow: theme.shadows[10],\n    fontSize: 14\n  }\n}))(Tooltip);\n\n/**\n * Paste Class\n */\nexport class Paste extends Component {\n  /**\n   * Constructor that sets the state and binds some handler functions\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.SPDs = [];\n    this.wavelengths = [];\n    this.spd_temp = [];\n    this.wavelengths_temp = [];\n    this.state = {\n      spd_paste: \"\", //the SPD string inputed to the text area\n      spd_array: [], //the SPD array that is made from splicing the string\n      wavelength_array: [],\n      loading: false, //Boolean to control the loader\n      data: [], //Data that is returned from the C code\n      wavelength_start: 380, //The starting wavelength with default value of 380\n      wavelength_end: 780, //The ending wavelength with default value of 780\n      step: 1, //The step size with default value of 1\n      disabled: true, //Boolean to control if the button is disabled or not. Default is that it is.\n      name: \"\",\n      displayTable: false,\n      grid: [\n        [\n          { readOnly: true, value: \"Wavelength\" },\n          { readOnly: true, value: \"SPD\" }\n        ]\n      ]\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSPDChange = this.handleSPDChange.bind(this);\n    this.handleSubmitTable = this.handleSubmitTable.bind(this);\n    this.handleStartChange = this.handleStartChange.bind(this);\n    this.handleEndChange = this.handleEndChange.bind(this);\n    this.handleStepChange = this.handleStepChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n\n    /*\n    var i;\n    for (i = 0; i < 401; i++) {\n      this.state.grid.push([\n        {\n          readOnly: true,\n          value: i + parseInt(this.state.wavelength_start),\n          className: \"cell\"\n        },\n        { value: \"\" }\n      ]);\n    }\n    */\n  }\n  /*\n  populateSPDcells = () => {\n    this.setState(\n      {\n        grid: [\n          [\n            { readOnly: true, value: \"Wavelength\" },\n            { readOnly: true, className: \"cell\", value: \"SPD\" }\n          ]\n        ]\n      },\n      function() {\n        var i;\n        var spd_length =\n          this.state.wavelength_end - this.state.wavelength_start + 1;\n        for (i = 0; i < spd_length; i += parseInt(this.state.step)) {\n          this.state.grid.push([\n            {\n              readOnly: true,\n              value: i + parseInt(this.state.wavelength_start),\n              className: \"cell\"\n            },\n            { value: \"\" }\n          ]);\n        }\n      }\n    );\n  };\n  */\n\n  populateSPDcells = () => {\n    this.props.setSPDxWavelength([], []);\n    var grid_items = [];\n    var i;\n    var spd_length =\n      this.state.wavelength_end - this.state.wavelength_start + 1;\n    for (i = 0; i < spd_length; i += parseInt(this.state.step)) {\n      grid_items.push([\n        {\n          readOnly: true,\n          value: i + parseInt(this.state.wavelength_start),\n          className: \"cell\"\n        },\n        { value: \"\" }\n      ]);\n    }\n    this.setState({\n      grid: [\n        [\n          { readOnly: true, value: \"Wavelength\" },\n          { readOnly: true, className: \"cell\", value: \"SPD\" }\n        ],\n        ...grid_items\n      ]\n    });\n  };\n\n  updateGraph = () => {\n    this.spd_temp = [];\n    this.wavelengths_temp = [];\n    var array_i;\n    var next_spd;\n    for (array_i = 1; array_i < this.state.grid.length; array_i++) {\n      this.wavelengths_temp.push(this.state.grid[array_i][0].value);\n      next_spd = this.state.grid[array_i][1].value;\n      if (next_spd !== \"\") {\n        this.spd_temp.push(this.state.grid[array_i][1].value);\n      }\n    }\n    this.props.setSPDxWavelength(this.spd_temp, this.wavelengths_temp);\n  };\n\n  /**\n   * Start of Handler functions-----------------------------------\n   */\n\n  handleLeave = event => {\n    console.log(this.state);\n    this.populateSPDcells();\n  };\n\n  handleCreateTable = event => {\n    this.setState({\n      displayTable: true\n    });\n    this.props.setPasteOpen();\n    this.populateSPDcells();\n  };\n\n  /**\n   * Function that handles when the SPD paste text area is changed.\n   * Stores the value in state and checks if it should unlock\n   * the 'Calculation' button by checking all the other fields\n   */\n  handleSPDChange = event => {\n    this.setState({ spd_paste: event.target.value }, function() {\n      if (\n        this.state.spd_paste !== \"\" &&\n        this.state.step !== \"\" &&\n        this.state.wavelength_end !== \"\" &&\n        this.state.wavelength_start !== \"\"\n      ) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    });\n  };\n  /**\n   * Function that handles when the Start Wavelength is changed.\n   * Stores the value in state and checks if it should unlock\n   * the 'Calculation' button by checking all the other fields\n   */\n  handleStartChange = event => {\n    this.setState({ wavelength_start: event.target.value }, function() {\n      //console.log(\"setState completed\", this.state);\n      if (\n        this.state.spd_paste !== \"\" &&\n        this.state.step !== \"\" &&\n        this.state.wavelength_end !== \"\" &&\n        this.state.wavelength_start !== \"\"\n      ) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    });\n  };\n  /**\n   * Function that handles when the End Wavelength is changed.\n   * Stores the value in state and checks if it should unlock\n   * the 'Calculation' button by checking all the other fields\n   */\n  handleEndChange = event => {\n    this.setState({ wavelength_end: event.target.value }, function() {\n      //console.log(\"setState completed\", this.state);\n      if (\n        this.state.spd_paste !== \"\" &&\n        this.state.step !== \"\" &&\n        this.state.wavelength_end !== \"\" &&\n        this.state.wavelength_start !== \"\"\n      ) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    });\n  };\n  /**\n   * Function that handles when the End Wavelength is changed.\n   * Stores the value in state and checks if it should unlock\n   * the 'Calculation' button by checking all the other fields\n   */\n  handleStepChange = event => {\n    this.setState({ step: parseInt(event.target.value) }, function() {\n      //console.log(\"setState completed\", this.state);\n      if (\n        this.state.spd_paste !== \"\" &&\n        this.state.step !== \"\" &&\n        this.state.wavelength_end !== \"\" &&\n        this.state.wavelength_start !== \"\"\n      ) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    });\n  };\n\n  handleNameChange = event => {\n    this.setState({ name: event.target.value });\n  };\n  /**\n   * Handle the submission of a psted in SPD\n   * @param {*} event\n   */\n  handleSubmit(event) {\n    /**\n     * Check to see if the SPD is 380-780 by a step of 1\n     * !This calculator does not allow for any other type of SPD\n     * !than 380-780 by 1 for the time being.\n     */\n    if (\n      false\n      //this.state.wavelength_start !== 380 ||\n      //this.state.wavelength_end !== 780 ||\n      //this.state.step !== 1\n    ) {\n      alert(\"Sorry SPDs other than 380-780 by stepd of 1 are not permitted\");\n    } else {\n      this.setState(\n        {\n          wavelength_array: []\n        },\n        function() {\n          var i;\n          var array_i = 0;\n          for (\n            i = this.state.wavelength_start;\n            i <= this.state.wavelength_end;\n            i += this.state.step\n          ) {\n            console.log(\n              `i = ${i} array_i = ${array_i} start = ${this.state.wavelength_start} end = ${this.state.wavelength_end}`\n            );\n            this.state.wavelength_array[array_i] = i;\n            array_i++;\n          }\n          //console.log(this.state.wavelength_array);\n        }\n      );\n      /**\n       * Set state to place the text area SPD Paste as an array into spd_array\n       */\n      this.setState(\n        { spd_array: this.state.spd_paste.split(\"\\n\") },\n        function() {\n          console.log(this.state.spd_array);\n          if (\n            this.state.spd_array.length === this.state.wavelength_array.length\n          ) {\n            this.setState({ loading: true }, () => {\n              axios.defaults.headers.common = {};\n              axios.defaults.headers.common.accept = \"application/json\";\n              axios\n                .post(\"/tm30Paste\", {\n                  spd: this.state.spd_array,\n                  wavelength: this.state.wavelength_array\n                })\n                .then(res => {\n                  return res.data;\n                })\n                .then(data => {\n                  /**\n                   * Set the state that loading is false,\n                   * data is the json from the C code\n                   * and tableReady is true\n                   *\n                   * TODO: TableReady is no longer used. Could take out.\n                   */\n                  this.setState({\n                    loading: false,\n                    data: data.data,\n                    tableReady: true\n                  });\n                  /**\n                   * Used later to store the data in cache\n                   * localStorage.setItem(\"data\", JSON.stringify(this.state.data));\n                   */\n                  console.log(this.state);\n                  /**\n                   * Pushes the data to the Reports page and redirects to that page\n                   */\n                  this.props.history.push({\n                    pathname: \"/Report\",\n                    state: {\n                      data: this.state.data\n                    }\n                  });\n                });\n            });\n          } else {\n            alert(\n              \"Error: Length of SPD array does not match length of wavelength array.\"\n            );\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handle the submission of a psted in SPD\n   * @param {*} event\n   */\n  handleSubmitTable(event) {\n    this.wavelengths = [];\n    this.SPDs = [];\n    //console.log(this.state.grid);\n    //console.log(this.state.grid.length);\n    //console.log(this.state.grid[1][0].value);\n    var next_spd;\n    if (\n      false\n      //this.state.wavelength_start !== 380 ||\n      //this.state.wavelength_end !== 780 ||\n      //this.state.step !== 1\n    ) {\n      alert(\"Sorry SPDs other than 380-780 by stepd of 1 are not permitted\");\n    } else {\n      this.setState(\n        {\n          wavelength_array: [],\n          spd_array: []\n        },\n        function() {\n          var array_i;\n          for (array_i = 1; array_i < this.state.grid.length; array_i++) {\n            this.wavelengths.push(this.state.grid[array_i][0].value);\n            next_spd = this.state.grid[array_i][1].value;\n            if (next_spd !== \"\") {\n              this.SPDs.push(this.state.grid[array_i][1].value);\n            }\n          }\n          if (\n            this.wavelengths.length === this.SPDs.length &&\n            !(this.SPDs.length === 0)\n          ) {\n            this.setState(\n              {\n                loading: true,\n                spd_array: this.SPDs,\n                wavelength_array: this.wavelengths\n              },\n              () => {\n                axios.defaults.headers.common = {};\n                axios.defaults.headers.common.accept = \"application/json\";\n                axios\n                  //.post(\"http://localhost:5000/api/tm30Paste\", {\n                  .post(\"http://lampprod03.pnl.gov:8081/api/tm30Paste\", {\n                    spd: this.state.spd_array,\n                    wavelength: this.state.wavelength_array\n                  })\n                  .then(res => {\n                    return res.data;\n                  })\n                  .then(data => {\n                    this.setState({\n                      loading: false,\n                      data: data.data,\n                      tableReady: true\n                    });\n                    console.log(this.state);\n                    this.props.history.push({\n                      pathname: \"/Report\",\n                      state: {\n                        data: this.state.data,\n                        name: this.state.name\n                      }\n                    });\n                  });\n              }\n            );\n          } else {\n            alert(\n              \"Error: Length of SPD array does not match length of wavelength array.\"\n            );\n          }\n        }\n      );\n    }\n  }\n  /**\n   * End of Handler functions-----------------------------------\n   */\n\n  /**\n   * Render function for Paste\n   */\n  render() {\n    var loading = this.state.loading;\n    return (\n      <Card>\n        <Grid>\n          <h3>Paste SPD Data</h3>\n          <Row>\n            <Col xs={2}>\n              <form>\n                <div style={{ position: \"inherit\", display: \"inline-block\" }}>\n                  <label>\n                    Start Wavelength (nm):\n                    <br />\n                    <LightTooltip\n                      title=\"Recommended value is 380 nm. Value may not be greater than 400 nm.\"\n                      placement=\"right\"\n                    >\n                      <input\n                        onChange={this.handleStartChange}\n                        //onBlur={this.handleLeave}\n                        defaultValue={380}\n                      ></input>\n                    </LightTooltip>\n                  </label>\n                  <br />\n                  <label>\n                    End Wavelength (nm):\n                    <br />\n                    <LightTooltip\n                      title=\"Recommended value is 780 nm. Value may not be less than 700 nm.\"\n                      placement=\"right\"\n                    >\n                      <input\n                        onChange={this.handleEndChange}\n                        defaultValue={780}\n                      ></input>\n                    </LightTooltip>\n                  </label>\n                  <br />\n                  <label>\n                    Interval (nm):\n                    <br />\n                    <LightTooltip\n                      title=\"Recommended value is 1 nm. Value may not be greater than 5 nm.\"\n                      placement=\"right\"\n                    >\n                      <input\n                        onChange={this.handleStepChange}\n                        //onBlur={this.handleLeave}\n                        defaultValue={1}\n                      ></input>\n                    </LightTooltip>\n                  </label>\n                </div>\n                {loading ? (\n                  <div>\n                    <br />\n                    <label>\n                      {\" \"}\n                      Calculating Results <br />{\" \"}\n                      <LoadingSpinner color=\"copper\" size={6} />{\" \"}\n                    </label>\n                  </div>\n                ) : (\n                  <div>\n                    <LightTooltip\n                      title=\"Create Table for Wavelengths\"\n                      placement=\"bottom\"\n                    >\n                      <span>\n                        <Button bsSize=\"sm\" onClick={this.handleCreateTable}>\n                          Create Table\n                        </Button>\n                      </span>\n                    </LightTooltip>\n\n                    <div\n                      style={{\n                        width: \"5%\",\n                        display: \"inline-block\"\n                      }}\n                    />\n\n                    <LightTooltip\n                      title=\"Runs the calculation when enough data is entered\"\n                      placement=\"bottom\"\n                    >\n                      <span>\n                        <Button\n                          bsSize=\"sm\"\n                          onClick={this.handleSubmitTable}\n                          //disabled={this.state.disabled}\n                        >\n                          Calculate\n                        </Button>\n                      </span>\n                    </LightTooltip>\n                  </div>\n                )}\n              </form>\n            </Col>\n            <Col xs={9}>\n              {this.props.paste_open ? (\n                <div>\n                  <label>\n                    Name of SPD:\n                    <br />\n                    <input\n                      onChange={this.handleNameChange}\n                      defaultValue={\"\"}\n                    ></input>\n                  </label>\n\n                  <br />\n                  <SPDxWavelength\n                    spd={this.props.SPDxWavelength.spd}\n                    wavelength={this.props.SPDxWavelength.wavelengths}\n                  />\n                  <br />\n\n                  <ReactDataSheet\n                    data={this.state.grid}\n                    valueRenderer={cell => cell.value}\n                    onCellsChanged={changes => {\n                      const grid = this.state.grid.map(row => [...row]);\n                      changes.forEach(({ cell, row, col, value }) => {\n                        grid[row][col] = { ...grid[row][col], value };\n                      });\n                      this.setState({ grid });\n                      this.updateGraph();\n                    }}\n                  />\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </Col>\n          </Row>\n        </Grid>\n      </Card>\n    );\n  }\n}\n\nPaste.propTypes = {\n  setSPDxWavelength: PropTypes.func.isRequired,\n  setPasteOpen: PropTypes.func.isRequired\n  //data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  SPDxWavelength: {\n    spd: state.dataReducers.spd,\n    wavelengths: state.dataReducers.wavelengths\n  },\n  paste_open: state.dataReducers.paste_open\n});\n\n/**\n * Export withRouter so we can jump to the Reports page\n */\nexport default withRouter(\n  connect(mapStateToProps, { setSPDxWavelength, setPasteOpen })(Paste)\n);\n","/**\n * Calc.\n *\n * A component for the Calculator page of the program.\n * Contains three different \"Sections\" or input options\n *\n * A - Example\n * - The user is able to select an Example SPD to send to the server for it to run\n *\n * B - File Input\n * - The user is able to choose an SPDX file that the app will parse and send the SPD and Wavelength information to the Server\n *\n * C - Paste Option\n * - The user is able to specify the details on their Wavelength 9Start, end, and Step size)\n * and then paste in the SPD (In a newline seperated format) to send to the Server to run\n *\n * !The backend can not handle anything that is not a 380-780 by 1 step SPD as of 11.07.2018\n *\n * TODO Implement the Linear Interpolation functionality to the Pasting option.\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React from \"react\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Examples from \"./Sections/Examples\";\nimport FileInput from \"./Sections/FileInput\";\nimport Paste from \"./Sections/Paste\";\nimport Col from \"react-bootstrap/es/Col\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Pagination from \"react-bootstrap/es/Pagination\";\n/**\n * The Calc class. Just uses all three options as seperate components\n */\nclass Calc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.examples = \"Examples\";\n    this.import_file = \"Import File\";\n    this.paste_data = \"Paste Data\";\n    this.state = {\n      width: 0,\n      height: 0,\n      active: null\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.pageChanged = this.pageChanged.bind(this);\n  }\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  /**\n   * Handler for changing the tab on the Reports page.\n   * @param {*} e //The event of changing tabs. Contains the tesxt of the tab\n   */\n  pageChanged(e) {\n    if (!(e.target.text == null)) {\n      this.setState({\n        active: e.target.text\n      });\n    }\n  }\n  render() {\n    return (\n      <div\n        style={{\n          height: this.state.height - 300\n        }}\n      >\n        <Grid>\n          <br />\n          <Row>\n            <Col xs={12}></Col>\n          </Row>\n          <Row>\n            <Col align=\"center\">\n              <Pagination onClick={this.pageChanged}>\n                <Pagination.Item\n                  key={this.examples}\n                  active={\n                    this.examples === this.state.active ||\n                    this.state.active == null\n                  }\n                >\n                  Examples\n                </Pagination.Item>\n                <Pagination.Item\n                  key={this.import_file}\n                  active={this.import_file === this.state.active}\n                >\n                  Import File\n                </Pagination.Item>\n                <Pagination.Item\n                  key={this.paste_data}\n                  active={this.paste_data === this.state.active}\n                >\n                  Paste Data\n                </Pagination.Item>\n              </Pagination>\n            </Col>\n          </Row>\n          <br />\n          {this.state.active === this.examples || this.state.active == null ? (\n            <div>\n              {\" \"}\n              <Col xs={12}>\n                <Card>\n                  <h2>Input SPD from Library</h2>\n                  {/*<label>\n        User:\n        <select id=\"User\" name=\"User\">\n          <option value=\"one\">1</option>\n          <option value=\"two\">2</option>\n          <option value=\"three\">3</option>\n        </select>\n      </label>\n      <br />\n      <label>\n        Commercial:\n        <select id=\"Commercial\" name=\"Commercial\">\n          <option value=\"one\">1</option>\n          <option value=\"two\">2</option>\n          <option value=\"three\">3</option>\n        </select>\n      </label>\n      <br />\n      */}\n                  <label>Example:</label>\n                  <div className=\"select\">\n                    <Examples cvg_options={this.state} />\n                  </div>\n                </Card>\n              </Col>\n            </div>\n          ) : (\n            <div></div>\n          )}\n          {this.state.active === this.import_file ? (\n            <div>\n              {\" \"}\n              <Card>\n                <h2>Import .spdx File</h2>\n                <FileInput />\n              </Card>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          {this.state.active === this.paste_data ? (\n            <div>\n              {\" \"}\n              <Paste />\n            </div>\n          ) : (\n            <div></div>\n          )}\n          <Row>\n            <Col xs={12}>\n              <br />\n              {/*\n              <Card>\n                <h2>CVG Options</h2>\n                <div>\n                  <FormControlLabel\n                    control={\n                      <CustCheckBox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"large\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"large\" />}\n                        checked={this.state.bin_labels}\n                        onChange={this.handleBinLabels}\n                      />\n                    }\n                    labelPlacement=\"End\"\n                    label={\n                      <span style={{ fontSize: \"1.85rem\" }}>Bin Labels</span>\n                    }\n                  />\n\n                  <FormControlLabel\n                    control={\n                      <CustCheckBox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"large\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"large\" />}\n                        checked={this.state.bin_dividers}\n                        onChange={this.handleBinDividers}\n                      />\n                    }\n                    labelPlacement=\"End\"\n                    label={\n                      <span style={{ fontSize: \"1.85rem\" }}>Bin Dividers</span>\n                    }\n                  />\n                  \n                  <FormControlLabel\n                    control={\n                      <CustCheckBox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"large\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"large\" />}\n                        checked={this.state.chroma_isolines}\n                        onChange={this.handleChromaIsolines}\n                      />\n                    }\n                    labelPlacement=\"End\"\n                    label={\n                      <span style={{ fontSize: \"1.85rem\" }}>\n                        Chroma Isolines\n                      </span>\n                    }\n                  />\n                  \n                </div>\n              </Card>\n              */}\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Calc;\n","/**\n * Local Hue Shift Bar Graph\n *\n * A component for the Local Hue Shift Bar Graph. Your basic\n * bar graph with the \"local_hue_shift\" data from the returned JSON\n * from the C code. There are a few conditionals if it is Big (Graphical Results)\n * or not (the basic results). The difference between the two is pixel size and\n * spacing between the bars.\n *\n * TODO - Add the Samples per bin (m) above each bar\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { orange } from \"@material-ui/core/colors\";\n/**\n * LHSPlot Class\n */\nexport class LHSPlot extends Component {\n  constructor(props) {\n    super(props);\n    var lcs = this.props.data;\n    var i;\n    this.long = this.props.long;\n    this.intermediate = this.props.active;\n    /**\n     * Check whether it is the long graph or not.\n     * The long graph is used in the graphical results\n     * tab in the report page.\n     */\n    if (this.long) {\n      this.width = 1600;\n      this.height = 400;\n      this.bar_gap = 5;\n    } else if (this.intermediate) {\n      this.style = { width: \"100%\", paddingBottom: \"50%\" };\n      //this.width = 550;\n      //this.height = 412;\n    } else {\n      this.style = { width: \"100%\", paddingBottom: \"50%\" };\n      //this.width = 550;\n      //this.height = 400;\n      this.bar_gap = 0;\n    }\n\n    this.x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n    this.y = [\n      lcs[0],\n      lcs[1],\n      lcs[2],\n      lcs[3],\n      lcs[4],\n      lcs[5],\n      lcs[6],\n      lcs[7],\n      lcs[8],\n      lcs[9],\n      lcs[10],\n      lcs[11],\n      lcs[12],\n      lcs[13],\n      lcs[14],\n      lcs[15]\n    ];\n    console.log(this.y);\n\n    this.y_rounded = [];\n\n    for (i = 0; i < 16; i++) {\n      this.y_rounded[i] = `${(Math.round(this.y[i] * 100) / 100).toFixed(2)}`;\n    }\n    /**\n     * Colors for each bar/Huebin. Used throughout the code.\n     */\n    this.bar_colors = [\n      \"#b45c60\",\n      \"#cb7761\",\n      \"#cb824b\",\n      \"#d7ad67\",\n      \"#ac9a5d\",\n      \"#919E60\",\n      \"#678B5F\",\n      \"#62B08F\",\n      \"#7CBABA\",\n      \"#2C797D\",\n      \"#54778C\",\n      \"#7189B1\",\n      \"#988CA9\",\n      \"#735876\",\n      \"#8F6682\",\n      \"#B97B8E\"\n    ];\n  }\n  render() {\n    return (\n      <Plot\n        useResizeHandler={true}\n        style={this.style}\n        title={null}\n        data={[\n          {\n            name: \"\",\n            type: \"bar\",\n            x: this.x,\n            y: this.y,\n            marker: {\n              color: this.bar_colors\n            },\n            textfont: {\n              size: 14\n            },\n            text: this.y_rounded,\n            textangle: \"-90\",\n            textposition: \"outside\",\n            hovertemplate: `R<sub>hs,h%{x}</sub>: %{text}`\n          }\n        ]}\n        layout={{\n          //width: this.width,\n          height: this.height,\n          margin: {\n            l: 60,\n            r: 10,\n            b: 45,\n            t: 10,\n            pad: 4\n          },\n          xaxis: {\n            title: {\n              text: \"Hue-Angle Bin (<i>j</i>)\"\n            },\n            tickmode: \"linear\"\n          },\n          yaxis: {\n            range: [-0.4, 0.4],\n            title: {\n              text: \"Local Hue Shift (<i>R</i><sub>hs,h<i>j</i></sub>)\",\n              font: {\n                size: 20\n              }\n            },\n            tickformat: \"\"\n          },\n          bargap: this.bar_gap\n        }}\n        config={{\n          displaylogo: false,\n          modeBarButtons: [[\"toImage\"]],\n          responsive: true,\n          toImageButtonOptions: {\n            format: \"png\", // one of png, svg, jpeg, webp\n            filename: \"Local Hue Shift\",\n            height: 700,\n            width: 900,\n            scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default LHSPlot;\n","/**\n * Local Chroma Shift Bar Graph\n *\n * A component for the Chroma Shift Bar Graph. Your basic\n * bar graph with the \"local_chroma_shift\" data from the returned JSON\n * from the C code. There are a few conditionals if it is Big (Graphical Results)\n * or not (the basic results). The difference between the two is pixel size and\n * spacing between the bars.\n *\n * TODO - Add the Samples per bin (m) above each bar\n * TODO - Shows the exact percentages over the hover rather than the rounded\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport Card from \"pnnl-react-core/lib/Card\";\n/**\n * LCSPlot Class\n */\nexport class LCSPlot extends Component {\n  /**\n   * Constructor that pulls in data from the props.\n   * Also uses the \"long\" variable boolean to check\n   * if it is the graph for the Graphical page\n   * which will make the graph longer and have more\n   * spacing in between the bars\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    var lcs = this.props.data;\n    var i;\n\n    this.long = this.props.long;\n    this.intermediate = this.props.active;\n    /**\n     * Check whether it is the long graph or not.\n     * The long graph is used in the graphical results\n     * tab in the report page.\n     */\n    if (this.long) {\n      this.width = 800;\n      this.height = 400;\n      this.bar_gap = 5;\n    } else if (this.intermediate) {\n      this.style = { width: \"100%\", paddingBottom: \"50%\" };\n      //this.width = 550;\n      //this.height = 412;\n    } else {\n      this.style = { width: \"100%\", paddingBottom: \"50%\" };\n      //this.width = 550;\n      //this.height = 400;\n      this.bar_gap = 0;\n    }\n\n    this.x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n    this.y = [\n      lcs[0] / 100,\n      lcs[1] / 100,\n      lcs[2] / 100,\n      lcs[3] / 100,\n      lcs[4] / 100,\n      lcs[5] / 100,\n      lcs[6] / 100,\n      lcs[7] / 100,\n      lcs[8] / 100,\n      lcs[9] / 100,\n      lcs[10] / 100,\n      lcs[11] / 100,\n      lcs[12] / 100,\n      lcs[13] / 100,\n      lcs[14] / 100,\n      lcs[15] / 100\n    ];\n\n    this.y_rounded = [];\n\n    for (i = 0; i < 16; i++) {\n      this.y_rounded[i] = `${Math.round(this.y[i] * 100)}%`;\n      //this.y[i] = `${(Math.round(this.y[i] * 100) / 100).toFixed(2)}`;\n    }\n    /**\n     * Colors for each bar/Huebin. Used throughout the code.\n     */\n    this.bar_colors = [\n      \"#b45c60\",\n      \"#cb7761\",\n      \"#cb824b\",\n      \"#d7ad67\",\n      \"#ac9a5d\",\n      \"#919E60\",\n      \"#678B5F\",\n      \"#62B08F\",\n      \"#7CBABA\",\n      \"#2C797D\",\n      \"#54778C\",\n      \"#7189B1\",\n      \"#988CA9\",\n      \"#735876\",\n      \"#8F6682\",\n      \"#B97B8E\"\n    ];\n    this.y_full = [\n      lcs[0],\n      lcs[1],\n      lcs[2],\n      lcs[3],\n      lcs[4],\n      lcs[5],\n      lcs[6],\n      lcs[7],\n      lcs[8],\n      lcs[9],\n      lcs[10],\n      lcs[11],\n      lcs[12],\n      lcs[13],\n      lcs[14],\n      lcs[15]\n    ];\n  }\n  render() {\n    return (\n      <Plot\n        useResizeHandler={true}\n        style={this.style}\n        title={null}\n        data={[\n          {\n            name: \"\",\n            type: \"bar\",\n            x: this.x,\n            y: this.y,\n            marker: {\n              color: this.bar_colors\n            },\n            textfont: {\n              size: 14\n            },\n            outsidetextfont: {\n              size: 14\n            },\n            text: this.y_rounded,\n            textangle: \"-90\",\n            textposition: \"outside\",\n            hovertemplate: `R<sub>cs,h%{x}</sub>: %{y:.2f}`\n            //hoverinfo: \"y\"\n          }\n        ]}\n        layout={{\n          //width: this.width,\n          height: this.height,\n          margin: {\n            l: 70,\n            r: 10,\n            b: 45,\n            t: 10,\n            pad: 4\n          },\n          xaxis: {\n            title: {\n              text: \"Hue-Angle Bin (<i>j</i>)\"\n            },\n            tickmode: \"linear\"\n          },\n          yaxis: {\n            range: [-0.4, 0.4],\n            tickmode: \"array\",\n            tickvals: [0, 0.1, 0.2, 0.3, 0.4, -0.1, -0.2, -0.3, -0.4],\n            ticktext: [\n              \"0%\",\n              \"10%\",\n              \"20%\",\n              \"30%\",\n              \"40%\",\n              \"-10%\",\n              \"-20%\",\n              \"-0%\",\n              \"-40%\"\n            ],\n            title: {\n              text:\n                \"Local Chroma Shift (<i>R</i><sub>cs,h<i>j</i></sub>) <br />\",\n              font: {\n                size: 20\n              }\n            }\n            //tickformat: \"\"\n          },\n          bargap: this.bar_gap\n        }}\n        config={{\n          displaylogo: false,\n          modeBarButtons: [[\"toImage\"]],\n          responsive: true,\n          toImageButtonOptions: {\n            format: \"png\", // one of png, svg, jpeg, webp\n            filename: \"Local Chroma Shift\",\n            height: 700,\n            width: 900,\n            scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default LCSPlot;\n","/**\n * Local Hue Shift Bar Graph\n *\n * A component for the Local Hue Shift Bar Graph. Your basic\n * bar graph with the \"local_hue_shift\" data from the returned JSON\n * from the C code. There are a few conditionals if it is Big (Graphical Results)\n * or not (the basic results). The difference between the two is pixel size and\n * spacing between the bars.\n *\n * TODO - Add the Samples per bin (m) above each bar\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n/**\n * LHSPlot Class\n */\nexport class LHSPlot extends Component {\n  /**\n   * Constructor that pulls in data from the props.\n   * Also uses the \"long\" variable boolean to check\n   * if it is the graph for the Graphical page\n   * which will make the graph longer and have more\n   * spacing in between the bars\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    var lcs = this.props.data; //The lcs variable name is a remnant of copying and pasting from another component\n    var i;\n    this.long = this.props.long;\n    /**\n     * Check whether it is the long graph or not.\n     * The long graph is used in the graphical results\n     * tab in the report page.\n     */\n    if (this.long) {\n      this.width = 1600;\n      this.height = 400;\n      this.bar_gap = 5;\n    } else {\n      this.style = { width: \"100%\", paddingBottom: \"48%\" };\n      //this.width = 550;\n      //this.height = 400;\n      this.bar_gap = 0;\n    }\n\n    this.x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n    this.y = [\n      lcs[0],\n      lcs[1],\n      lcs[2],\n      lcs[3],\n      lcs[4],\n      lcs[5],\n      lcs[6],\n      lcs[7],\n      lcs[8],\n      lcs[9],\n      lcs[10],\n      lcs[11],\n      lcs[12],\n      lcs[13],\n      lcs[14],\n      lcs[15]\n    ];\n\n    this.y_rounded = [];\n\n    for (i = 0; i < 16; i++) {\n      this.y_rounded[i] = `${Math.round(this.y[i])}`;\n    }\n    /**\n     * Colors for each bar/Huebin. Used throughout the code.\n     */\n    this.bar_colors = [\n      \"#b45c60\",\n      \"#cb7761\",\n      \"#cb824b\",\n      \"#d7ad67\",\n      \"#ac9a5d\",\n      \"#919E60\",\n      \"#678B5F\",\n      \"#62B08F\",\n      \"#7CBABA\",\n      \"#2C797D\",\n      \"#54778C\",\n      \"#7189B1\",\n      \"#988CA9\",\n      \"#735876\",\n      \"#8F6682\",\n      \"#B97B8E\"\n    ];\n  }\n  /**\n   * Render method for the LCFPlot\n   */\n  render() {\n    return (\n      <div>\n        <Plot\n          useResizeHandler={true}\n          style={this.style}\n          title={null}\n          data={[\n            {\n              name: \"\",\n              type: \"bar\",\n              x: this.x,\n              y: this.y,\n              marker: {\n                color: this.bar_colors\n              },\n              textfont: {\n                size: 14\n              },\n              text: this.y_rounded,\n              textposition: \"outside\",\n              hovertemplate: `R<sub>f,h%{x}</sub>: %{text}`\n            }\n          ]}\n          layout={{\n            //width: this.width,\n            height: this.height,\n            margin: {\n              l: 60,\n              r: 10,\n              b: 45,\n              t: 0\n              //pad: 4\n            },\n            xaxis: {\n              title: {\n                text: \"Hue-Angle Bin (<i>j</i>)\"\n              },\n              tickmode: \"linear\"\n            },\n            yaxis: {\n              range: [0, 115],\n              title: {\n                text: \"Local Color Fidelity (R<sub>f,h<i>j</i></sub>)\",\n                font: {\n                  size: 20\n                }\n              },\n              tickformat: \"\"\n            },\n            bargap: this.bar_gap\n          }}\n          config={{\n            displaylogo: false,\n            modeBarButtonsToAdd: [\"toImage\"]\n          }}\n          config={{\n            displaylogo: false,\n            modeBarButtons: [[\"toImage\"]],\n            responsive: true,\n            toImageButtonOptions: {\n              format: \"png\", // one of png, svg, jpeg, webp\n              filename: \"Local Color Fidelity\",\n              height: 700,\n              width: 900,\n              scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LHSPlot;\n","/**\n * Equal Luminous Flux Plot\n *\n * A component for the Equal Luminous Flux graph based off of the excel calculator.\n * Pretty straightforward graph that creates two lines from the returned Data from the C code.\n * The red line is the normalized_SPD_test data and the black line is the normalized_SPD_ref\n * data. Both can be found in the JSON that is returned from the C code.\n *\n * TODO - Place the legend inside the graph rather than on the outside.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\n/**\n * The ELFPlot Class\n */\nexport class ELFPlot extends Component {\n  /**\n   * Constructor that grabs the data passed in the props\n   * The Caption variable is a boolean which determines if it is\n   * used for the Basic page (no caption) or the Graphical page\n   * where it does have a caption\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.spd_test = this.props.test;\n    this.spd_ref = this.props.ref_spd;\n    this.caption = this.props.caption;\n    this.small = this.props.small;\n    if (this.small) {\n      this.style = { width: \"100%\" };\n    } else {\n      this.style = { width: \"100%\", paddingBottom: \"50%\" };\n    }\n    this.small_style = {\n      //position: \"inherit\",\n      //display: \"inline-block\"\n    };\n    var i;\n    /**\n     * Creating the wavelength array which is the X-value of the ordered\n     * pair for each line and data set.\n     *\n     * TODO - Will have to change this once we implement Linear interpolation.\n     */\n    this.wavelength = this.props.wavelengths;\n    //for (i = 0; i < 400; i++) {\n    //  this.wavelength[i] = i + 380;\n    //}\n  }\n  /**\n   * Return method for the ELFPlot\n   */\n  render() {\n    return (\n      <div style={this.small_style}>\n        <Plot\n          useResizeHandler={true}\n          style={this.style}\n          data={[\n            {\n              name: \"Test\",\n              x: this.wavelength,\n              y: this.spd_test,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              hovertemplate: \"%{y:.4f}\",\n              marker: { color: \"red\" }\n            },\n            {\n              name: \"Reference\",\n              x: this.wavelength,\n              y: this.spd_ref,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              hovertemplate: \"%{y:.4f}\",\n              marker: { color: \"black\" }\n            }\n          ]}\n          layout={{\n            //width: 800,\n            //height: 400,\n            legend: {\n              xanchor: \"center\",\n              yanchor: \"top\",\n              y: -0.2,\n              x: 0.5,\n              orientation: \"h\"\n            },\n            margin: {\n              l: 60,\n              r: 30,\n              b: 45,\n              t: 0,\n              pad: 4\n            },\n            xaxis: {\n              title: {\n                text: \"Wavelength (nm)\"\n              },\n              tick0: 380,\n              dtick: 50\n            },\n            yaxis: {\n              title: {\n                text: \"Radiant Power <br /> (Equal Luminous Flux)\"\n              },\n              tickformat: \"\",\n              showticklabels: false\n            }\n          }}\n          config={{\n            displaylogo: false,\n            modeBarButtons: [[\"toImage\"]],\n            responsive: true,\n            toImageButtonOptions: {\n              format: \"png\", // one of png, svg, jpeg, webp\n              filename: \"Equal Luminous Flux\",\n              height: 700,\n              width: 900,\n              scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n            }\n          }}\n        />\n        {this.caption ? (\n          <div align=\"center\">\n            <h5>Spectral Power Distribution Comparison </h5>\n            Each SPD has been normalized so that the luminance factor (Y) is\n            100, <br /> as it is done in IES TM-30 calculations.\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ELFPlot;\n","/**\n * Color Vector Graph\n *\n * A component for the Color Vector Graph specified in the Excel calculator.\n * This graph is fairly extensive and has a lot of moving parts.\n *\n * In it's basic form it is a scatter plot that creates a circular ploygon with the data\n * from (path_x Test, path_y Test) points and (path_x Ref, path_y Ref) points to create two\n * different circles.\n *\n * We then create different color vectors pointing from each Reference point to the Test Point.\n * The Colors are just for aesthetic purposes and are not a standard. However, they are the same\n * colors in the same odrder as the ones from \"Numerical Results\" when we colors the huebins.\n *\n * From there we create 5 White Reference circles that are -20%, -10%, 0%, +10%, and +20% of\n * the unit circle.\n *\n * Then we overlay the Huebin lines by using some simple geometry and play the huebin labels\n * a little further out than the white reference cirlces\n *\n * Finally, we position the numerical data in all four corners of the graph\n *\n * DONE - Create the ability to turn off the Huebin Labels, Huebin Dividers, and Chroma Isolines. All seperate functionality, mix and match.\n * DONE (Cont.) - Make the options stored in redux store\n * DONE - Put the options putton within the graph on the pop up bar.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { connect } from \"react-redux\";\nimport {\n  setBinDividers,\n  setBinLabels,\n  setChromaIsolines\n} from \"../../../../actions/dataActions\";\nimport PropTypes from \"prop-types\";\n\n/**\n * CVG Plot Class\n */\nexport class CVGPlot extends Component {\n  /**\n   * Very extensive Constructor method. A lot of data is being used in the\n   * graph and some of it has to be rounded, other has to be calculated such\n   * as the huebin lines and the white reference circles.\n   * IMPORTANT - there is a prop called \"small\". It is a boolean to differentiate\n   * the \"Basic Results\" page CVG graph from the \"Graphical Results\" CVG graph.\n   * The Basic Results CVG graph is larger thus it is not needed to specify what\n   * small is, however, you need to specify small as {true} in the Graphical Results page.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.xtest = this.props.xtest; //x tests values\n    this.xtest.push(this.xtest[0]); //Make it completely round\n    this.ytest = this.props.ytest; //y tests values\n    this.ytest.push(this.ytest[0]); //Make it completely round\n\n    this.xref = this.props.xref; //x Ref values\n    this.xref.push(this.xref[0]); //Make it completely round\n    this.yref = this.props.yref; //x Ref values\n    this.yref.push(this.yref[0]); //Make it completely round\n\n    /**\n     * Rounding the information on the graph\n     */\n    this.rf = Math.round(this.props.rf);\n    this.rg = Math.round(this.props.rg);\n    this.cct = Math.round(this.props.cct);\n    this.duv = Math.round(this.props.duv * 10000) / 10000;\n    this.small_bool = this.props.small;\n    /**\n     * Determine if we are dealing with with the small version (Graphical Page)\n     * or the Bigger (Basic Results) Plot\n     */\n    if (this.small_bool) {\n      this.arrow_size = 2;\n      this.x_size = 325;\n      this.y_size = 325;\n      this.rg_label = [1.25, 1.2];\n      this.rf_label = [-1.25, 1.2];\n      this.duv_label = [1.1, -1.25];\n      this.cct_label = [-1.1, -1.25];\n      this.style = { width: 325, height: 325 };\n      this.small_style = {\n        position: \"inherit\",\n        display: \"inline-block\",\n        padding: \"50 50 50 50\"\n      };\n    } else if (this.props.active === \"Intermediate\") {\n      this.arrow_size = 3;\n      this.style = { width: \"100%\", paddingBottom: \"100%\" };\n      this.x_size = 650;\n      this.y_size = 825;\n      this.rg_label = [1.35, 1.3];\n      this.rf_label = [-1.35, 1.3];\n      this.duv_label = [1.2, -1.25];\n      this.cct_label = [-1.2, -1.25];\n    } else {\n      this.arrow_size = 3;\n      this.style = { width: \"100%\", paddingBottom: \"100%\" };\n      this.x_size = 800;\n      this.y_size = 800;\n      this.rg_label = [1.35, 1.3];\n      this.rf_label = [-1.35, 1.3];\n      this.duv_label = [1.2, -1.25];\n      this.cct_label = [-1.2, -1.25];\n    }\n    /**\n     * Setting up the Reference Circles\n     */\n    this.minus_20p_x = []; // -20% Ref Circle\n    this.minus_20p_y = [];\n    this.minus_10p_x = []; // -10% Ref Circle\n    this.minus_10p_y = [];\n    this.even_x = []; // 0% Ref Circle\n    this.even_y = [];\n    this.plus_10p_x = []; // +10% Ref Circle\n    this.plus_10p_y = [];\n    this.plus_20p_x = []; // +20% Ref Circle\n    this.plus_20p_y = [];\n    this.bin_lines = [];\n    this.chroma_isolines_labels = [];\n    this.black_x = [];\n    this.black_y = [];\n\n    this.cog = {\n      width: 1792,\n      path:\n        \"m 1024,640 q 0,106 -75,181 -75,75 -181,75 -106,0 -181,-75 -75,-75 -75,-181 0,-106 75,-181 75,-75 181,-75 106,0 181,75 75,75 75,181 z m 512,109 V 527 q 0,-12 -8,-23 -8,-11 -20,-13 l -185,-28 q -19,-54 -39,-91 35,-50 107,-138 10,-12 10,-25 0,-13 -9,-23 -27,-37 -99,-108 -72,-71 -94,-71 -12,0 -26,9 l -138,108 q -44,-23 -91,-38 -16,-136 -29,-186 -7,-28 -36,-28 H 657 q -14,0 -24.5,8.5 Q 622,-111 621,-98 L 593,86 q -49,16 -90,37 L 362,16 Q 352,7 337,7 323,7 312,18 186,132 147,186 q -7,10 -7,23 0,12 8,23 15,21 51,66.5 36,45.5 54,70.5 -27,50 -41,99 L 29,495 Q 16,497 8,507.5 0,518 0,531 v 222 q 0,12 8,23 8,11 19,13 l 186,28 q 14,46 39,92 -40,57 -107,138 -10,12 -10,24 0,10 9,23 26,36 98.5,107.5 72.5,71.5 94.5,71.5 13,0 26,-10 l 138,-107 q 44,23 91,38 16,136 29,186 7,28 36,28 h 222 q 14,0 24.5,-8.5 Q 914,1391 915,1378 l 28,-184 q 49,-16 90,-37 l 142,107 q 9,9 24,9 13,0 25,-10 129,-119 165,-170 7,-8 7,-22 0,-12 -8,-23 -15,-21 -51,-66.5 -36,-45.5 -54,-70.5 26,-50 41,-98 l 183,-28 q 13,-2 21,-12.5 8,-10.5 8,-23.5 z\",\n      ascent: 1500,\n      descent: 0\n    };\n\n    this.hashtag = {\n      width: 600,\n      path:\n        \"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\",\n      ascent: 500,\n      descent: 0\n    };\n\n    this.circle = {\n      width: 600,\n      path:\n        \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200z\",\n      ascent: 500,\n      descent: 0\n    };\n\n    this.colors = [\"#e41a1c\", \"#377eb8\", \"#4daf4a\"];\n\n    var theta;\n    for (theta = 1; theta <= 361; theta++) {\n      this.black_x[theta] = Math.cos((theta * Math.PI) / 180);\n      this.black_y[theta] = Math.sin((theta * Math.PI) / 180);\n    }\n    var i;\n    for (i = 0; i < 16; i++) {\n      var distance = Math.sqrt(\n        Math.pow(this.xref[i] - this.xtest[i], 2) +\n          Math.pow(this.yref[i] - this.ytest[i], 2)\n      );\n      if (distance.toFixed(3) <= 0.029) {\n        if (this.xref[i] > this.xtest[i]) {\n          this.xref[i] = this.xtest[i] + 0.04;\n          this.yref[i] = this.ytest[i] + 0.04;\n        } else {\n          this.xref[i] = this.xtest[i] - 0.04;\n          this.yref[i] = this.ytest[i] - 0.04;\n        }\n      }\n    }\n\n    /**\n     * An array of the vector colors\n     */\n    const colors = [\n      \"#e32f32\",\n      \"#e54f4f\",\n      \"#fa843b\",\n      \"#feb73c\",\n      \"#cbcb50\",\n      \"#7fb951\",\n      \"#44c00b\",\n      \"#109c7b\", //8\n      \"#22bbaf\", //9\n      \"#13a2bb\", //10\n      \"#0f82c0\", //11\n      \"#3c62a8\", //12\n      \"#6d67ac\", //13\n      \"#6a4e84\", //14\n      \"#9d69a0\", //15\n      \"#a65081\" //16\n    ];\n    /**\n     * Setting up the vector arrays\n     */\n    this.arrows = [];\n    var i_arrow;\n    for (i = 0; i < 16; i++) {\n      i_arrow = {\n        x: this.xtest[i],\n        y: this.ytest[i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        arrowwidth: this.arrow_size,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.xref[i],\n        ay: this.yref[i],\n        arrowcolor: colors[i]\n      };\n      this.arrows.push(i_arrow);\n    }\n  }\n\n  clearChromaIsolines = () => {\n    console.log(\"Clearing isolines\");\n    this.minus_20p_x = []; // -20% Ref Circle\n    this.minus_20p_y = [];\n    this.minus_10p_x = []; // -10% Ref Circle\n    this.minus_10p_y = [];\n    this.even_x = []; // 0% Ref Circle\n    this.even_y = [];\n    this.plus_10p_x = []; // +10% Ref Circle\n    this.plus_10p_y = [];\n    this.plus_20p_x = []; // +20% Ref Circle\n    this.plus_20p_y = [];\n    this.chroma_isolines_labels = [];\n  };\n\n  handleBinLabels = event => {\n    console.log(\"Handle Bin Labels\");\n    var bin_labels;\n    if (this.props.bin_labels) {\n      bin_labels = false;\n    } else {\n      bin_labels = true;\n    }\n    this.props.setBinLabels(bin_labels);\n  };\n\n  handleBinDividers = event => {\n    var bin_dividers;\n    if (this.props.bin_dividers) {\n      bin_dividers = false;\n    } else {\n      bin_dividers = true;\n    }\n    this.props.setBinDividers(bin_dividers);\n  };\n\n  handleChromaIsolines = event => {\n    var chroma_isolines;\n    if (this.props.chroma_isolines) {\n      chroma_isolines = false;\n    } else {\n      chroma_isolines = true;\n    }\n    this.props.setChromaIsolines(chroma_isolines);\n  };\n\n  /**\n   * Setting up the bin lines\n   */\n  createBinLines = () => {\n    this.bin_lines = [\n      {\n        x: [-1.5, 1.5],\n        y: [0, 0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-1.39, 1.39],\n        y: [-0.57, 0.57],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-1.06, 1.06],\n        y: [-1.06, 1.06],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-0.57, 0.57],\n        y: [-1.39, 1.39],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [0, 0],\n        y: [-1.5, 1.5],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [0.57, -0.57],\n        y: [-1.39, 1.39],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [1.06, -1.06],\n        y: [-1.06, 1.06],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [1.39, -1.39],\n        y: [-0.57, 0.57],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }\n    ];\n  };\n  /**\n   * Setting up the Bin Numbers\n   */\n  createBinNumbers = () => {\n    this.bin_numbers = [];\n    var theta = 11.5;\n    var i;\n    for (i = 1; i <= 16; i++) {\n      var x = 1.35 * Math.cos((theta * Math.PI) / 180);\n      var y = 1.35 * Math.sin((theta * Math.PI) / 180);\n      theta += 22.5;\n      this.bin_numbers[i - 1] = {\n        x: x,\n        y: y,\n        xref: \"x\",\n        yref: \"y\",\n        text: `${i}`,\n        font: {\n          size: 12,\n          color: \"grey\"\n        },\n        ax: 0,\n        ay: 0\n      };\n    }\n  };\n\n  createChromaIsolines = () => {\n    var theta;\n    var i;\n    for (theta = 1; theta <= 361; theta++) {\n      // -20% Ref Circle\n      this.minus_20p_x[theta] = 0.8 * Math.cos((theta * Math.PI) / 180);\n      this.minus_20p_y[theta] = 0.8 * Math.sin((theta * Math.PI) / 180);\n\n      // -10% Ref Circle\n      this.minus_10p_x[theta] = 0.9 * Math.cos((theta * Math.PI) / 180);\n      this.minus_10p_y[theta] = 0.9 * Math.sin((theta * Math.PI) / 180);\n\n      // 0% Ref Circle\n      this.even_x[theta] = Math.cos((theta * Math.PI) / 180);\n      this.even_y[theta] = Math.sin((theta * Math.PI) / 180);\n\n      // +10% Ref Circle\n      this.plus_10p_x[theta] = 1.1 * Math.cos((theta * Math.PI) / 180);\n      this.plus_10p_y[theta] = 1.1 * Math.sin((theta * Math.PI) / 180);\n\n      //+20% Ref Circle\n      this.plus_20p_x[theta] = 1.2 * Math.cos((theta * Math.PI) / 180);\n      this.plus_20p_y[theta] = 1.2 * Math.sin((theta * Math.PI) / 180);\n    }\n    this.chroma_isolines_labels = [\n      {\n        x: -0.15,\n        y: -0.7,\n        xref: \"x\",\n        yref: \"y\",\n        text: `-20%`,\n        font: {\n          size: 11,\n          color: \"white\"\n        },\n        ax: 0,\n        ay: 0\n      },\n      {\n        x: -0.25,\n        y: -1.11,\n        xref: \"x\",\n        yref: \"y\",\n        text: `+20%`,\n        font: {\n          size: 11,\n          color: \"white\"\n        },\n        ax: 0,\n        ay: 0\n      }\n    ];\n  };\n  /**\n   * Render function for the CVGPlot\n   */\n  render() {\n    if (this.props.bin_labels) {\n      this.createBinLines();\n    } else {\n      this.bin_lines = [];\n    }\n    if (this.props.bin_dividers) {\n      this.createBinNumbers();\n    } else {\n      this.bin_numbers = [];\n    }\n    if (this.props.chroma_isolines) {\n      console.log(\"chroma_isoline: \", this.props.chroma_isolines);\n      this.createChromaIsolines();\n    } else {\n      console.log(\"chroma_isoline: \", this.props.chroma_isolines);\n      this.clearChromaIsolines();\n    }\n    return (\n      <div style={this.small_style}>\n        <div align=\"center\">\n          <Plot\n            useResizeHandler={true}\n            style={this.style}\n            data={[\n              ...this.bin_lines,\n              {\n                x: [0],\n                y: [0],\n                type: \"scatter\",\n                mode: \"markers+lines\",\n                marker: {\n                  size: 22,\n                  width: 50,\n                  color: \"white\",\n                  symbol: \"circle\",\n                  opacity: 0.8\n                },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                x: [0],\n                y: [0],\n                type: \"scatter\",\n                mode: \"markers+lines\",\n                marker: {\n                  size: 30,\n                  width: 50,\n                  color: \"white\",\n                  symbol: \"circle\",\n                  opacity: 0.7\n                },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                x: [0],\n                y: [0],\n                type: \"scatter\",\n                mode: \"markers\",\n                marker: {\n                  size: 8,\n                  width: 50,\n                  color: \"grey\",\n                  symbol: \"cross-thin-open\"\n                },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"-20%\",\n                x: this.minus_20p_x,\n                y: this.minus_20p_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"white\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"-10%\",\n                x: this.minus_10p_x,\n                y: this.minus_10p_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"white\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"0%\",\n                x: this.black_x,\n                y: this.black_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"black\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"10%\",\n                x: this.plus_10p_x,\n                y: this.plus_10p_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"white\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"20%\",\n                x: this.plus_20p_x,\n                y: this.plus_20p_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"white\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"Test\",\n                x: this.xtest,\n                y: this.ytest,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"red\" },\n                hovertemplate: `%{y:.2f}`\n              },\n              {\n                /*\n                name: \"Reference\",\n                x: this.xref,\n                y: this.yref,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"black\" }\n                */\n              }\n            ]}\n            layout={{\n              showlegend: false,\n              autosize: true,\n              //width: this.x_size,\n              //height: width;\n\n              margin: {\n                t: 0,\n                l: 0,\n                b: 0,\n                r: 0\n              },\n              xaxis: {\n                visible: false,\n                range: [-1.5, 1.5],\n                title: {\n                  text: \"\"\n                }\n              },\n              yaxis: {\n                visible: false,\n                range: [-1.5, 1.5],\n                title: {\n                  text: \"\"\n                },\n                tickformat: \"\"\n              },\n              images: [\n                {\n                  source: \"https://i.imgur.com/QkpOGSJ.png\",\n                  xref: \"x\",\n                  yref: \"y\",\n                  x: -1.5,\n                  y: 1.5,\n                  sizex: 3,\n                  sizey: 3,\n                  sizing: \"stretch\",\n                  layer: \"below\"\n                }\n              ],\n              annotations: [\n                ...this.arrows,\n                {\n                  x: this.rf_label[0],\n                  y: this.rf_label[1],\n                  xref: \"x\",\n                  yref: \"y\",\n                  text: `<b>${this.rf}</b><br /><i>R</i><sub>f</sub>`,\n                  font: {\n                    size: 20,\n                    color: \"black\"\n                  },\n                  align: \"left\",\n                  ax: 0,\n                  ay: 0\n                },\n                {\n                  x: this.rg_label[0],\n                  y: this.rg_label[1],\n                  xref: \"x\",\n                  yref: \"y\",\n                  text: `<b>${this.rg}</b><br /><i>R</i><sub>g</sub>`,\n                  font: {\n                    size: 20,\n                    color: \"black\"\n                  },\n                  align: \"right\",\n                  ax: 0,\n                  ay: 0\n                },\n                {\n                  x: this.duv_label[0],\n                  y: this.duv_label[1],\n                  xref: \"x\",\n                  yref: \"y\",\n                  text: `<i>D</i><sub>uv</sub><br /><b>${this.duv}</b><br />`,\n                  font: {\n                    size: 20,\n                    color: \"black\"\n                  },\n                  align: \"right\",\n                  ax: 0,\n                  ay: 0\n                },\n                {\n                  x: this.cct_label[0],\n                  y: this.cct_label[1],\n                  xref: \"x\",\n                  yref: \"y\",\n                  text: `CCT<br><b>${this.cct} K</b>`,\n                  font: {\n                    size: 20,\n                    color: \"black\"\n                  },\n                  align: \"left\",\n                  ax: 0,\n                  ay: 0\n                },\n                ...this.chroma_isolines_labels,\n                ...this.bin_numbers\n              ]\n            }}\n            config={{\n              displaylogo: false,\n              modeBarButtons: [\n                [\"toImage\"],\n\n                [\n                  {\n                    name: \"Bin Dividers\",\n                    icon: this.cog,\n                    click: this.handleBinLabels\n                  }\n                ],\n                [\n                  {\n                    name: \"Bin Labels\",\n                    icon: this.hashtag,\n                    click: this.handleBinDividers\n                  }\n                ],\n                [\n                  {\n                    name: \"Chroma Isolines\",\n                    icon: this.circle,\n                    click: this.handleChromaIsolines\n                  }\n                ]\n              ],\n              responsive: true,\n              toImageButtonOptions: {\n                format: \"png\", // one of png, svg, jpeg, webp\n                filename: \"Color Vector Graph\",\n                height: 900,\n                width: 900,\n                scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n              }\n            }}\n          />\n        </div>\n\n        <br />\n        {this.small_bool ? (\n          <div align=\"center\">\n            <h5>Color Vector Graphic</h5>\n            The Color Vector Graphic (CVG) shows a normalized version of the{\" \"}\n            <br />\n            average change in (a', b') coordinates of CAM02-UCS for the CES{\" \"}\n            <br />\n            within each hue-angle bin. Alternative versions of the CVG are{\" \"}\n            <br />\n            available in the CVG sheet. Elements of this graphic can be turned{\" \"}\n            <br />\n            on or off using the menu on the Main sheet (requires recalculation).{\" \"}\n            <br />\n            [Background is for visual orientation only]\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\n\nCVGPlot.propTypes = {\n  setBinLabels: PropTypes.func.isRequired,\n  setBinDividers: PropTypes.func.isRequired,\n  setChromaIsolines: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  bin_labels: state.dataReducers.bin_labels,\n  bin_dividers: state.dataReducers.bin_dividers,\n  chroma_isolines: state.dataReducers.chroma_isolines\n});\n\nexport default connect(mapStateToProps, {\n  setBinLabels,\n  setBinDividers,\n  setChromaIsolines\n})(CVGPlot);\n","/**\n * Numerical.\n *\n * A component for the Numerical tab in the Reports page.\n * Based off of the Excel 'Results Nimerical' tab in the\n * IES TM30 Excel Calculator\n *\n * This page displays every single output from the C code JSON file.\n * A lot of Data is being displayed and the tables often get very large and cluttered\n * The tables are scrollable and it looks fine on mac but\n * on PC they look a little odd with the scrollbars always there\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Table from \"react-bootstrap/es/Table\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport Card from \"pnnl-react-core/lib/Card\";\n\n/**\n * Numerical Class\n */\nexport class Numerical extends Component {\n  /**\n   * Constructor for the Numerical class.\n   * Sets tm30 from the props. Tm30 is the 'Numerical Results' from the\n   * returned JSON from the C code. If you are unsure of the formatting\n   * check the server side return JSON to see how it is formatted.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.tm30 = this.props.tm30;\n    this.input = this.props.input;\n\n    this.lcs = []; //Local Chroma Shift Data\n    this.lhs = []; //Local Hue Shift Data\n    this.lcf = []; //Local Color Fidelity Data\n    this.huebin_row = []; //Array of row objects\n    this.sample_count = []; //Sample Count Data\n    this.atest = []; //Local a' Test Coordinate\n    this.btest = []; //Local b' Test Corrdinate\n    this.aref = []; //Local a' Reference Coordinate\n    this.bref = []; //Local b' Reference Coordinate\n    this.da = []; //da_relative Data\n    this.db = []; //db_relative Data\n    this.pathxref = []; //path_x ref Data\n    this.pathyref = []; //path_y ref Data\n    this.pathxtest = []; //path_x test Data\n    this.pathytest = []; //path_y test Data\n    this.ces = []; //CES Constants stored in this array later on\n    this.color_sample_fidelity = []; //Color Sample Fidelity Data\n    this.j_test_coordinates = []; //J' Test Coordinates\n    this.a_test_coordinates = []; //a' Test Coordinates\n    this.b_test_coordinates = []; //b' Test Coordinaters\n    this.j_ref_coordinates = []; //J' Reference Coordinates\n    this.a_ref_coordinates = []; //a' Reference Coordinates\n    this.b_ref_coordinates = []; //b' Reference Coordinates\n    this.hue_angle_bin = []; //Hue-angle Bin Data (Which huebin each sample is in)\n    this.normalized_SPD_test = []; //Normalized SPD Test Data\n    this.normalized_SPD_ref = []; //Normalized SPD Ref Data\n    this.spd = []; //The original SPD\n    this.wavelength = this.input.Wavelength;\n\n    /**\n     * The standard Huebin Colors. Not calculated\n     * Not a standard, only used for asthetic purposes\n     */\n    this.colors = [\n      \"#b45c60\",\n      \"#cb7761\",\n      \"#cb824b\",\n      \"#d7ad67\",\n      \"#ac9a5d\",\n      \"#919E60\",\n      \"#678B5F\",\n      \"#62B08F\",\n      \"#7CBABA\",\n      \"#2C797D\",\n      \"#54778C\",\n      \"#7189B1\",\n      \"#988CA9\",\n      \"#735876\",\n      \"#8F6682\",\n      \"#B97B8E\"\n    ];\n\n    var i;\n    for (i = 0; i < 16; i++) {\n      this.lcs.push(Math.round(this.tm30.local_chroma_shift[i]));\n      this.lhs.push(Math.round(this.tm30.local_hue_shift[i] * 100) / 100);\n      this.lcf.push(Math.round(this.tm30.local_color_fidelity[i]));\n      this.sample_count.push(this.tm30.sample_count[i]);\n      this.atest.push(Math.round(this.tm30.a_prime_test_j[i] * 100) / 100);\n      this.btest.push(Math.round(this.tm30.b_prime_test_j[i] * 100) / 100);\n      this.aref.push(Math.round(this.tm30.a_prime_ref_j[i] * 100) / 100);\n      this.bref.push(Math.round(this.tm30.b_prime_ref_j[i] * 100) / 100);\n      this.da.push(Math.round(this.tm30.da_relative[i] * 100) / 100);\n      this.db.push(Math.round(this.tm30.db_relative[i] * 100) / 100);\n      this.pathxref.push(Math.round(this.tm30.path_xref[i] * 100) / 100);\n      this.pathyref.push(Math.round(this.tm30.path_yref[i] * 100) / 100);\n      this.pathxtest.push(Math.round(this.tm30.path_xtest[i] * 100) / 100);\n      this.pathytest.push(Math.round(this.tm30.path_ytest[i] * 100) / 100);\n\n      this.huebin_row.push(\n        <tr>\n          <td style={{ backgroundColor: this.colors[i] }}>\n            <b>{i + 1}</b>\n          </td>\n          <td>{this.lcs[i]}%</td>\n          <td>{this.lhs[i].toFixed(2)}</td>\n          <td>{this.lcf[i]}</td>\n          <td>{this.sample_count[i]}</td>\n          <td>{this.atest[i].toFixed(2)}</td>\n          <td>{this.btest[i].toFixed(2)}</td>\n          <td>{this.aref[i].toFixed(2)}</td>\n          <td>{this.bref[i].toFixed(2)}</td>\n          <td>{this.da[i].toFixed(2)}</td>\n          <td>{this.db[i].toFixed(2)}</td>\n          <td>{this.pathxref[i].toFixed(2)}</td>\n          <td>{this.pathyref[i].toFixed(2)}</td>\n          <td>{this.pathxtest[i].toFixed(2)}</td>\n          <td>{this.pathytest[i].toFixed(2)}</td>\n        </tr>\n      );\n    }\n\n    for (i = 0; i < 99; i++) {\n      //CES\n      this.color_sample_fidelity.push(\n        Math.round(this.tm30.color_sample_fidelity[i])\n      );\n      this.j_test_coordinates.push(\n        Math.round(this.tm30.j_test_coordinates[i] * 100) / 100\n      );\n      this.a_test_coordinates.push(\n        Math.round(this.tm30.a_test_coordinates[i] * 100) / 100\n      );\n      this.b_test_coordinates.push(\n        Math.round(this.tm30.b_test_coordinates[i] * 100) / 100\n      );\n      this.j_ref_coordinates.push(\n        Math.round(this.tm30.j_ref_coordinates[i] * 100) / 100\n      );\n      this.a_ref_coordinates.push(\n        Math.round(this.tm30.a_ref_coordinates[i] * 100) / 100\n      );\n      this.b_ref_coordinates.push(\n        Math.round(this.tm30.b_ref_coordinates[i] * 100) / 100\n      );\n      this.hue_angle_bin.push(this.tm30.hue_angle_bin[i]);\n\n      this.ces.push(\n        <tr>\n          <td>CES{i + 1 < 10 ? `0${i + 1}` : i + 1}</td>\n          <td>{this.color_sample_fidelity[i]}</td>\n          <td>{this.j_test_coordinates[i].toFixed(2)}</td>\n          <td>{this.a_test_coordinates[i].toFixed(2)}</td>\n          <td>{this.b_test_coordinates[i].toFixed(2)}</td>\n          <td>{this.j_ref_coordinates[i].toFixed(2)}</td>\n          <td>{this.a_ref_coordinates[i].toFixed(2)}</td>\n          <td>{this.b_ref_coordinates[i].toFixed(2)}</td>\n          <td>{this.hue_angle_bin[i]}</td>\n        </tr>\n      );\n    }\n    for (i = 0; i < this.wavelength.length; i++) {\n      this.normalized_SPD_test.push(\n        Math.round(this.tm30.normalized_SPD_test[i] * 10000) / 10000\n      );\n      this.normalized_SPD_ref.push(\n        Math.round(this.tm30.normalized_SPD_ref[i] * 10000) / 10000\n      );\n\n      this.spd.push(\n        <tr>\n          <td>{this.wavelength[i]}</td>\n          <td>\n            <font color=\"#fd191f\">\n              {this.normalized_SPD_test[i].toFixed(4)}\n            </font>\n          </td>\n          <td>\n            <font color=\"#021f5f\">{this.normalized_SPD_ref[i].toFixed(4)}</font>\n          </td>\n        </tr>\n      );\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Grid fluid={true}>\n          <h2 align=\"center\">Color Rendition Global Averages </h2>\n          <Row>\n            <Col xs={2}></Col>\n            <Col xs={8}>\n              <Card className=\"CardOverflowScoll\">\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th\n                        style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}\n                      >\n                        Fidelity Index\n                      </th>\n                      <th\n                        style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}\n                      >\n                        Gamut Index\n                      </th>\n                    </tr>\n                    <tr>\n                      <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                        <i>R</i>\n                        <sub>f</sub>\n                      </th>\n                      <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                        <i>R</i>\n                        <sub>g</sub>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>{Math.round(this.tm30.rg)}</td>\n                      <td>{Math.round(this.tm30.rf)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xs={2}></Col>\n          </Row>\n          <Row>\n            <h2 align=\"center\">Color Rendition Local Averages </h2>\n            <Card className=\"CardOverflowScoll\">\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}>\n                      Hue-Angle Bin\n                    </th>\n                    <th style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}>\n                      Local Chroma Shift\n                    </th>\n                    <th style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}>\n                      Local Hue Shift\n                    </th>\n                    <th style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}>\n                      Local Color Fidelity\n                    </th>\n                    <th style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}>\n                      Sample Count\n                    </th>\n                    <th\n                      colSpan=\"2\"\n                      style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}\n                    >\n                      Test <br /> Coordinates\n                    </th>\n                    <th\n                      colSpan=\"2\"\n                      style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}\n                    >\n                      Reference Coordinates\n                    </th>\n                    <th\n                      colSpan=\"6\"\n                      style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}\n                    >\n                      Color Vector Graphics Elements <br />\n                      &nbsp;\n                    </th>\n                  </tr>\n\n                  <tr>\n                    <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                      <i>j</i>\n                    </th>\n                    <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                      <i>R</i>\n                      <sub>\n                        cs,h<i>j</i>\n                      </sub>\n                    </th>\n                    <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                      <i>R</i>\n                      <sub>\n                        hs,h<i>j</i>\n                      </sub>\n                    </th>\n                    <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                      <i>R</i>\n                      <sub>\n                        f,h<i>j</i>\n                      </sub>\n                    </th>\n                    <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                      <i>m</i>\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderRight: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>a</i>'\n                      <sub>\n                        test,<i>j</i>\n                      </sub>\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderLeft: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>b</i>'\n                      <sub>\n                        test,<i>j</i>\n                      </sub>\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderRight: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>a</i>'\n                      <sub>\n                        ref,<i>j</i>\n                      </sub>\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderLeft: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>b</i>'\n                      <sub>\n                        ref,<i>j</i>\n                      </sub>\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderRight: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      da relative\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderRight: \"none\",\n                        borderLeft: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      db relative\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderRight: \"none\",\n                        borderLeft: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      path_x ref\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderRight: \"none\",\n                        borderLeft: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      path_y ref\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderRight: \"none\",\n                        borderLeft: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      path_x test\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderLeft: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      path_y test\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.huebin_row[0]}\n                  {this.huebin_row[1]}\n                  {this.huebin_row[2]}\n                  {this.huebin_row[3]}\n                  {this.huebin_row[4]}\n                  {this.huebin_row[5]}\n                  {this.huebin_row[6]}\n                  {this.huebin_row[7]}\n                  {this.huebin_row[8]}\n                  {this.huebin_row[9]}\n                  {this.huebin_row[10]}\n                  {this.huebin_row[11]}\n                  {this.huebin_row[12]}\n                  {this.huebin_row[13]}\n                  {this.huebin_row[14]}\n                  {this.huebin_row[15]}\n                </tbody>\n              </Table>\n            </Card>\n          </Row>\n          <h2 align=\"center\">\n            Color Rendition of Color Evaluation Samples (CES)\n          </h2>\n          <Row>\n            <Card className=\"SampleTable\">\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}>\n                      Sample\n                    </th>\n                    <th style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}>\n                      Color Sample Fidelity\n                    </th>\n                    <th\n                      colSpan={3}\n                      style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}\n                    >\n                      Test Coordinates\n                    </th>\n                    <th\n                      colSpan={3}\n                      style={{\n                        borderBottom: \"none\",\n                        paddingBottom: \"0px\"\n                      }}\n                    >\n                      Reference Coordinates\n                    </th>\n                    <th style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}>\n                      Hue-Angle Bin\n                    </th>\n                  </tr>\n                  <tr>\n                    <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                      <i>i</i>\n                    </th>\n                    <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                      <i>R</i>\n                      <sub>\n                        f,CES<i>i</i>\n                      </sub>\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderRight: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>\n                        J'\n                        <sub>t,i</sub>{\" \"}\n                      </i>{\" \"}\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderLeft: \"none\",\n                        borderRight: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>a</i>'\n                      <sub>\n                        t,<i>i</i>\n                      </sub>{\" \"}\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderLeft: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>b</i>'\n                      <sub>\n                        t,<i>i</i>\n                      </sub>{\" \"}\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderRight: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>J</i>'\n                      <sub>\n                        r,<i>i</i>\n                      </sub>{\" \"}\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderLeft: \"none\",\n                        borderRight: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>a</i>'\n                      <sub>\n                        r,<i>i</i>\n                      </sub>{\" \"}\n                    </th>\n                    <th\n                      style={{\n                        borderTop: \"none\",\n                        borderLeft: \"none\",\n                        paddingTop: \"0px\"\n                      }}\n                    >\n                      {\" \"}\n                      <i>b</i>'\n                      <sub>\n                        r,<i>i</i>\n                      </sub>{\" \"}\n                    </th>\n                    <th style={{ borderTop: \"none\", paddingTop: \"0px\" }}>\n                      <i>j</i>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.ces.map((component, index) => (\n                    <React.Fragment key={index}>{component}</React.Fragment>\n                  ))}\n                </tbody>\n              </Table>\n            </Card>\n          </Row>\n          <Row>\n            <h2 align=\"center\">\n              Test Source and Reference Illuminant Properties\n            </h2>\n          </Row>\n          <Row>\n            <Col xs={7}>\n              <Card className=\"SampleTable\">\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th\n                        colSpan={3}\n                        style={{ borderBottom: \"none\", paddingBottom: \"0px\" }}\n                      >\n                        NORMALIZED SPECTRAL POWER DISTRIBUTION (Y = 100)\n                      </th>\n                    </tr>\n                    <tr>\n                      <th\n                        style={{\n                          borderTop: \"none\",\n                          borderRight: \"none\",\n                          paddingTop: \"0px\"\n                        }}\n                      >\n                        Wavelength(nm)\n                      </th>\n                      <th\n                        style={{\n                          borderTop: \"none\",\n                          borderRight: \"none\",\n                          borderLeft: \"none\",\n                          paddingTop: \"0px\"\n                        }}\n                      >\n                        <font color=\"#fd191f\">Test</font>\n                      </th>\n                      <th\n                        style={{\n                          borderTop: \"none\",\n                          borderLeft: \"none\",\n                          paddingTop: \"0px\"\n                        }}\n                      >\n                        <font color=\"#021f5f\">Refereance</font>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.spd.map((component, index) => (\n                      <React.Fragment key={index}>{component}</React.Fragment>\n                    ))}\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xs={5}>\n              <Card className=\"CardOverflowScoll\">\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th\n                        style={{\n                          borderBottom: \"none\",\n                          paddingTop: \"0px\"\n                        }}\n                      ></th>\n                      <th\n                        colSpan={2}\n                        style={{\n                          borderBottom: \"none\"\n                        }}\n                      >\n                        Summary data\n                      </th>\n                    </tr>\n                    <tr>\n                      <th\n                        style={{\n                          borderTop: \"none\",\n                          paddingTop: \"0px\"\n                        }}\n                      ></th>\n                      <th\n                        style={{\n                          borderTop: \"none\",\n                          paddingTop: \"0px\",\n                          borderRight: \"none\"\n                        }}\n                      >\n                        <font color=\"fd191f\">Test</font>\n                      </th>\n\n                      <th\n                        style={{\n                          borderTop: \"none\",\n                          borderLeft: \"none\",\n                          paddingTop: \"0px\"\n                        }}\n                      >\n                        <font color=\"021f5f\">Refereance</font>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th>CCT</th>\n\n                      <td>\n                        <font color=\"fd191f\">\n                          {Math.round(this.tm30.CCT[0])}\n                        </font>\n                      </td>\n                      <td>\n                        <font color=\"021f5f\">\n                          {Math.round(this.tm30.CCT[1])}\n                        </font>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>\n                        <i>D</i>\n                        <sub>uv</sub>\n                      </th>\n                      <td>\n                        <font color=\"fd191f\">\n                          {(\n                            Math.round(this.tm30.DUV[0] * 10000) / 10000\n                          ).toFixed(4)}\n                        </font>\n                      </td>\n                      <td>\n                        <font color=\"021f5f\">\n                          {(\n                            Math.round(this.tm30.DUV[1] * 10000) / 10000\n                          ).toFixed(4)}\n                        </font>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>\n                        <i>x</i>\n                      </th>\n                      <td>\n                        <font color=\"fd191f\">\n                          {(Math.round(this.tm30.x[0] * 10000) / 10000).toFixed(\n                            4\n                          )}\n                        </font>\n                      </td>\n                      <td>\n                        <font color=\"021f5f\">\n                          {(Math.round(this.tm30.x[1] * 10000) / 10000).toFixed(\n                            4\n                          )}\n                        </font>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>\n                        <i>y</i>\n                      </th>\n                      <td>\n                        <font color=\"fd191f\">\n                          {(Math.round(this.tm30.y[0] * 10000) / 10000).toFixed(\n                            4\n                          )}\n                        </font>\n                      </td>\n                      <td>\n                        <font color=\"021f5f\">\n                          {(Math.round(this.tm30.y[1] * 10000) / 10000).toFixed(\n                            4\n                          )}\n                        </font>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>\n                        <i>u'</i>\n                      </th>\n                      <td>\n                        <font color=\"fd191f\">\n                          {(Math.round(this.tm30.u[0] * 10000) / 10000).toFixed(\n                            4\n                          )}\n                        </font>\n                      </td>\n                      <td>\n                        <font color=\"021f5f\">\n                          {(Math.round(this.tm30.u[1] * 10000) / 10000).toFixed(\n                            4\n                          )}\n                        </font>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>\n                        <i>v'</i>\n                      </th>\n                      <td>\n                        <font color=\"fd191f\">\n                          {(Math.round(this.tm30.v[0] * 10000) / 10000).toFixed(\n                            4\n                          )}\n                        </font>\n                      </td>\n                      <td>\n                        <font color=\"021f5f\">\n                          {(Math.round(this.tm30.v[1] * 10000) / 10000).toFixed(\n                            4\n                          )}\n                        </font>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>LER</th>\n                      <td>\n                        <font color=\"fd191f\">\n                          {Math.round(this.tm30.LER[0])}\n                        </font>\n                      </td>\n                      <td>\n                        <font color=\"021f5f\">\n                          {Math.round(this.tm30.LER[1])}\n                        </font>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Numerical;\n","/**\n * Chromaticity Comparison (CIE 1931) and (CIE 1976).\n *\n * A component for the Chromaticity Comparison plots in the Graphical Results tab.\n * This component is a little special in the case that it is used for two different\n * plots that are very similar. There is a constant polygon in both of them that use\n * different data. The CIE 1931 uses \"CIE_1931.json\" in the Data folder and the\n * CIE 1976 plot uses \"CIE_1976.json\" for its polygon. You will find a few\n * conditional statements throughout the code to figure out which graph it is because\n * there are a few constants that are different such as the axes and positioning of the\n * legends.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\n/**\n * CIEPlot class\n */\nexport class CIEPlot extends Component {\n  /**\n   * Constructor for the Plot.\n   * Getting the props is very important because\n   * this class is used for two different plots.\n   * How the code deciphers the difference is from the\n   * x_label and y_label attributes when callsed.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.spectrum_locus_x = this.props.spectrum_locus_x; //Data passed in from one of the JSON files specified above.\n    this.spectrum_locus_y = this.props.spectrum_locus_y; //Data passed in from one of the JSON files specified above.\n    this.blackbody_locus_x = this.props.blackbody_locus_x; //Data passed in from one of the JSON files specified above.\n    this.blackbody_locus_y = this.props.blackbody_locus_y; //Data passed in from one of the JSON files specified above.\n    this.x_label = this.props.x_label; //Passed in from calling the component, label 'x' if you want the (CIE 1931) Plot\n    this.y_label = this.props.y_label; //Passed in from calling the component, label 'y' if you want the (CIE 1931) Plot\n    this.test_source = this.props.test_source; //The test source point (An ordered pair) can be found in the returned Data from C code\n    this.reference_illuminant = this.props.reference_illuminant; //The reference illuminant point (An ordered pair) can be found in the returned Data from C code\n    this.style = { width: \"100%\" };\n    var i;\n\n    /**\n     * Determining which plot we are calling and setting some constants\n     */\n    if (this.x_label === \"x\") {\n      this.x_legend = 0.4;\n      this.y_legend = 0.95;\n      this.year = \"1931\";\n    } else {\n      this.x_legend = 0.6;\n      this.y_legend = 0.1;\n      this.year = \"1976\";\n    }\n\n    /**\n     * Creating the wavelength array\n     *\n     * TODO - Will have to change with interpolation I think\n     */\n    this.wavelength = [];\n    for (i = 0; i < 400; i++) {\n      this.wavelength[i] = i + 380;\n    }\n  }\n  /**\n   * Render function of the CIEPlot component\n   */\n  render() {\n    return (\n      <div style={{ position: \"inherit\", display: \"inline-block\" }}>\n        <Plot\n          style={this.style}\n          data={[\n            {\n              name: \"Spectrum\",\n              x: this.spectrum_locus_x,\n              y: this.spectrum_locus_y,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              marker: { color: \"black\" },\n              showlegend: false\n            },\n            {\n              name: \"Blackbody\",\n              x: this.blackbody_locus_x,\n              y: this.blackbody_locus_y,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              marker: { color: \"black\" },\n              showlegend: false\n            },\n            {\n              name: \"Test Source\",\n              x: [this.test_source[0]],\n              y: [this.test_source[1]],\n              type: \"scatter\",\n              mode: \"markers\",\n              marker: { color: \"red\", symbol: \"x-thin-open\", size: 10 }\n            },\n            {\n              name: \"Referance Illuminant\",\n              x: [this.reference_illuminant[0]],\n              y: [this.reference_illuminant[1]],\n              type: \"scatter\",\n              mode: \"markers\",\n              marker: { color: \"black\", symbol: \"square-open\", size: 12 }\n            }\n          ]}\n          layout={{\n            //width: 500,\n            height: 400,\n            margin: {\n              l: 60,\n              r: 40,\n              b: 45,\n              t: 10,\n              pad: 4\n            },\n            xaxis: {\n              title: {\n                text: this.x_label\n              }\n            },\n            yaxis: {\n              title: {\n                text: this.y_label\n              },\n              tickformat: \"\"\n            },\n            legend: {\n              x: this.x_legend,\n              y: this.y_legend\n            }\n          }}\n          config={{ displayModeBar: false }}\n        />\n        <div align=\"center\">\n          <h5>Chromaticity Comparison ({this.year}) </h5>\n          The CIE {this.year} Standard 2° Colorimetric Observer is used for\n          calculations.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CIEPlot;\n","/**\n * Shift in Hue-Chroma Plane\n *\n * A component for the Shift in Hue-Chroma Plane graph. Plots each of the 99 CES\n * a' and b' points for both the test and reference. No lines are drawn. Just your typical\n * scatter plot with the gradient background.\n *\n * Red Diamond - Test (a',b')\n * Black Circle - Ref (a', b')\n *\n * The is also a J' for these coordinates but this graph does not deal with that. You can find\n * J' along with the a' and b' i nthe returned JSON from the C code.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n/**\n * SHPPlot class\n */\nexport class SHPPlot extends Component {\n  /**\n   * Constructor that just takes data from the props and puts\n   * them into variables\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.a_test_coordinates = this.props.a_test_coordinates;\n    this.b_test_coordinates = this.props.b_test_coordinates;\n    this.a_ref_coordinates = this.props.a_ref_coordinates;\n    this.b_ref_coordinates = this.props.b_ref_coordinates;\n  }\n  /**\n   * Render method for SHPPlot\n   */\n  render() {\n    return (\n      <div style={{ position: \"inherit\", display: \"inline-block\" }}>\n        <Plot\n          data={[\n            {\n              name: \"Test Source\",\n              x: this.a_test_coordinates,\n              y: this.b_test_coordinates,\n              type: \"scatter\",\n              mode: \"markers\",\n              marker: {\n                symbol: \"diamond\",\n                color: \"red\"\n              }\n            },\n            {\n              name: \"Reference Illuminant\",\n              x: this.a_ref_coordinates,\n              y: this.b_ref_coordinates,\n              type: \"scatter\",\n              mode: \"markers\",\n              marker: {\n                color: \"black\"\n              }\n            }\n          ]}\n          layout={{\n            width: 400,\n            height: 400,\n            margin: {\n              l: 60,\n              r: 40,\n              b: 45,\n              t: 10,\n              pad: 4\n            },\n            legend: {\n              xanchor: \"center\",\n              yanchor: \"top\",\n              y: -0.2,\n              x: 0.5,\n              orientation: \"h\"\n            },\n            xaxis: {\n              ticks: \"outside\",\n              showline: true,\n              showgrid: false,\n              title: {\n                text: \"a'\"\n              },\n              range: [-40, 40]\n            },\n            yaxis: {\n              ticks: \"outside\",\n              showline: true,\n              showgrid: false,\n              title: {\n                text: \"b'\"\n              },\n              range: [-40, 40]\n            },\n            images: [\n              {\n                source: \"https://i.imgur.com/QkpOGSJ.png\",\n                xref: \"x\",\n                yref: \"y\",\n                x: -40,\n                y: 40,\n                sizex: 80,\n                sizey: 80,\n                sizing: \"stretch\",\n                layer: \"below\"\n              }\n            ]\n          }}\n          config={{ displayModeBar: false }}\n        />\n        <div align=\"center\">\n          <h5>Shift in Hue-Chroma Plane</h5>\n          The (a', b') coordinates of CAM02-UCS are calculated for each of the\n          99 <br />\n          CES under the test and reference conditions. Rf os based on the\n          average <br />\n          color difference of the 99 CES in CAM02-UCS (also including the J'{\" \"}\n          <br />\n          dimension). [Background is for visual orientation only]\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SHPPlot;\n","/**\n * Hue-Angle Bin Average Coordinates\n *\n * A component for the Hue-Angle Bin Average Coordinates. This graph is\n * similar to the CVG plot, but it uses the Hue-Bin average numbers, (The average (a', b') coordinates of CAM02-UCS )\n * thus the ploygons are not as round and more jagged. It also does not have\n * the reference circles and the extra information displayed on the plot.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n/**\n * HBAPlot Class\n */\nexport class HBAPlot extends Component {\n  /**\n   * Constructor to initialize variables with props data\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.a_prime_test_j = this.props.a_prime_test_j;\n    this.a_prime_test_j.push(this.a_prime_test_j[0]); //Connect the polygon completely\n    this.b_prime_test_j = this.props.b_prime_test_j;\n    this.b_prime_test_j.push(this.b_prime_test_j[0]); //Connect the polygon completely\n\n    this.a_prime_ref_j = this.props.a_prime_ref_j;\n    this.a_prime_ref_j.push(this.a_prime_ref_j[0]); //Connect the polygon completely\n    this.b_prime_ref_j = this.props.b_prime_ref_j;\n    this.b_prime_ref_j.push(this.b_prime_ref_j[0]); //Connect the polygon completely\n\n    var theta;\n    var i;\n\n    /**\n     * Creating the Bin Numbers\n     */\n    this.bin_numbers = [];\n    theta = 11.5;\n    for (i = 1; i <= 16; i++) {\n      var x = 35 * Math.cos((theta * Math.PI) / 180);\n      var y = 35 * Math.sin((theta * Math.PI) / 180);\n      theta += 22.5;\n      this.bin_numbers[i - 1] = {\n        x: x,\n        y: y,\n        xref: \"x\",\n        yref: \"y\",\n        text: `${i}`,\n        font: {\n          size: 12,\n          color: \"black\"\n        },\n        ax: 0,\n        ay: 0\n      };\n    }\n\n    /**\n     * Creating Bin lines\n     * Important - these are different than the CVG lines\n     * because this graph's scale is much larger so the lines extend\n     * much further.\n     */\n    this.bin_lines = [\n      {\n        x: [-60, 60],\n        y: [0, 0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-55.43, 55.43],\n        y: [-22.96, 22.96],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-42.43, 42.43],\n        y: [-42.43, 42.43],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-22.96, 22.96],\n        y: [-55.43, 55.43],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [0, 0],\n        y: [-60.0, 60.0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [55.43, -55.43],\n        y: [-22.96, 22.96],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [22.96, -22.96],\n        y: [-55.43, 55.43],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [42.43, -42.43],\n        y: [-42.43, 42.43],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }\n    ];\n  }\n  /**\n   * Render method for HBAPlot\n   */\n  render() {\n    return (\n      <div style={{ position: \"inherit\", display: \"inline-block\" }}>\n        <Plot\n          data={[\n            ...this.bin_lines,\n            {\n              name: \"Test\",\n              x: this.a_prime_test_j,\n              y: this.b_prime_test_j,\n              type: \"scatter\",\n              mode: \"lines+markers\",\n              connectgaps: true,\n              marker: { symbol: \"square\", color: \"red\" }\n            },\n            {\n              name: \"Reference\",\n              x: this.a_prime_ref_j,\n              y: this.b_prime_ref_j,\n              type: \"scatter\",\n              mode: \"lines+markers\",\n              connectgaps: true,\n              marker: { symbol: \"square\", color: \"black\" }\n            }\n          ]}\n          layout={{\n            showlegend: false,\n            width: 400,\n            height: 400,\n            margin: {\n              l: 50,\n              r: 40,\n              b: 55,\n              t: 30,\n              pad: 4\n            },\n\n            xaxis: {\n              showgrid: false,\n              showline: true,\n              zeroline: false,\n              ticks: \"outside\",\n              showticklabels: true,\n              title: {\n                text: \"a'\"\n              },\n              range: [-40, 40]\n            },\n            yaxis: {\n              ticks: \"outside\",\n              zeroline: false,\n              showgrid: false,\n              showline: true,\n              showticklabels: true,\n              title: {\n                text: \"b'\"\n              },\n              range: [-40, 40]\n            },\n            images: [\n              {\n                source: \"https://i.imgur.com/QkpOGSJ.png\",\n                xref: \"x\",\n                yref: \"y\",\n                x: -40,\n                y: 40,\n                sizex: 80,\n                sizey: 80,\n                sizing: \"stretch\",\n                layer: \"below\"\n              }\n            ],\n            annotations: [...this.bin_numbers]\n          }}\n          config={{ displayModeBar: false }}\n        />\n        <div align=\"center\">\n          <h5>Hue-Angle Bin Average Coordinates</h5>\n          The average (a', b') coordinates of CAM02-UCS are calculated for the{\" \"}\n          <br />\n          CES within each of 16 hue-angle bins. Rg is based on the area of the{\" \"}\n          <br />\n          polygons for the test and reference conditions. The three types of{\" \"}\n          <br />\n          \"Local\" values are based on the difference in coordinates for each{\" \"}\n          <br />\n          hue-angle bin. [Background is for visual orientation only]\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HBAPlot;\n","/**\n * Vector Shift Plot\n *\n * A component for the Shift in Vector Shift graph. Each of the 99 pairs\n * of test and reference coordinates can be plotted as a vector using the test and ref a' and b'.\n * Vectors are pointed from ref to test points.\n *\n * The color of the vectors come from a constant JSON file in the Data file.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport SampleColors from \"../../../../Data/DefaultSampleColors.json\";\n\n/**\n * VSPlot Class\n */\nexport class VSPlot extends Component {\n  /**\n   * Constructor that grabs the data from the props.\n   * Also fills the \"arrows\" variable with annotations that\n   * are the vectors for each pair of points.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.a_test_coordinates = this.props.a_test_coordinates;\n    this.b_test_coordinates = this.props.b_test_coordinates;\n    this.a_ref_coordinates = this.props.a_ref_coordinates;\n    this.b_ref_coordinates = this.props.b_ref_coordinates;\n\n    this.arrows = [];\n    var i;\n    var i_arrow;\n    for (i = 0; i < 99; i++) {\n      i_arrow = {\n        x: this.a_test_coordinates[i],\n        y: this.b_test_coordinates[i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        arrowwidth: 1.2,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.a_ref_coordinates[i],\n        ay: this.b_ref_coordinates[i],\n        arrowcolor: `rgb(${SampleColors.colors[i][0]},${SampleColors.colors[i][1]}, ${SampleColors.colors[i][2]})`\n      };\n      this.arrows.push(i_arrow);\n    }\n  }\n  /**\n   * Render method for VSPlot\n   */\n  render() {\n    return (\n      <div style={{ position: \"inherit\", display: \"inline-block\" }}>\n        <Plot\n          data={[\n            {\n              name: \"Test Source\",\n              x: 0,\n              y: 0,\n              type: \"scatter\",\n              mode: \"markers\",\n              marker: {\n                symbol: \"diamond\",\n                color: \"red\"\n              }\n            },\n            {\n              name: \"Reference Illuminant\",\n              x: 0,\n              y: 0,\n              type: \"scatter\",\n              mode: \"markers\",\n              marker: {\n                color: \"black\"\n              }\n            }\n          ]}\n          layout={{\n            width: 450,\n            height: 400,\n            margin: {\n              l: 60,\n              r: 40,\n              b: 45,\n              t: 10,\n              pad: 4\n            },\n            legend: {\n              xanchor: \"center\",\n              yanchor: \"top\",\n              y: -0.2,\n              x: 0.5,\n              orientation: \"h\"\n            },\n            xaxis: {\n              ticks: \"outside\",\n              showline: true,\n              showgrid: false,\n              title: {\n                text: \"a'\"\n              },\n              range: [-40, 40]\n            },\n            yaxis: {\n              ticks: \"outside\",\n              showline: true,\n              showgrid: false,\n              title: {\n                text: \"b'\"\n              },\n              range: [-40, 40]\n            },\n            images: [\n              {\n                source: \"https://i.imgur.com/KNiCAwI.png\",\n                xref: \"x\",\n                yref: \"y\",\n                x: -40,\n                y: 40,\n                sizex: 80,\n                sizey: 80,\n                sizing: \"stretch\",\n                layer: \"below\"\n              }\n            ],\n            annotations: [...this.arrows]\n          }}\n          config={{ displayModeBar: false }}\n        />\n        <div align=\"center\">\n          <h5>Vector Shifts</h5>\n          Each of the 99 pairs of test and reference coordinates can be plotted{\" \"}\n          <br />\n          as a vector. This chart does not show the J' dimension, which is also{\" \"}\n          <br />\n          included in color fidelity calculations. [Coloring is for visual{\" \"}\n          <br />\n          orientation only]\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VSPlot;\n","/**\n * Graphical.\n *\n * A component for the Graphical tab in the Reports page.\n * Based off of the Excel 'Results Graphical' tab in the\n * IES TM30 Excel Calculator\n *\n * This page has multiple graphs and explanation of the graphs.\n * A lot of Data is being visualized and is all done with the\n * Plotly module.\n *\n * TODO - Sloppy spacing. Using divs with inline styling. Hopefully fix that in the future\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport Data1931 from \"../../../../Data/CIE_1931\";\nimport Data1976 from \"../../../../Data/CIE_1976\";\nimport ELFPlot from \"../Plots/ELFPlot\";\nimport CIEPlot from \"../Plots/CIEPlot\";\nimport SHPPlot from \"../Plots/SHPPlot\";\nimport HBAPlot from \"../Plots/HBAPlot\";\nimport CVGPlot from \"../Plots/CVGPlot\";\nimport VSPlot from \"../Plots/VSPlot\";\nimport LCFPlot from \"../Plots/LCFPlot\";\nimport LCSPlot from \"../Plots/LCSPlot\";\nimport LHSPlot from \"../Plots/LHSPlot\";\n\n/**\n * Graphical Class\n */\nexport class Graphical extends Component {\n  /**\n   * Constructor for the Graphical page\n   * Mostly just to bring in the data from the props\n   * \"this.tm30\" is the \"Numerical_Results\" object from the JSON results file\n   * if you are unsure of the format of the JSON take a look server side to see how\n   * the JSONs get formated and how to access the data\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.tm30 = this.props.tm30; //The data from the JSON file\n    this.input = this.props.input;\n    this.state = {\n      options: this.props.options\n    };\n  }\n  /**\n   * Render function for thr Graphical tab.\n   */\n  render() {\n    /**\n     * Return value of the Render\n     * TODO: Some spacing issues need to be fixed and inline formatting is sloppy.\n     */\n    return (\n      <div>\n        <Grid fluid={true}>\n          <Row>\n            <h2 align=\"center\">Test Source and Reference Illuminant </h2>\n          </Row>\n          <Card>\n            <Row>\n              <Row>\n                <Col md={4} align=\"center\">\n                  <ELFPlot\n                    test={this.tm30.normalized_SPD_test}\n                    ref_spd={this.tm30.normalized_SPD_ref}\n                    wavelengths={this.input.Wavelength}\n                    caption={true}\n                    small={true}\n                  ></ELFPlot>\n                </Col>\n\n                <Col md={4} align=\"center\">\n                  <CIEPlot\n                    spectrum_locus_x={Data1931.Spectrum_Locus.x}\n                    spectrum_locus_y={Data1931.Spectrum_Locus.y}\n                    blackbody_locus_x={Data1931.Blackbody_Locus.x}\n                    blackbody_locus_y={Data1931.Blackbody_Locus.y}\n                    x_label={\"x\"}\n                    y_label={\"y\"}\n                    test_source={[this.tm30.x[0], this.tm30.y[0]]}\n                    reference_illuminant={[this.tm30.x[1], this.tm30.y[1]]}\n                  ></CIEPlot>\n                </Col>\n                <Col md={4} align=\"center\">\n                  <CIEPlot\n                    spectrum_locus_x={Data1976.Spectrum_Locus.u_prime}\n                    spectrum_locus_y={Data1976.Spectrum_Locus.v_prime}\n                    blackbody_locus_x={Data1976.Blackbody_Locus.u_prime}\n                    blackbody_locus_y={Data1976.Blackbody_Locus.v_prime}\n                    x_label={\"u'\"}\n                    y_label={\"v'\"}\n                    test_source={[this.tm30.u[0], this.tm30.v[0]]}\n                    reference_illuminant={[this.tm30.u[1], this.tm30.v[1]]}\n                  ></CIEPlot>\n                </Col>\n              </Row>\n            </Row>\n          </Card>\n          <br />\n          <Row>\n            <h2 align=\"center\">Color Rendition by Hue-Angle Bin</h2>\n          </Row>\n\n          <Card>\n            <Row>\n              <Col md={6} align=\"center\">\n                <SHPPlot\n                  a_test_coordinates={this.tm30.a_test_coordinates}\n                  b_test_coordinates={this.tm30.b_test_coordinates}\n                  a_ref_coordinates={this.tm30.a_ref_coordinates}\n                  b_ref_coordinates={this.tm30.b_ref_coordinates}\n                />\n                <div\n                  style={{\n                    width: \"5%\",\n                    position: \"inherit\",\n                    display: \"inline-block\"\n                  }}\n                />\n              </Col>\n              <Col md={6} align=\"center\">\n                <HBAPlot\n                  a_prime_test_j={this.tm30.a_prime_test_j}\n                  b_prime_test_j={this.tm30.b_prime_test_j}\n                  a_prime_ref_j={this.tm30.a_prime_ref_j}\n                  b_prime_ref_j={this.tm30.b_prime_ref_j}\n                />\n\n                <div\n                  style={{\n                    width: \"5%\",\n                    position: \"inherit\",\n                    display: \"inline-block\"\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col md={6} align=\"center\">\n                <CVGPlot\n                  xtest={this.tm30.path_xtest}\n                  ytest={this.tm30.path_ytest}\n                  xref={this.tm30.path_xref}\n                  yref={this.tm30.path_yref}\n                  rf={this.tm30.rg}\n                  rg={this.tm30.rf}\n                  cct={this.tm30.CCT[0]}\n                  duv={this.tm30.DUV[0]}\n                  small={true}\n                  options={this.state.options}\n                />\n                <div\n                  style={{\n                    width: \"5%\",\n                    position: \"inherit\",\n                    display: \"inline-block\"\n                  }}\n                />\n              </Col>\n              <Col md={6} align=\"center\">\n                <VSPlot\n                  a_test_coordinates={this.tm30.a_test_coordinates}\n                  b_test_coordinates={this.tm30.b_test_coordinates}\n                  a_ref_coordinates={this.tm30.a_ref_coordinates}\n                  b_ref_coordinates={this.tm30.b_ref_coordinates}\n                />\n                <div\n                  style={{\n                    width: \"2%\",\n                    position: \"inherit\",\n                    display: \"inline-block\"\n                  }}\n                />\n              </Col>\n            </Row>\n          </Card>\n          <br />\n          <Row>\n            <h2 align=\"center\">Color Rendition by Hue-Angle Bin</h2>\n          </Row>\n          <Row>\n            <Card>\n              <div\n                style={{\n                  position: \"inherit\",\n                  display: \"inline-block\",\n                  width: \"60%\"\n                }}\n              >\n                <LCSPlot\n                  data={this.tm30.local_chroma_shift}\n                  long={true}\n                ></LCSPlot>\n              </div>\n              <div\n                style={{\n                  width: \"2%\",\n                  position: \"inherit\",\n                  display: \"inline-block\"\n                }}\n              />\n              <div\n                style={{\n                  position: \"inherit\",\n                  display: \"inline-block\",\n                  verticalAlign: \"top\",\n                  paddingTop: \"2%\"\n                }}\n              >\n                <h5>Local Chroma Shift</h5>\n                Local Chroma Shift is determined from the average radial change{\" \"}\n                <br />\n                for the color evaluation samples within each hue-angle bin.\n                Chroma <br />\n                shift is a funciton of absolute chroma, so Local Chroma Shift{\" \"}\n                <br />\n                values are represented as a percentage. The number of samples\n                per <br />\n                bin (m), which can vary based on the CCT used for the\n                calculation, <br />\n                is shown at the top. [The colors of the bars are for visual{\" \"}\n                <br />\n                orientation only.]\n              </div>\n            </Card>\n          </Row>\n          <br />\n          <Row>\n            <Card>\n              <div\n                style={{\n                  position: \"inherit\",\n                  display: \"inline-block\",\n                  width: \"60%\"\n                }}\n              >\n                <LHSPlot data={this.tm30.local_hue_shift} long={true}></LHSPlot>\n              </div>\n              <div\n                style={{\n                  width: \"2%\",\n                  position: \"inherit\",\n                  display: \"inline-block\"\n                }}\n              />\n              <div\n                style={{\n                  position: \"inherit\",\n                  display: \"inline-block\",\n                  verticalAlign: \"top\",\n                  paddingTop: \"2%\"\n                }}\n              >\n                <h5>Local Hue Shift</h5>\n                Local hue shift is deteremined from the average change <br />\n                perpendicular to the hue-angle bin for the color evaluation{\" \"}\n                <br />\n                samples within each hue-angle bin. The number of samples per bin{\" \"}\n                <br />\n                (m), which can vary based on the CCT used for the calculation,\n                is <br />\n                shown at the top. [The colors of the bars are for visual <br />\n                orientation only.]\n              </div>\n            </Card>\n          </Row>\n          <br />\n          <Row>\n            <Card>\n              <div\n                style={{\n                  position: \"inherit\",\n                  display: \"inline-block\",\n                  width: \"60%\"\n                }}\n              >\n                <LCFPlot\n                  data={this.tm30.local_color_fidelity}\n                  long={true}\n                ></LCFPlot>\n              </div>\n              <div\n                style={{\n                  width: \"2%\",\n                  position: \"inherit\",\n                  display: \"inline-block\"\n                }}\n              />\n              <div\n                style={{\n                  position: \"inherit\",\n                  display: \"inline-block\",\n                  verticalAlign: \"top\",\n                  paddingTop: \"2%\"\n                }}\n              >\n                <h5>Local Color Fidelity</h5>\n                Local Color Fidelity is the average difference in CAM02-UCS for{\" \"}\n                <br />\n                the color evaluation samples in each hue-angle bin. The number\n                of <br />\n                samples per bin, which can vary based on the CCT used for the{\" \"}\n                <br />\n                calculation, is shown at the top. [The colors of the bars are\n                for <br />\n                visual orientation only.]\n              </div>\n            </Card>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n/**\n * Export the Graphical component\n */\nexport default Graphical;\n","/**\n * Simple.\n *\n * The simple Report page. Only has the CVG plot and a few words about the graph.\n *\n * TODO - Sloppy spacing. Using divs with inline styling. Hopefully fix that in the future\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport CVGPlot from \"../Plots/CVGPlot\";\n\n/**\n * Simple Class\n */\nexport class Simple extends Component {\n  constructor(props) {\n    super(props);\n    this.tm30 = this.props.tm30; //The data from the JSON file\n    this.input = this.props.input;\n  }\n  /**\n   * Render function\n   */\n  render() {\n    /**\n     * The simple report that just contains a card and the CVG plot\n     */\n    return (\n      <Grid>\n        <Card>\n          <Row>\n            <Col align=\"center\">\n              <div\n                style={{\n                  width: \"80%\"\n                }}\n              >\n                <Row align=\"center\">\n                  <h2\n                    style={{\n                      color: \"black\"\n                    }}\n                  >\n                    ANSI/IES TM-30-18 Color Rendition\n                  </h2>\n                </Row>\n                <CVGPlot\n                  xtest={this.tm30.path_xtest}\n                  ytest={this.tm30.path_ytest}\n                  xref={this.tm30.path_xref}\n                  yref={this.tm30.path_yref}\n                  rf={this.tm30.rg}\n                  rg={this.tm30.rf}\n                  cct={this.tm30.CCT[0]}\n                  duv={this.tm30.DUV[0]}\n                />\n                <Row align=\"center\">\n                  Color are for visual orientation purpose only. <br />\n                  Created with the ANSI/IES TM-30-18 Web Calculator\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </Card>\n      </Grid>\n    );\n  }\n}\n/**\n * Exporting the simple report component\n */\nexport default Simple;\n","/**\n * Intermediate.\n *\n * The Intermediate Report page. Contains the CVG Plot, LCS Plot, and LHS Plot\n *\n * TODO - Sloppy spacing. Using divs with inline styling. Hopefully fix that in the future\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport CVGPlot from \"../Plots/CVGPlot\";\nimport LHSPlot from \"../Plots/LHSPlot\";\nimport LCSPlot from \"../Plots/LCSPlot\";\nimport Pdf from \"react-to-pdf\";\nconst ref = React.createRef();\nconst options = {\n  orientation: \"landscape\",\n  unit: \"in\",\n  format: [8.5, 11]\n};\n/**\n * Intermediate class\n */\nexport class Intermediate extends Component {\n  constructor(props) {\n    super(props);\n    this.tm30 = this.props.tm30; //The data from the JSON file\n    this.input = this.props.input;\n    this.state = {};\n  }\n  /**\n   * Method that returns a simple object with the height of the inputted parameter\n   * @param {int} num\n   */\n  holder(num) {\n    return { height: num };\n  }\n  /**\n   * Render method\n   */\n  render() {\n    /**\n     * Creates Intermediate page. Uses the CVG, LCS, and LHS plots\n     */\n    return (\n      <div style={{}} align=\"center\">\n        <Row align=\"center\">\n          <h2\n            style={{\n              color: \"black\"\n            }}\n          >\n            ANSI IES TM-30-18 Color Rendition\n          </h2>\n          <Col xs={12} md={6}>\n            <div style={{ verticalAlign: \"middle\" }}>\n              <CVGPlot\n                xtest={this.tm30.path_xtest}\n                ytest={this.tm30.path_ytest}\n                xref={this.tm30.path_xref}\n                yref={this.tm30.path_yref}\n                rf={this.tm30.rg}\n                rg={this.tm30.rf}\n                cct={this.tm30.CCT[0]}\n                duv={this.tm30.DUV[0]}\n                active=\"Intermediate\"\n              ></CVGPlot>\n            </div>\n          </Col>\n          <Col xs={12} md={6}>\n            <div>\n              <LCSPlot\n                data={this.tm30.local_chroma_shift}\n                active=\"Intermediate\"\n              ></LCSPlot>\n            </div>\n\n            <div>\n              <LHSPlot\n                data={this.tm30.local_hue_shift}\n                active=\"Intermediate\"\n              ></LHSPlot>\n            </div>\n          </Col>\n        </Row>\n        <Row align=\"center\">\n          Color are for visual orientation purpose only. Created with the\n          ANSI/IES TM-30-18 Web Calculator\n        </Row>\n      </div>\n    );\n  }\n}\n/**\n * Export the component\n */\nexport default Intermediate;\n","/**\n * Report.\n *\n * The main Report page. By default it will display the Basic tab.\n * From there you can navigate using the page chnager at the top.\n * The other options are Graphical, Numerical, Simple, Intermediate, and Full.\n * These are all based off of the Excel calculator.\n *\n * TODO - Break the Basic Report into a component instead of living inside the Reports page.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport LHSPlot from \"./Plots/LHSPlot\";\nimport LCSPlot from \"./Plots/LCSPlot\";\nimport LCFPlot from \"./Plots/LCFPlot\";\nimport ELFPlot from \"./Plots/ELFPlot\";\nimport CVGPlot from \"./Plots/CVGPlot\";\nimport Pagination from \"react-bootstrap/es/Pagination\";\nimport Numerical from \"./Tabs/Numerical\";\nimport Graphical from \"./Tabs/Graphical\";\nimport Button from \"react-bootstrap/es/Button\";\nimport Simple from \"./Tabs/Simple\";\nimport Intermediate from \"./Tabs/Intermediate\";\n//import Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Pdf from \"react-to-pdf\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport htmlToImage from \"html-to-image\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\";\nimport {\n  setBinDividers,\n  setBinLabels,\n  setChromaIsolines\n} from \"../../../actions/dataActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n//var htmlToImage = require(\"html-to-image\");\nconst ref = React.createRef();\n\nconst CustCheckBox = withStyles({\n  root: {\n    color: \"#d3761d\",\n    \"&$checked\": {\n      color: \"#d3761d\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\n/**\n * Report Class\n */\nclass Report extends React.Component {\n  /**\n   * Create state and the active field.\n   * \"active\" is responsible for which\n   * tab you currently are on.\n   *\n   */\n  /**\n   * Constructor that mostly just defines constants so Report's render\n   * knows which page to display based off of the state and which tab is\n   * selected on the page.\n   * Also binds the pageChanged handler.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    if (!(this.props.location.state == null)) {\n      this.json = JSON.stringify(this.props.location.state.data);\n      var convert = require(\"xml-js\");\n      this.xml = convert.json2xml(this.props.location.state.data, {\n        compact: true,\n        spaces: 4\n      });\n    }\n    this.pageChanged = this.pageChanged.bind(this);\n    this.items = [];\n    this.basic = \"Basic\";\n    this.numerical = \"Numerical\";\n    this.simple = \"Simple\";\n    this.graphical = \"Graphical\";\n    this.intermediate = \"Intermediate\";\n    this.full = \"Full\";\n    this.state = {\n      active: \"Basic\",\n      width: 0,\n      height: 0,\n      bin_labels: true,\n      bin_dividers: true,\n      chroma_isolines: true,\n      loading: false\n    };\n    if (!(this.props.location.state == null)) {\n      this.name = this.props.location.state.name;\n    }\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleHTMLtoImage = this.handleHTMLtoImage.bind(this);\n  }\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  handleJSONDownload = () => {\n    var fileDownload = require(\"js-file-download\");\n    fileDownload(this.json, `${this.props.location.state.name}.json`);\n  };\n\n  handleXMLDownload = () => {\n    var fileDownload = require(\"js-file-download\");\n    fileDownload(this.xml, `${this.props.location.state.name}.xml`);\n  };\n\n  holder(num) {\n    return { height: num };\n  }\n\n  handleClick = event => {\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n\n  handleClose = event => {\n    this.setState({\n      anchorEl: null\n    });\n  };\n\n  handleBinLabels = event => {\n    var bin_labels;\n    if (this.props.bin_labels) {\n      bin_labels = false;\n    } else {\n      bin_labels = true;\n    }\n    this.props.setBinLabels(bin_labels);\n  };\n\n  handleBinDividers = event => {\n    var bin_dividers;\n    if (this.props.bin_dividers) {\n      bin_dividers = false;\n    } else {\n      bin_dividers = true;\n    }\n    this.props.setBinDividers(bin_dividers);\n  };\n\n  handleChromaIsolines = event => {\n    var chroma_isolines;\n    if (this.props.chroma_isolines) {\n      chroma_isolines = false;\n    } else {\n      chroma_isolines = true;\n    }\n    this.props.setChromaIsolines(chroma_isolines);\n  };\n\n  handleHTMLtoImage = event => {\n    if (\n      this.state.active === \"Intermediate\" ||\n      this.state.active === \"Simple\"\n    ) {\n      var name = `${this.name}-${this.state.active}.png`;\n      var fileDownload = require(\"js-file-download\");\n      htmlToImage\n        //.toBlob(document.getElementById(`${this.state.active}-print`))\n        .toBlob(document.getElementById(`Intermediate`))\n        .then(function(dataUrl) {\n          fileDownload(dataUrl, name);\n        });\n    }\n  };\n\n  /**\n   * This isn't working the way it is intended\n   */\n  /*\n  handleHTMLtoImage = event => {\n    this.startSpinner(this.stopSpinner);\n  };\n\n  startSpinner(_callback) {\n    //console.log(this.state.active);\n    var name = `${this.name}-${this.state.active}.png`;\n    var fileDownload = require(\"js-file-download\");\n    this.setState(\n      {\n        loading: true\n      },\n      () => {\n        console.log(this.state.loading);\n        htmlToImage\n          .toBlob(document.getElementById(`${this.state.active}`))\n          .then(function(dataUrl) {\n            fileDownload(dataUrl, name);\n          });\n        _callback();\n      }\n    );\n  }\n\n  stopSpinner = () => {\n    this.setState({\n      loading: false\n    });\n    console.log(this.state.loading);\n  };\n  */\n  /**\n   * Handler for changing the tab on the Reports page.\n   * @param {*} e //The event of changing tabs. Contains the tesxt of the tab\n   */\n  pageChanged(e) {\n    if (!(e.target.text == null)) {\n      this.setState({\n        active: e.target.text\n      });\n    }\n  }\n  /**\n   * Render function for the Reports page.\n   * Fairly extensive because Report is the handler for all the\n   * Report pages explained above. So depending on which tab is selected,\n   * the page will display different content.\n   *\n   * If an SPD calculation has not been calculated then there will be instructions on how to run\n   * one rather than errors showing.\n   * ! If the user leaves the tab then the SPD information will leave Cache\n   *\n   */\n  render() {\n    return (\n      <div>\n        {!(this.props.location.state == null) ? (\n          <div></div>\n        ) : (\n          <div\n            style={{\n              height: this.state.height - 300\n            }}\n          >\n            <br />\n            <Card>\n              <h2>No data Calculated</h2>\n\n              <ol>\n                <li>Click on Calculator above</li> <br />\n                <li>Choose which way to calculate data</li> <br />\n                <li>Click Calculate and you will be redirected here</li>\n              </ol>\n            </Card>\n          </div>\n        )}\n        {!(this.props.location.state == null) ? (\n          <div>\n            {\n              //(this.name = this.props.location.state.name)\n            }\n            <Row>\n              <Col xs={4}></Col>\n              <Col xs={4} align=\"center\">\n                {this.props.location.state.name === \"\" ? (\n                  <h1 align=\"center\">No SPD Name Specified</h1>\n                ) : (\n                  <div>\n                    <h1 align=\"center\">{this.props.location.state.name}</h1>\n                    <div>Download Data:</div>\n                    <Button onClick={this.handleJSONDownload}>JSON</Button>\n                    <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                    <Button onClick={this.handleXMLDownload}>XML</Button>\n                    <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                    {/*}\n                    <Pdf\n                      targetRef={ref}\n                      filename={`${this.props.location.state.name}.pdf`}\n                      x={75}\n                      y={50}\n                      options={options}\n                    >\n                      {({ toPdf }) => <Button onClick={toPdf}>PDF</Button>}\n                    </Pdf>\n                */}\n                    {this.state.loading ? (\n                      <div>\n                        <br />\n                        <label>\n                          {\" \"}\n                          Downloading Image <br />{\" \"}\n                          <LoadingSpinner color=\"copper\" size={6} />{\" \"}\n                        </label>\n                      </div>\n                    ) : (\n                      <Button onClick={this.handleHTMLtoImage}>Image</Button>\n                    )}\n                    {\n                      //<Save />\n                    }\n                    <br />\n                    <br />\n                    <div>\n                      {/*\n                      <Button onClick={this.handleClick}>Options</Button>\n                      <Menu\n                        id=\"simple-menu\"\n                        anchorEl={this.state.anchorEl}\n                        keepMounted\n                        open={Boolean(this.state.anchorEl)}\n                        onClose={this.handleClose}\n                      >\n                        <MenuItem>\n                          {\" \"}\n                          <FormControlLabel\n                            control={\n                              <CustCheckBox\n                                icon={\n                                  <CheckBoxOutlineBlankIcon\n                                    style={{ fontSize: 20 }}\n                                  />\n                                }\n                                checkedIcon={\n                                  <CheckBoxIcon style={{ fontSize: 20 }} />\n                                }\n                                checked={this.props.bin_labels}\n                                onChange={this.handleBinLabels}\n                              />\n                            }\n                            labelPlacement=\"end\"\n                            label={\n                              <span style={{ fontSize: \"1.5rem\" }}>\n                                Bin Labels\n                              </span>\n                            }\n                          />\n                        </MenuItem>\n                        <MenuItem>\n                          {\" \"}\n                          <FormControlLabel\n                            control={\n                              <CustCheckBox\n                                icon={\n                                  <CheckBoxOutlineBlankIcon\n                                    style={{ fontSize: 20 }}\n                                  />\n                                }\n                                checkedIcon={\n                                  <CheckBoxIcon style={{ fontSize: 20 }} />\n                                }\n                                checked={this.props.bin_dividers}\n                                onChange={this.handleBinDividers}\n                              />\n                            }\n                            labelPlacement=\"end\"\n                            label={\n                              <span style={{ fontSize: \"1.5rem\" }}>\n                                Bin Dividers\n                              </span>\n                            }\n                          />\n                        </MenuItem>\n                        <MenuItem>\n                          {\" \"}\n                          <FormControlLabel\n                            control={\n                              <CustCheckBox\n                                icon={\n                                  <CheckBoxOutlineBlankIcon\n                                    style={{ fontSize: 20 }}\n                                  />\n                                }\n                                checkedIcon={\n                                  <CheckBoxIcon style={{ fontSize: 20 }} />\n                                }\n                                checked={this.props.chroma_isolines}\n                                onChange={this.handleChromaIsolines}\n                              />\n                            }\n                            labelPlacement=\"end\"\n                            label={\n                              <span style={{ fontSize: \"1.5rem\" }}>\n                                Chroma Isolines\n                              </span>\n                            }\n                          />\n                        </MenuItem>\n                      </Menu>\n                          */}\n                    </div>\n                  </div>\n                )}\n                {/*this.state.active === \"Basic\" ||\n                this.state.active === \"Graphical\" ||\n                this.state.active === \"Numerical\" ? (\n                  <h1 align=\"center\">{`${this.state.active}`} Results</h1>\n                ) : (\n                  <h1 align=\"center\">{`${this.state.active}`} Report</h1>\n                )*/}\n              </Col>\n              <Col xs={4}></Col>\n            </Row>\n            <Row>\n              <Col align=\"center\">\n                <Pagination onClick={this.pageChanged}>\n                  <Pagination.Item\n                    key={this.basic}\n                    active={\n                      this.basic === this.state.active ||\n                      this.state.active == null\n                    }\n                  >\n                    {this.basic}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.graphical}\n                    active={this.graphical === this.state.active}\n                  >\n                    {this.graphical}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.numerical}\n                    active={this.numerical === this.state.active}\n                  >\n                    {this.numerical}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.simple}\n                    active={this.simple === this.state.active}\n                  >\n                    {this.simple}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.intermediate}\n                    active={this.intermediate === this.state.active}\n                  >\n                    {this.intermediate}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.full}\n                    active={this.full === this.state.active}\n                  >\n                    {this.full}\n                  </Pagination.Item>\n                </Pagination>\n              </Col>\n            </Row>\n            {this.state.active === \"Basic\" ? (\n              <div\n                style={{\n                  //width: \"125%\",\n                  marginLeft: \"25px\",\n                  marginRight: \"25px\",\n                  padding: \"50, 50, 50, 50\"\n                }}\n                ref={ref}\n                id=\"Basic\"\n              >\n                <br />\n                <Row>\n                  <Col xs={12} md={6}>\n                    {\" \"}\n                    <Card>\n                      <div>\n                        <ELFPlot\n                          test={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.normalized_SPD_test\n                          }\n                          ref_spd={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.normalized_SPD_ref\n                          }\n                          wavelengths={\n                            this.props.location.state.data.tm30.input.Wavelength\n                          }\n                        ></ELFPlot>\n                      </div>\n                    </Card>\n                  </Col>\n                  <Col xs={12} md={6}>\n                    <Card>\n                      <div>\n                        <LCSPlot\n                          data={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.local_chroma_shift\n                          }\n                        ></LCSPlot>\n                      </div>\n                    </Card>\n                  </Col>\n                </Row>\n                <br />\n                <Row>\n                  <Col xs={12} md={6} id=\"CVG\">\n                    <Card>\n                      <div>\n                        <CVGPlot\n                          xtest={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.path_xtest\n                          }\n                          ytest={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.path_ytest\n                          }\n                          xref={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.path_xref\n                          }\n                          yref={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.path_yref\n                          }\n                          rf={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.rg\n                          }\n                          rg={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.rf\n                          }\n                          cct={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.CCT[0]\n                          }\n                          duv={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.DUV[0]\n                          }\n                        ></CVGPlot>\n                      </div>\n                    </Card>\n                  </Col>\n                  <Col xs={12} md={6}>\n                    <Card>\n                      <div>\n                        <LHSPlot\n                          data={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.local_hue_shift\n                          }\n                        ></LHSPlot>\n                      </div>\n                    </Card>\n\n                    <br />\n\n                    <Card>\n                      <div>\n                        <LCFPlot\n                          data={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.local_color_fidelity\n                          }\n                        ></LCFPlot>\n                      </div>\n                    </Card>\n                  </Col>\n                </Row>\n              </div>\n            ) : (\n              <div></div>\n            )}\n            {this.state.active === \"Numerical\" ? (\n              <div\n                style={{\n                  paddingRight: \"25px\",\n                  paddingLeft: \"25px\"\n                }}\n              >\n                <Numerical\n                  tm30={this.props.location.state.data.tm30.Numerical_Results}\n                  input={this.props.location.state.data.tm30.input}\n                />\n              </div>\n            ) : (\n              <div></div>\n            )}\n            {this.state.active === \"Graphical\" ? (\n              <div\n                style={{\n                  paddingRight: \"25px\",\n                  paddingLeft: \"25px\"\n                }}\n              >\n                <Graphical\n                  tm30={this.props.location.state.data.tm30.Numerical_Results}\n                  input={this.props.location.state.data.tm30.input}\n                />\n              </div>\n            ) : (\n              <div></div>\n            )}\n            {this.state.active === \"Simple\" ? (\n              <div ref={ref} id=\"Simple\">\n                <Simple\n                  tm30={this.props.location.state.data.tm30.Numerical_Results}\n                  input={this.props.location.state.data.tm30.input}\n                />\n              </div>\n            ) : (\n              <div></div>\n            )}\n            {this.state.active === \"Intermediate\" ? (\n              <div>\n                <div\n                  style={{\n                    //width: \"125%\",\n                    //marginLeft: \"25px\",\n                    // marginRight: \"25px\",\n                    //width: \"8.5in\",\n                    //height: \"5.5in\",\n                    paddingRight: \"25px\",\n                    paddingLeft: \"25px\",\n                    padding: \"50, 50, 50, 50\"\n                  }}\n                  ref={ref}\n                  id=\"Intermediate\"\n                >\n                  <Card>\n                    <Intermediate\n                      tm30={\n                        this.props.location.state.data.tm30.Numerical_Results\n                      }\n                      input={this.props.location.state.data.tm30.input}\n                      active={this.state.active}\n                    />\n                  </Card>\n                </div>\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n\nReport.propTypes = {\n  setBinLabels: PropTypes.func.isRequired,\n  setBinDividers: PropTypes.func.isRequired,\n  setChromaIsolines: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  bin_labels: state.dataReducers.bin_labels,\n  bin_dividers: state.dataReducers.bin_dividers,\n  chroma_isolines: state.dataReducers.chroma_isolines\n});\n/**\n * Export the Report Component\n */\nexport default connect(mapStateToProps, {\n  setBinLabels,\n  setBinDividers,\n  setChromaIsolines\n})(Report);\n","import React, { Component } from \"react\";\n\nexport class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n  render() {\n    return (\n      <div\n        style={{\n          height: this.state.height - 300\n        }}\n      >\n        <h1>Profile</h1>\n        <div>\n          The idea here is to have a way to save SPD's that you have ran in the\n          past.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","/**\r\n * 404.\r\n *\r\n * A simple page that will be displayed when the page is not found.\r\n *\r\n *\r\n * @author Isaiah Scheel.\r\n * @since  11.07.2019\r\n */\r\n/**\r\n * Imports\r\n */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FourOhFour = ({ location }) => (\r\n  <Grid className=\"home-container\">\r\n    <h1>Page Does Not Exist</h1>\r\n    <p>\r\n      A page does not exist here at the requested location: {location.pathname}\r\n    </p>\r\n    <p>\r\n      <Link to=\"/\">Go Back Home</Link>\r\n    </p>\r\n  </Grid>\r\n);\r\n\r\nFourOhFour.propTypes = {\r\n  location: PropTypes.object\r\n};\r\n\r\nexport default FourOhFour;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport NavBar from \"pnnl-react-core/lib/NavBar\";\r\nimport NavItem from \"pnnl-react-core/lib/NavItem\";\r\n\r\nconst Navigation = () => (\r\n  <NavBar>\r\n    <Col sm={1} componentClass=\"ul\">\r\n      <NavItem to=\"/\" icon=\"home\" text=\"Home\" onlyActiveOnIndex />\r\n    </Col>\r\n    <Col sm={1} componentClass=\"ul\">\r\n      <NavItem to=\"/calc\" icon=\"software\" text=\"Data Input\" />\r\n    </Col>\r\n    <Col sm={1} componentClass=\"ul\">\r\n      <NavItem to=\"/Report\" icon=\"report\" text=\"Report\" />\r\n    </Col>\r\n    <Col sm={1} componentClass=\"ul\">\r\n      <NavItem to=\"/Profile\" icon=\"person\" text=\"Profile\" />\r\n    </Col>\r\n  </NavBar>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\n\nexport class Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <Grid>\n          <Row>\n            <Col xs={12}>\n              <div className=\"footer-top\">\n                <img\n                  className=\"footer-picture\"\n                  src={`${process.env.PUBLIC_URL}/images/ies-logo.jpg`}\n                />\n                <br />\n                ©1906-2019 Illuminating Engineering Society\n              </div>\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col xs={12}>\n              <div className=\"footer-bottom\">\n                <a href=\"https://www.ies.org/terms-of-use/\"> Terms of Use</a> |{\" \"}\n                <a href=\"https://www.ies.org/privacy-policy/\">Privacy Policy</a>\n              </div>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","export const ME_FETCH_START = 'ME_FETCH_START';\r\nexport const ME_FETCH_SUCCESS = 'ME_FETCH_SUCCESS';\r\nexport const ME_FETCH_ERROR = 'ME_FETCH_ERROR';\r\n\r\n\r\nexport function fetchLoggedInUser(hanfordId) {\r\n  return { type: ME_FETCH_START, hid: hanfordId };\r\n}\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Header from \"pnnl-react-core/lib/Header\";\nimport WebFooter from \"pnnl-react-core/lib/WebFooter\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-datasheet/lib/react-datasheet.css\";\n\nimport Home from \"./components/pages/Home\";\nimport Calc from \"./components/pages/Calculator\";\nimport Report from \"./components/pages/Report\";\nimport Profile from \"./components/pages/Profile\";\nimport FourOhFour from \"./components/pages/404\";\nimport Navigation from \"./components/core/Navigation\";\nimport Footer from \"./components/core/Navigation/Footer\";\nimport { fetchLoggedInUser } from \"./actions/me\";\n\nclass App extends Component {\n  componentWillMount() {\n    //const { dispatch } = this.props;\n    //dispatch(fetchLoggedInUser(\"self\"));\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div className=\"App\">\n          <Header\n            appLogo={`${process.env.PUBLIC_URL}/images/ies-logo.jpg`}\n            appTitle=\"ANSI/IES TM-30-18 Calculator\"\n            primaryNav={<Navigation />}\n            hasSearch={false}\n            className=\"titlebar\"\n          />\n          <main>\n            <Switch>\n              <Route path=\"/Report\" component={Report} />\n              <Route path=\"/calc\" component={Calc} />\n              <Route path=\"/home\" component={Home} />\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route component={FourOhFour} />\n            </Switch>\n          </main>\n          <footer>{<Footer />}</footer>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\n/*\nconst mapStateToProps = state => {\n  const { me } = state;\n  return {\n    me\n  };\n};\n*/\n\n//export default connect(mapStateToProps, null)(App);\n\nexport default App;\n","// Inject fetch polyfill if fetch is unsuported by the user's browser\r\nif (!window.fetch) { const fetch = require('whatwg-fetch'); }  // eslint-disable-line\r\n\r\n/**\r\n * Represents a the base FETCH configuration settings common to most GET requests.\r\n * See https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch for more options.\r\n * @param {string} method - The HTTP method used to communicate to the API being requested.\r\n * @param {string} credentials - This will send the authorization credentials for the user requesting the resource.\r\n * @param {Object} headers - This HTTP Headers object that you want to send along with the request.\r\n * */\r\nconst baseOptions = {\r\n  method: 'GET',\r\n  credentials: 'include',\r\n  headers: { 'Content-Type': 'application/json' },\r\n};\r\n\r\n/**\r\n * This method is used to resolve the first promise that the FETCH method returns. Common things\r\n * that this method is used for: resolving successful/bad requests, resolving HTTP Status Codes, raising custom errors.\r\n * @param {Object} response - An HTTP response object. Could be undefined or null if the request was aborted for any reason.\r\n * @return {Object} - The Promise object for the HTTP call\r\n * */\r\nfunction statusHelper(response) {\r\n  if (response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    }\r\n    return Promise.reject(new Error(response.statusText));\r\n  }\r\n\r\n  return Promise.reject(new Error('Unable to complete data request.'));\r\n}\r\n\r\n/**\r\n * This is a wrapper function around the FETCH Promise. If additional processing is needed for the HTTP response, it should be done here.\r\n * @param {string} url - The URL used in the method request. Use this in combination with the toQueryString method.\r\n * @param {Object} options - The FETCH method HTTP options.\r\n * @return {void} - No return value\r\n * */\r\nfunction callFetch(url, options) {\r\n  return fetch(url, options)\r\n    .then(statusHelper)\r\n    .then(response => response.json())\r\n    .catch((error) => {\r\n      throw error;\r\n    })\r\n    .then(data => data);\r\n}\r\n\r\n/**\r\n * This is a collection of shortcut methods you can use to call HTTP endpoints. By default you can supply the basic method options\r\n * and get basic operations for each type. This should be sufficient for most calls. If you need to supply overridden options or\r\n * you would like to change the base options, each convienence method has a overridden options parameter for you to use.\r\n *\r\n * There is also a convience method built into this object to do query string construction if you need it.\r\n * */\r\nconst api = {\r\n  /**\r\n   * This is a basic GET method call. It inherits the base options from this library and can be overridden to suit your needs.\r\n   * @param {string} url - The URL used in the method request. Use this in combination with the toQueryString method.\r\n   * @param {Object} [overriddenOptions] - Optional. Used to override the base options for the method. Any options passed in will override the defaults.\r\n   * @return {Object} - The response object from the HTTP call. It will be in JSON format if successful.\r\n   * */\r\n  GET(url, overriddenOptions = {}) {\r\n    return callFetch(url, Object.assign({}, baseOptions, overriddenOptions));\r\n  },\r\n\r\n  /**\r\n   * This is a basic POST method call. It inherits the base options from this library and can be overridden to suit your needs.\r\n   * @param {string} url - The URL used in the method request. Use this in combination with the toQueryString method.\r\n   * @param {Object} payload - Used as the body payload for the method. It will be wrapped in a JSON.stringify() call.\r\n   * @param {Object} [overriddenOptions] - Optional. Used to override the base options for the method. Any options passed in will override the defaults.\r\n   * @return {Object} - The response object from the HTTP call. It will be in JSON format if successful.\r\n   * */\r\n  POST(url, payload, overriddenOptions = {}) {\r\n    return callFetch(url, Object.assign({}, baseOptions, { method: 'POST', body: JSON.stringify(payload) }, overriddenOptions));\r\n  },\r\n\r\n  /**\r\n   * This is a basic PUT method call. It inherits the base options from this library and can be overridden to suit your needs.\r\n   * @param {string} url - The URL used in the method request. Use this in combination with the toQueryString method.\r\n   * @param {Object} payload - Used as the body payload for the method. It will be wrapped in a JSON.stringify() call.\r\n   * @param {Object} [overriddenOptions] - Optional. Used to override the base options for the method. Any options passed in will override the defaults.\r\n   * @return {Object} - The response object from the HTTP call. It will be in JSON format if successful.\r\n   * */\r\n  PUT(url, payload, overriddenOptions = {}) {\r\n    return callFetch(url, Object.assign({}, baseOptions, { method: 'PUT', body: JSON.stringify(payload) }, overriddenOptions));\r\n  },\r\n\r\n  /**\r\n   * This is a basic PATCH method call. It inherits the base options from this library and can be overridden to suit your needs.\r\n   * @param {string} url - The URL used in the method request. Use this in combination with the toQueryString method.\r\n   * @param {Object} payload - Used as the body payload for the method. It will be wrapped in a JSON.stringify() call.\r\n   * @param {Object} [overriddenOptions] - Optional. Used to override the base options for the method. Any options passed in will override the defaults.\r\n   * @return {Object} - The response object from the HTTP call. It will be in JSON format if successful.\r\n   * */\r\n  PATCH(url, payload, overriddenOptions = {}) {\r\n    return callFetch(url, Object.assign({}, baseOptions, { method: 'PATCH', body: JSON.stringify(payload) }, overriddenOptions));\r\n  },\r\n\r\n  /**\r\n   * This is a basic DELETE method call. It inherits the base options from this library and can be overridden to suit your needs.\r\n   * @param {string} url - The URL used in the method request. Use this in combination with the toQueryString method.\r\n   * @param {Object} payload - Used as the body payload for the method. It will be wrapped in a JSON.stringify() call.\r\n   * @param {Object} [overriddenOptions] - Optional. Used to override the base options for the method. Any options passed in will override the defaults.\r\n   * @return {Object} - The response object from the HTTP call. It will be in JSON format if successful.\r\n   * */\r\n  DELETE(url, overriddenOptions = {}) {\r\n    return callFetch(url, Object.assign({}, baseOptions, { method: 'DELETE' }, overriddenOptions));\r\n  },\r\n\r\n  /**\r\n   * This method is used to construct a query string property for an URL. It takes in an a object of values and turns it into a query string.\r\n   * @param {Object} obj - A one-level deep object that you want to turn into a query string. The key names will become the exact query string parameter names.\r\n   * @return {string} - The query string portion of the URL made from the object that is passed in.\r\n   * */\r\n  toQueryString(obj) {\r\n    const parts = [];\r\n    Object.keys(obj).forEach((key) => {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        parts.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj[key])}`);\r\n      }\r\n    });\r\n    return parts.length > 0 ? parts.join('&') : '';\r\n  }\r\n};\r\n\r\nexport default api;\r\n","/* eslint new-cap: 0 */\r\nimport { takeLatest, put } from 'redux-saga/effects';\r\n\r\nimport api from '../lib/restApiHelper';\r\nimport {\r\n  ME_FETCH_START,\r\n  ME_FETCH_SUCCESS,\r\n  ME_FETCH_ERROR\r\n} from '../actions/me';\r\n\r\n// A worker saga. Does all the hard API working code.\r\n// Worker sagas will get resumed whenever the Saga-Middleware gets a response back from the yielded code.\r\nfunction* fetchCurrentUser(action) {\r\n  try {\r\n    const response = yield api.GET(`${process.env.REACT_APP_API_OPWHSE}/jsonapi/people/${action.hid}?include=department,facilities,spaces`, {\r\n      headers: { 'Content-Type': 'application/vnd.api+json' }\r\n    });\r\n    yield put({ type: ME_FETCH_SUCCESS, payload: response });\r\n  } catch (error) {\r\n    yield put({ type: ME_FETCH_ERROR, payload: error });\r\n  }\r\n}\r\n\r\nexport default function* meSaga() {\r\n  yield takeLatest(ME_FETCH_START, fetchCurrentUser);\r\n}\r\n","import meSaga from './me';\r\n\r\n// A single entry point to start all the sagas at once. Using a generator function.\r\nexport default function* rootSaga() {\r\n  yield [\r\n    meSaga(),\r\n  ];\r\n}\r\n","import { ME_FETCH_SUCCESS, ME_FETCH_ERROR } from \"../actions/me\";\r\n\r\n// Massaging opwhse api (v3 'json api') data to work with pnnl-react-core profile popover\r\nfunction formatOpwhsePerson(payload) {\r\n  // Extract relationship data\r\n  const department = payload.included.find(i => i.type === \"department\");\r\n  const facility = payload.included.find(i => i.type === \"facility\");\r\n  let space = payload.included.find(i => i.type === \"space\");\r\n  const location = payload.data.relationships.locations.data.find(\r\n    loc => loc.meta.isSpace && loc.meta.usage === 'contact'\r\n  );\r\n  if (location) {\r\n    space.attributes.locationId = location.id;\r\n  }\r\n\r\n  const { name, email, phone, mailstop, portrait, ...person } = payload.data.attributes;\r\n\r\n  return {\r\n    ...person,\r\n    ...name,\r\n    emailAddress: email && email.address,\r\n    phoneNumber: phone && phone.number,\r\n    mailstop: mailstop && mailstop.msin,\r\n    portraitLink: portrait && portrait.url,\r\n    facility: facility && facility.attributes,\r\n    space: space && space.attributes,\r\n    department: department && department.attributes\r\n  };\r\n}\r\n\r\nexport default function me(state = {}, action) {\r\n  switch (action.type) {\r\n    case ME_FETCH_SUCCESS:\r\n      return Object.assign({}, state, formatOpwhsePerson(action.payload));\r\n    case ME_FETCH_ERROR:\r\n      // TODO: Handle your errors\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\n  SET_SPD_WAVELENGTH,\n  SET_EXAMPLE_OPEN,\n  SET_PASTE_OPEN,\n  SET_EXAMPLE,\n  SET_BIN_LABELS,\n  SET_BIN_DIVIDERS,\n  SET_CHROMA_ISOLINES\n} from \"../redux/types\";\n\nconst initialState = {\n  spd: [],\n  wavelengths: [],\n  loading: false,\n  example_open: false,\n  paste_open: false,\n  example: \"\",\n  bin_labels: true,\n  bin_dividers: true,\n  chroma_isolines: true\n  //cvg_options: { bin_labels: true, bin_dividers: true, chroma_isolines: true }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SPD_WAVELENGTH:\n      return {\n        ...state,\n        spd: action.payload.spd,\n        wavelengths: action.payload.wavelengths\n      };\n    case SET_EXAMPLE_OPEN:\n      return {\n        ...state,\n        example_open: true,\n        paste_open: false\n      };\n    case SET_PASTE_OPEN:\n      return {\n        ...state,\n        example_open: false,\n        paste_open: true\n      };\n    case SET_EXAMPLE:\n      return {\n        ...state,\n        example: action.payload\n      };\n    case SET_BIN_LABELS:\n      return {\n        ...state,\n        bin_labels: action.payload\n      };\n    case SET_BIN_DIVIDERS:\n      return {\n        ...state,\n        bin_dividers: action.payload\n      };\n    case SET_CHROMA_ISOLINES:\n      return {\n        ...state,\n        chroma_isolines: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport me from \"./me\";\nimport dataReducers from \"./dataReducers\";\n\nexport default combineReducers({\n  me,\n  dataReducers\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"./sagas/root\";\nimport rootReducer from \"./reducers\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(history, initialState) {\n  const storeEnhancers = [];\n  if (process.env.NODE_ENV !== \"production\") {\n    console.log(\n      `=-=-=-= The current application is running in ${process.env.NODE_ENV} mode =-=-=-=`\n    ); // eslint-disable-line\n    storeEnhancers.push(\n      typeof window === \"object\" &&\n        typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : f => f\n    );\n  }\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(sagaMiddleware, thunkMiddleware), ...storeEnhancers)\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", () => {\n      const nextRootReducer = require(\"./reducers\").default; // eslint-disable-line\n\n      store.replaceReducer(nextRootReducer.default || nextRootReducer);\n    });\n  }\n\n  return store;\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport \"./styles/main.less\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\n\r\nimport configureStore from \"./store\";\r\n\r\nconst history = createBrowserHistory();\r\n// Set initial state for application\r\nconst initialState = {};\r\nconst store = configureStore(history, initialState);\r\n\r\nconst renderApp = Component => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <Component />\r\n    </Provider>,\r\n    document.getElementById(\"app-container\")\r\n  );\r\n};\r\n\r\nrenderApp(App);\r\n\r\nif (module.hot) {\r\n  module.hot.accept(\"./App\", () => {\r\n    const NextApp = require(\"./App\").default;\r\n    renderApp(NextApp);\r\n  });\r\n}\r\n"],"sourceRoot":""}