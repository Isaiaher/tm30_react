import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';

import Image from '../Image';

const Avatar = (props) => {
  const {
    src,
    className,
    size,
    children,
    ...other
  } = props;

  const avatarClasses = classNames(
    className,
    [`PnnlAvatar-${size}`],
    'PnnlAvatar',
  );


  if (src) {
    return (
      <Image
        src={src}
        className={avatarClasses}
        alt="Avatar"
      />
    );
  }

  return (
    <div
      {...other}
      className={avatarClasses}
    >
      <span>
        {children}
      </span>
    </div>
  );
};

Avatar.propTypes = {
  /**
   * Can be used, for instance, to render a letter inside the avatar.
   */
  children: PropTypes.node,
  /**
   * The css class name of the root `div` or `img` element. Can be one of our standard color names to set the background color, or "text-*" with a color to specify the icon/text color.
   */
  className: PropTypes.string,
  /**
   * This is the size of the avatar. Our breakpoints are consistent with Boostrap grid breakpoints. 'md' is the default, and is used for the Person component, 'lg' is used in the PnnlProfileCard, 'sm' is intended for use in typeahead results and other menus, and 'xs' for instances that are space constrained. These translate into a className, and the actual sizes are defined in pnnl-theme-core.
   */
  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg']),
  /**
   * If passed in, this component will render an img element. Otherwise, a div will be rendered.
   */
  src: PropTypes.string,
};

Avatar.defaultProps = {
  children: null,
  className: null,
  size: 'md',
  src: null,
};

export default Avatar;
