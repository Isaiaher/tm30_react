{"ast":null,"code":"import _defineProperty from \"/Users/sche566/OneDrive - PNNL/Desktop/ies_tm30_web_app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/sche566/OneDrive - PNNL/Desktop/ies_tm30_web_app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ME_FETCH_SUCCESS, ME_FETCH_ERROR } from \"../actions/me\"; // Massaging opwhse api (v3 'json api') data to work with pnnl-react-core profile popover\n\nfunction formatOpwhsePerson(payload) {\n  // Extract relationship data\n  const department = payload.included.find(i => i.type === \"department\");\n  const facility = payload.included.find(i => i.type === \"facility\");\n  let space = payload.included.find(i => i.type === \"space\");\n  const location = payload.data.relationships.locations.data.find(loc => loc.meta.isSpace && loc.meta.usage === 'contact');\n\n  if (location) {\n    space.attributes.locationId = location.id;\n  }\n\n  const _payload$data$attribu = payload.data.attributes,\n        name = _payload$data$attribu.name,\n        email = _payload$data$attribu.email,\n        phone = _payload$data$attribu.phone,\n        mailstop = _payload$data$attribu.mailstop,\n        portrait = _payload$data$attribu.portrait,\n        person = _objectWithoutProperties(_payload$data$attribu, [\"name\", \"email\", \"phone\", \"mailstop\", \"portrait\"]);\n\n  return _objectSpread({}, person, {}, name, {\n    emailAddress: email && email.address,\n    phoneNumber: phone && phone.number,\n    mailstop: mailstop && mailstop.msin,\n    portraitLink: portrait && portrait.url,\n    facility: facility && facility.attributes,\n    space: space && space.attributes,\n    department: department && department.attributes\n  });\n}\n\nexport default function me(state = {}, action) {\n  switch (action.type) {\n    case ME_FETCH_SUCCESS:\n      return Object.assign({}, state, formatOpwhsePerson(action.payload));\n\n    case ME_FETCH_ERROR:\n      // TODO: Handle your errors\n      return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Desktop/ies_tm30_web_app/src/reducers/me.js"],"names":["ME_FETCH_SUCCESS","ME_FETCH_ERROR","formatOpwhsePerson","payload","department","included","find","i","type","facility","space","location","data","relationships","locations","loc","meta","isSpace","usage","attributes","locationId","id","name","email","phone","mailstop","portrait","person","emailAddress","address","phoneNumber","number","msin","portraitLink","url","me","state","action","Object","assign"],"mappings":";;;;;;;AAAA,SAASA,gBAAT,EAA2BC,cAA3B,QAAiD,eAAjD,C,CAEA;;AACA,SAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC;AACA,QAAMC,UAAU,GAAGD,OAAO,CAACE,QAAR,CAAiBC,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,YAAtC,CAAnB;AACA,QAAMC,QAAQ,GAAGN,OAAO,CAACE,QAAR,CAAiBC,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,UAAtC,CAAjB;AACA,MAAIE,KAAK,GAAGP,OAAO,CAACE,QAAR,CAAiBC,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,OAAtC,CAAZ;AACA,QAAMG,QAAQ,GAAGR,OAAO,CAACS,IAAR,CAAaC,aAAb,CAA2BC,SAA3B,CAAqCF,IAArC,CAA0CN,IAA1C,CACfS,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,IAAoBF,GAAG,CAACC,IAAJ,CAASE,KAAT,KAAmB,SAD/B,CAAjB;;AAGA,MAAIP,QAAJ,EAAc;AACZD,IAAAA,KAAK,CAACS,UAAN,CAAiBC,UAAjB,GAA8BT,QAAQ,CAACU,EAAvC;AACD;;AAVkC,gCAY2BlB,OAAO,CAACS,IAAR,CAAaO,UAZxC;AAAA,QAY3BG,IAZ2B,yBAY3BA,IAZ2B;AAAA,QAYrBC,KAZqB,yBAYrBA,KAZqB;AAAA,QAYdC,KAZc,yBAYdA,KAZc;AAAA,QAYPC,QAZO,yBAYPA,QAZO;AAAA,QAYGC,QAZH,yBAYGA,QAZH;AAAA,QAYgBC,MAZhB;;AAcnC,2BACKA,MADL,MAEKL,IAFL;AAGEM,IAAAA,YAAY,EAAEL,KAAK,IAAIA,KAAK,CAACM,OAH/B;AAIEC,IAAAA,WAAW,EAAEN,KAAK,IAAIA,KAAK,CAACO,MAJ9B;AAKEN,IAAAA,QAAQ,EAAEA,QAAQ,IAAIA,QAAQ,CAACO,IALjC;AAMEC,IAAAA,YAAY,EAAEP,QAAQ,IAAIA,QAAQ,CAACQ,GANrC;AAOEzB,IAAAA,QAAQ,EAAEA,QAAQ,IAAIA,QAAQ,CAACU,UAPjC;AAQET,IAAAA,KAAK,EAAEA,KAAK,IAAIA,KAAK,CAACS,UARxB;AASEf,IAAAA,UAAU,EAAEA,UAAU,IAAIA,UAAU,CAACe;AATvC;AAWD;;AAED,eAAe,SAASgB,EAAT,CAAYC,KAAK,GAAG,EAApB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAAC7B,IAAf;AACE,SAAKR,gBAAL;AACE,aAAOsC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyBlC,kBAAkB,CAACmC,MAAM,CAAClC,OAAR,CAA3C,CAAP;;AACF,SAAKF,cAAL;AACE;AACA,aAAOmC,KAAP;;AACF;AACE,aAAOA,KAAP;AAPJ;AASD","sourcesContent":["import { ME_FETCH_SUCCESS, ME_FETCH_ERROR } from \"../actions/me\";\r\n\r\n// Massaging opwhse api (v3 'json api') data to work with pnnl-react-core profile popover\r\nfunction formatOpwhsePerson(payload) {\r\n  // Extract relationship data\r\n  const department = payload.included.find(i => i.type === \"department\");\r\n  const facility = payload.included.find(i => i.type === \"facility\");\r\n  let space = payload.included.find(i => i.type === \"space\");\r\n  const location = payload.data.relationships.locations.data.find(\r\n    loc => loc.meta.isSpace && loc.meta.usage === 'contact'\r\n  );\r\n  if (location) {\r\n    space.attributes.locationId = location.id;\r\n  }\r\n\r\n  const { name, email, phone, mailstop, portrait, ...person } = payload.data.attributes;\r\n\r\n  return {\r\n    ...person,\r\n    ...name,\r\n    emailAddress: email && email.address,\r\n    phoneNumber: phone && phone.number,\r\n    mailstop: mailstop && mailstop.msin,\r\n    portraitLink: portrait && portrait.url,\r\n    facility: facility && facility.attributes,\r\n    space: space && space.attributes,\r\n    department: department && department.attributes\r\n  };\r\n}\r\n\r\nexport default function me(state = {}, action) {\r\n  switch (action.type) {\r\n    case ME_FETCH_SUCCESS:\r\n      return Object.assign({}, state, formatOpwhsePerson(action.payload));\r\n    case ME_FETCH_ERROR:\r\n      // TODO: Handle your errors\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}