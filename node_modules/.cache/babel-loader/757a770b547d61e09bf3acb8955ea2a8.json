{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Panel = require('react-bootstrap/lib/Panel');\n\nvar _Panel2 = _interopRequireDefault(_Panel);\n\nvar _Icon = require('../Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar Card = function (_React$Component) {\n  (0, _inherits3['default'])(Card, _React$Component);\n\n  function Card(props) {\n    (0, _classCallCheck3['default'])(this, Card);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));\n\n    _this.setViewState = function (collapsed) {\n      var onToggleCollapse = _this.props.onToggleCollapse;\n      var newState = {\n        collapsed: collapsed\n      };\n\n      _this.setState(newState);\n\n      if (onToggleCollapse) {\n        onToggleCollapse(newState);\n      }\n    };\n\n    _this.getHeader = function () {\n      var _this$props = _this.props,\n          header = _this$props.header,\n          collapsible = _this$props.collapsible;\n      var headerContent = null;\n\n      if (typeof header === 'string') {\n        headerContent = _react2['default'].createElement(_react2['default'].Fragment, null, header, collapsible && _react2['default'].createElement('span', {\n          className: 'arrow'\n        }, _react2['default'].createElement(_Icon2['default'], {\n          icon: 'chevron-up'\n        })));\n      } else {\n        headerContent = header;\n      }\n\n      var intContent = _react2['default'].createElement(_Panel2['default'].Title, {\n        toggle: collapsible,\n        componentClass: 'h1'\n      }, headerContent);\n\n      return _react2['default'].createElement(_Panel2['default'].Heading, null, intContent);\n    };\n\n    _this.getFooter = function () {\n      var footer = _this.props.footer;\n      return _react2['default'].createElement(_Panel2['default'].Footer, null, footer);\n    };\n\n    _this.getMainContent = function () {\n      var _this$props2 = _this.props,\n          collapsible = _this$props2.collapsible,\n          altContent = _this$props2.altContent,\n          children = _this$props2.children;\n      var collapsed = _this.state.collapsed;\n\n      var mainContent = _react2['default'].createElement(_Panel2['default'].Body, null, children);\n\n      if (collapsible) {\n        var altContentNode = '';\n\n        if (altContent && collapsed) {\n          altContentNode = _react2['default'].createElement('div', {\n            className: 'PnnlCard-alt'\n          }, altContent);\n        }\n\n        mainContent = _react2['default'].createElement(_react2['default'].Fragment, null, altContentNode, _react2['default'].createElement(_Panel2['default'].Collapse, null, _react2['default'].createElement(_Panel2['default'].Body, null, children)));\n      }\n\n      return mainContent;\n    };\n\n    _this.collapseCard = function () {\n      _this.setViewState(true);\n    };\n\n    _this.expandCard = function () {\n      _this.setViewState(false);\n    };\n\n    _this.toggleCollapse = function () {\n      _this.setViewState(!_this.state.collapsed);\n    };\n\n    _this.state = {\n      collapsed: props.collapsed\n    };\n    return _this;\n  }\n\n  Card.prototype.render = function render() {\n    var _props = this.props,\n        header = _props.header,\n        footer = _props.footer,\n        className = _props.className,\n        style = _props.style;\n    var headerContent = '';\n\n    if (header) {\n      headerContent = this.getHeader();\n    }\n\n    var mainContent = this.getMainContent();\n    var footerContent = '';\n\n    if (footer) {\n      footerContent = this.getFooter();\n    }\n\n    return _react2['default'].createElement(_Panel2['default'], {\n      bsClass: 'PnnlCard',\n      className: className,\n      style: style,\n      onToggle: this.setViewState,\n      defaultExpanded: !this.state.collapsed\n    }, headerContent, mainContent, footerContent);\n  };\n\n  return Card;\n}(_react2['default'].Component);\n\nCard.propTypes = {\n  /**\n    * Header to be displayed at the top of the card. If not provided then no header will be rendered.\n    * */\n  header: _propTypes2['default'].oneOfType([_propTypes2['default'].node, _propTypes2['default'].string]),\n\n  /**\n    * Footer to be displayed at the bottom of the card. If not provided then no footer will be rendered.\n    * */\n  footer: _propTypes2['default'].oneOfType([_propTypes2['default'].node, _propTypes2['default'].string]),\n\n  /**\n    * Should the card be collapsed on initial render?  False by default.\n    * */\n  collapsed: _propTypes2['default'].bool,\n\n  /**\n    * Should the card be collapsible by clicking on the header?  False by default.\n    * */\n  collapsible: _propTypes2['default'].bool,\n\n  /**\n    * Function to be called when the card is collapsed/expanded.  Can be used to change out the header content that will be displayed in the collapsed state.\n    * */\n  onToggleCollapse: _propTypes2['default'].func,\n\n  /**\n    * Content that will be displayed when the card is collapsed.  This can provide users a hint at what the collapsed card contains.  The alternative content should be informative, not interactive, and must not contain items that are unavailable in the main content of the card.\n    * */\n  altContent: _propTypes2['default'].node\n};\nCard.defaultProps = {\n  collapsible: false,\n  collapsed: false,\n  header: null,\n  footer: null,\n  onToggleCollapse: null,\n  altContent: null\n};\nexports['default'] = Card;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}