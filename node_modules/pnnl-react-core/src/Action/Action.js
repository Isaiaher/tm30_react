import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import Button from 'react-bootstrap/lib/Button';
import { elementType } from 'prop-types-extra';
import Icon from '../Icon';
import Link from '../Link';

class Action extends React.Component {
  renderLink(actionClasses) {
    const { icon, text, to } = this.props;
    const restProps = {
      onlyActiveOnIndex: this.props.onlyActiveOnIndex,
      activeClassName: 'active',
    };
    return (
      <Link to={to} className={actionClasses} {...restProps}>
        <Icon icon={icon} {...this.props} />
        <small>{text}</small>
      </Link>
    );
  }

  render() {
    const {
      icon, text, to, displayType, bsRole, componentClass, id, onClick, onKeyDown, readonly, children,
    } = this.props;
    const actionClasses = classNames(
      displayType,
      bsRole,
      'PnnlAction',
    );

    if (to) {
      return this.renderLink(actionClasses);
    }

    const caretClassName = bsRole ? 'caret' : '';
    const Component = (componentClass) || Button;

    return (
      <Component
        id={id}
        className={actionClasses}
        bsRole={bsRole}
        onClick={onClick}
        onKeyDown={onKeyDown}
        disabled={readonly}
      >
        <Icon icon={icon} {...this.props} />
        {text !== null &&
          <small>{text}</small>
        }
        <span className={caretClassName} />
        {children}
      </Component>
    );
  }
}

Action.propTypes = {
  icon: PropTypes.string.isRequired,
  text: PropTypes.string,
  /** if 'to' is specified, we'll render a <Link>, otherwise a <button> */
  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  componentClass: elementType,
  displayType: PropTypes.string,
  readonly: PropTypes.bool,
  /** only show link to '/' as active if actually on that page */
  onlyActiveOnIndex: PropTypes.bool,
  bsRole: PropTypes.string,

  // these are pass throughs and don't need defauls to
  /* eslint-disable react/require-default-props */
  id: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.number,
  ]),
  onClick: PropTypes.func,
  onKeyDown: PropTypes.func,
  /* eslint-enable */
};

Action.defaultProps = {
  onlyActiveOnIndex: true,
  readonly: false,
  componentClass: null,
  displayType: null,
  bsRole: null,
  text: null,
  to: null,
};

export default Action;
