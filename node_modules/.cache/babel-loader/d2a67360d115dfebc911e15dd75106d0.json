{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n    console.log(this.xtest);\n    console.log(Math.max(...this.xtest));\n    console.log(Math.min(...this.xtest));\n    var i;\n  }\n\n  render() {\n    var xmax = Math.max(...this.xtest);\n    var xmin = Math.min(...this.xtest); //var xstd = Math.std(...this.xtest);\n\n    const n = this.xtest.length;\n    const mean = this.xtest.reduce((a, b) => a + b) / n;\n    const stdDevX = Math.sqrt(this.xtest.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\n    console.log(stdDevX);\n    var ymax = Math.max(this.ytest);\n    var ymin = Math.min(this.ytest);\n    console.log(\"xmax = \".concat(xmax));\n    console.log(\"xmin = \".concat(xmin));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [{\n        name: \"Test\",\n        x: this.xtest,\n        y: this.ytest,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"red\"\n        }\n      }, {\n        /*\n        name: \"Reference\",\n        x: this.wavelength,\n        y: this.spd_ref,\n        type: \"scatter\",\n        mode: \"lines+points\",\n        marker: { color: \"black\" }\n        */\n      }],\n      layout: {\n        width: 500,\n        height: 500,\n        margin: {\n          l: 60,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 4\n        },\n        xaxis: {\n          range: [xmin + -1 * mean, xmax + mean],\n          title: {\n            text: \"\" //showticklabels: false\n\n          }\n        },\n        yaxis: {\n          title: {\n            text: \"\"\n          },\n          tickformat: \"\" //howticklabels: false\n\n        }\n      },\n      config: {\n        displayModeBar: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default CVGPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx"],"names":["React","Component","Plot","CVGPlot","constructor","props","xtest","push","ytest","console","log","Math","max","min","i","render","xmax","xmin","n","length","mean","reduce","a","b","stdDevX","sqrt","map","x","pow","ymax","ymin","name","y","type","line","shape","smoothing","mode","connectgaps","marker","color","width","height","margin","l","r","t","pad","xaxis","range","title","text","yaxis","tickformat","displayModeBar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n    console.log(this.xtest);\n    console.log(Math.max(...this.xtest));\n    console.log(Math.min(...this.xtest));\n    var i;\n  }\n  render() {\n    var xmax = Math.max(...this.xtest);\n    var xmin = Math.min(...this.xtest);\n    //var xstd = Math.std(...this.xtest);\n    const n = this.xtest.length;\n    const mean = this.xtest.reduce((a, b) => a + b) / n;\n    const stdDevX = Math.sqrt(\n      this.xtest.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n\n    );\n    console.log(stdDevX);\n    var ymax = Math.max(this.ytest);\n    var ymin = Math.min(this.ytest);\n    console.log(`xmax = ${xmax}`);\n    console.log(`xmin = ${xmin}`);\n    return (\n      <div>\n        <Plot\n          data={[\n            {\n              name: \"Test\",\n              x: this.xtest,\n              y: this.ytest,\n              type: \"scatter\",\n              line: { shape: \"spline\", smoothing: 1.3 },\n              mode: \"lines+points\",\n              connectgaps: true,\n              marker: { color: \"red\" }\n            },\n            {\n              /*\n              name: \"Reference\",\n              x: this.wavelength,\n              y: this.spd_ref,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              marker: { color: \"black\" }\n              */\n            }\n          ]}\n          layout={{\n            width: 500,\n            height: 500,\n            margin: {\n              l: 60,\n              r: 10,\n              b: 45,\n              t: 10,\n              pad: 4\n            },\n            xaxis: {\n              range: [xmin + -1 * mean, xmax + mean],\n              title: {\n                text: \"\"\n              }\n              //showticklabels: false\n            },\n            yaxis: {\n              title: {\n                text: \"\"\n              },\n              tickformat: \"\"\n              //howticklabels: false\n            }\n          }}\n          config={{ displayModeBar: false }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CVGPlot;\n"]},"metadata":{},"sourceType":"module"}