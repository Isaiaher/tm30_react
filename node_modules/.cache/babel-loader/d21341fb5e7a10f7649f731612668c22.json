{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Calculator/Calc.jsx\";\n\n/**\n * Calc.\n *\n * A component for the Calculator page of the program.\n * Contains three different \"Sections\" or input options\n *\n * A - Example\n * - The user is able to select an Example SPD to send to the server for it to run\n *\n * B - File Input\n * - The user is able to choose an SPDX file that the app will parse and send the SPD and Wavelength information to the Server\n *\n * C - Paste Option\n * - The user is able to specify the details on their Wavelength 9Start, end, and Step size)\n * and then paste in the SPD (In a newline seperated format) to send to the Server to run\n *\n * !The backend can not handle anything that is not a 380-780 by 1 step SPD as of 11.07.2018\n *\n * TODO Implement the Linear Interpolation functionality to the Pasting option.\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n\n/**\n * Imports\n */\nimport React from \"react\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Examples from \"./Sections/Examples\";\nimport FileInput from \"./Sections/FileInput\";\nimport Paste from \"./Sections/Paste\";\nimport Col from \"react-bootstrap/es/Col\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Pagination from \"react-bootstrap/es/Pagination\";\n/**\n * The Calc class. Just uses all three options as seperate components\n */\n\nclass Calc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: this.state.height - 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Col, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      onClick: this.pageChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Pagination.Item, {\n      key: this.basic,\n      active: this.basic === this.state.active || this.state.active == null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Examples\"), React.createElement(Pagination.Item, {\n      key: this.graphical,\n      active: this.graphical === this.state.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Import File\"), React.createElement(Pagination.Item, {\n      key: this.numerical,\n      active: this.numerical === this.state.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Paste Data\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Input SPD from Library\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Example:\"), React.createElement(\"div\", {\n      className: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Examples, {\n      cvg_options: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Import .spdx File\"), React.createElement(FileInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Paste, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Calc;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Calculator/Calc.jsx"],"names":["React","Grid","Card","Examples","FileInput","Paste","Col","Row","Pagination","Calc","Component","constructor","props","state","width","height","updateWindowDimensions","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","setState","innerWidth","innerHeight","render","pageChanged","basic","active","graphical","numerical"],"mappings":"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","sourcesContent":["/**\n * Calc.\n *\n * A component for the Calculator page of the program.\n * Contains three different \"Sections\" or input options\n *\n * A - Example\n * - The user is able to select an Example SPD to send to the server for it to run\n *\n * B - File Input\n * - The user is able to choose an SPDX file that the app will parse and send the SPD and Wavelength information to the Server\n *\n * C - Paste Option\n * - The user is able to specify the details on their Wavelength 9Start, end, and Step size)\n * and then paste in the SPD (In a newline seperated format) to send to the Server to run\n *\n * !The backend can not handle anything that is not a 380-780 by 1 step SPD as of 11.07.2018\n *\n * TODO Implement the Linear Interpolation functionality to the Pasting option.\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React from \"react\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Examples from \"./Sections/Examples\";\nimport FileInput from \"./Sections/FileInput\";\nimport Paste from \"./Sections/Paste\";\nimport Col from \"react-bootstrap/es/Col\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Pagination from \"react-bootstrap/es/Pagination\";\n/**\n * The Calc class. Just uses all three options as seperate components\n */\nclass Calc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n  render() {\n    return (\n      <div\n        style={{\n          height: this.state.height - 300\n        }}\n      >\n        <Grid>\n          <br />\n          <Row>\n            <Col xs={12}></Col>\n          </Row>\n          <Row>\n            <Col align=\"center\">\n              <Pagination onClick={this.pageChanged}>\n                <Pagination.Item\n                  key={this.basic}\n                  active={\n                    this.basic === this.state.active ||\n                    this.state.active == null\n                  }\n                >\n                  Examples\n                </Pagination.Item>\n                <Pagination.Item\n                  key={this.graphical}\n                  active={this.graphical === this.state.active}\n                >\n                  Import File\n                </Pagination.Item>\n                <Pagination.Item\n                  key={this.numerical}\n                  active={this.numerical === this.state.active}\n                >\n                  Paste Data\n                </Pagination.Item>\n              </Pagination>\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col xs={4}>\n              <Card>\n                <h2>Input SPD from Library</h2>\n                {/*<label>\n          User:\n          <select id=\"User\" name=\"User\">\n            <option value=\"one\">1</option>\n            <option value=\"two\">2</option>\n            <option value=\"three\">3</option>\n          </select>\n        </label>\n        <br />\n        <label>\n          Commercial:\n          <select id=\"Commercial\" name=\"Commercial\">\n            <option value=\"one\">1</option>\n            <option value=\"two\">2</option>\n            <option value=\"three\">3</option>\n          </select>\n        </label>\n        <br />\n        */}\n                <label>Example:</label>\n                <div className=\"select\">\n                  <Examples cvg_options={this.state} />\n                </div>\n              </Card>\n            </Col>\n            <Col xs={3}>\n              <Card>\n                <h2>Import .spdx File</h2>\n                <FileInput />\n              </Card>\n              <br />\n              {/*\n              <Card>\n                <h2>CVG Options</h2>\n                <div>\n                  <FormControlLabel\n                    control={\n                      <CustCheckBox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"large\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"large\" />}\n                        checked={this.state.bin_labels}\n                        onChange={this.handleBinLabels}\n                      />\n                    }\n                    labelPlacement=\"End\"\n                    label={\n                      <span style={{ fontSize: \"1.85rem\" }}>Bin Labels</span>\n                    }\n                  />\n\n                  <FormControlLabel\n                    control={\n                      <CustCheckBox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"large\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"large\" />}\n                        checked={this.state.bin_dividers}\n                        onChange={this.handleBinDividers}\n                      />\n                    }\n                    labelPlacement=\"End\"\n                    label={\n                      <span style={{ fontSize: \"1.85rem\" }}>Bin Dividers</span>\n                    }\n                  />\n                  \n                  <FormControlLabel\n                    control={\n                      <CustCheckBox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"large\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"large\" />}\n                        checked={this.state.chroma_isolines}\n                        onChange={this.handleChromaIsolines}\n                      />\n                    }\n                    labelPlacement=\"End\"\n                    label={\n                      <span style={{ fontSize: \"1.85rem\" }}>\n                        Chroma Isolines\n                      </span>\n                    }\n                  />\n                  \n                </div>\n              </Card>\n              */}\n            </Col>\n            <Col xs={5}>\n              <Card>\n                <Paste />\n              </Card>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Calc;\n"]},"metadata":{},"sourceType":"module"}