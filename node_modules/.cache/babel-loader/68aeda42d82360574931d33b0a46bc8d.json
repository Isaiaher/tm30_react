{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Documents/ies_tm30_web_app/src/components/pages/Calculator/FileInput.jsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/es/Button';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport LoadingSpinner from 'pnnl-react-core/lib/Loader';\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n    this.formData = new FormData();\n    this.state = {\n      loading: false,\n      data: [],\n      tableReady: false\n    };\n  }\n\n  handleSubmit(event) {\n    //console.log(event.target.files[0]);\n    event.preventDefault(); //Send file to server\n\n    this.setState({\n      loading: true\n    }, () => {\n      this.formData.append('file', this.fileInput.current.files[0]);\n      axios.post('http://localhost:5000/api/uploadSPDX', this.formData).then(res => {\n        return res.data;\n      }).then(data => {\n        console.log(data.data);\n        this.setState({\n          loading: false,\n          data: data.data,\n          tableReady: true\n        });\n      });\n    });\n  }\n\n  render() {\n    var columns = ['Wavelength', 'Power Value'];\n    const loading = this.state.loading;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Import .spdx file:\", React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Calculating Results \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), \" \", React.createElement(LoadingSpinner, {\n      color: \"copper\",\n      size: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), \" \"), React.createElement(\"table\", {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"CURRENCY_NAME\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"CURRENCY_TICKER\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.currencies.map(function (item, key) {\n      return React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, item.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, item.currencyname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, item.currencyticker));\n    })))) : React.createElement(Button, {\n      bsSize: \"sm\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Calculate\"));\n  }\n\n}\n\nexport default FileInput;\n/*\n        alert(\n        `Results ${\n          res.data\n        }`\n      );\n*/","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Documents/ies_tm30_web_app/src/components/pages/Calculator/FileInput.jsx"],"names":["React","Button","render","axios","LoadingSpinner","FileInput","Component","constructor","props","handleSubmit","bind","fileInput","createRef","formData","FormData","state","loading","data","tableReady","event","preventDefault","setState","append","current","files","post","then","res","console","log","columns","currencies","map","item","key","id","currencyname","currencyticker"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,GAAiBX,KAAK,CAACY,SAAN,EAAjB;AACA,SAAKC,QAAL,GAAgB,IAAIC,QAAJ,EAAhB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AACDT,EAAAA,YAAY,CAACU,KAAD,EAAQ;AAClB;AACAA,IAAAA,KAAK,CAACC,cAAN,GAFkB,CAGlB;;AACA,SAAKC,QAAL,CAAc;AAACL,MAAAA,OAAO,EAAE;AAAV,KAAd,EAA+B,MAAM;AACrC,WAAKH,QAAL,CAAcS,MAAd,CAAqB,MAArB,EAA4B,KAAKX,SAAL,CAAeY,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAA5B;AACArB,MAAAA,KAAK,CAACsB,IAAN,CAAW,sCAAX,EAAmD,KAAKZ,QAAxD,EACGa,IADH,CACQC,GAAG,IAAI;AACX,eAAOA,GAAG,CAACV,IAAX;AACD,OAHH,EAIGS,IAJH,CAIQT,IAAI,IAAI;AACZW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACA,IAAjB;AACA,aAAKI,QAAL,CAAc;AACZL,UAAAA,OAAO,EAAE,KADG;AAEZC,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAFC;AAGZC,UAAAA,UAAU,EAAE;AAHA,SAAd;AAKD,OAXH;AAYC,KAdD;AAeD;;AAEDhB,EAAAA,MAAM,GAAG;AACP,QAAI4B,OAAO,GAAG,CAAC,YAAD,EAAe,aAAf,CAAd;AACA,UAAMd,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKP,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKE,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMGK,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,OAAkC,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,QAAtB;AAA+B,MAAA,IAAI,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,MAAL,EACX;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,OAAO,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHD,CADF,CADE,EAQF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKD,KAAL,CAAWgB,UAAX,CAAsBC,GAAtB,CAA0B,UAASC,IAAT,EAAeC,GAAf,EAAmB;AAC1C,aACE;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,EAAV,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,YAAV,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,IAAI,CAACI,cAAV,CAHH,CADF;AAOH,KARA,CADD,CARE,CADW,CAAH,GAsBJ,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,IAAf;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA5BN,CADF;AAgCD;;AApEmC;;AAsEtC,eAAehC,SAAf;AAKE","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/es/Button';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport LoadingSpinner from 'pnnl-react-core/lib/Loader';\n\nclass FileInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.fileInput = React.createRef();\n      this.formData = new FormData();\n      this.state = {\n        loading: false,\n        data: [],\n        tableReady: false\n      }\n    }\n    handleSubmit(event) {\n      //console.log(event.target.files[0]);\n      event.preventDefault();\n      //Send file to server\n      this.setState({loading: true}, () => {\n      this.formData.append('file',this.fileInput.current.files[0]);\n      axios.post('http://localhost:5000/api/uploadSPDX', this.formData)\n        .then(res => {\n          return res.data;\n        })\n        .then(data => {\n          console.log(data.data);\n          this.setState({\n            loading: false,\n            data: data.data,\n            tableReady: true\n          });\n        })\n      });\n    }\n  \n    render() {\n      var columns = ['Wavelength', 'Power Value'];\n      const loading = this.state.loading;\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Import .spdx file:\n            <input type=\"file\" ref={this.fileInput} />\n          </label>\n          <br />\n          {loading ? <div><label> Calculating Results <br/> <LoadingSpinner color=\"copper\" size=\"6\" /> </label> \n          <table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n           <th>ID</th>\n           <th>CURRENCY_NAME</th>\n           <th>CURRENCY_TICKER</th>\n          </tr>\n        </thead>\n        <tbody>\n        {this.state.currencies.map(function(item, key){\n            return(\n              <tr key={key}>\n                 <td>{item.id}</td>\n                 <td>{item.currencyname}</td>\n                 <td>{item.currencyticker}</td>\n              </tr>\n            )\n        })}\n        </tbody>\n      </table>\n            </div> \n            : <Button bsSize=\"sm\" type=\"submit\">Calculate</Button>}\n        </form>\n      );\n    }\n  }\n  export default FileInput;\n\n\n\n\n    /*\n            alert(\n            `Results ${\n              res.data\n            }`\n          );\n  */"]},"metadata":{},"sourceType":"module"}