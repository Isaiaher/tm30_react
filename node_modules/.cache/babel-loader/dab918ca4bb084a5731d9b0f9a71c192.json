{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Image = require('../Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar Avatar = function Avatar(props) {\n  var src = props.src,\n      className = props.className,\n      size = props.size,\n      children = props.children,\n      other = (0, _objectWithoutProperties3['default'])(props, ['src', 'className', 'size', 'children']);\n  var avatarClasses = (0, _classnames2['default'])(className, ['PnnlAvatar-' + size], 'PnnlAvatar');\n\n  if (src) {\n    return _react2['default'].createElement(_Image2['default'], {\n      src: src,\n      className: avatarClasses,\n      alt: 'Avatar'\n    });\n  }\n\n  return _react2['default'].createElement('div', (0, _extends3['default'])({}, other, {\n    className: avatarClasses\n  }), _react2['default'].createElement('span', null, children));\n};\n\nAvatar.propTypes = {\n  /**\r\n   * Can be used, for instance, to render a letter inside the avatar.\r\n   */\n  children: _propTypes2['default'].node,\n\n  /**\r\n   * The css class name of the root `div` or `img` element. Can be one of our standard color names to set the background color, or \"text-*\" with a color to specify the icon/text color.\r\n   */\n  className: _propTypes2['default'].string,\n\n  /**\r\n   * This is the size of the avatar. Our breakpoints are consistent with Boostrap grid breakpoints. 'md' is the default, and is used for the Person component, 'lg' is used in the PnnlProfileCard, 'sm' is intended for use in typeahead results and other menus, and 'xs' for instances that are space constrained. These translate into a className, and the actual sizes are defined in pnnl-theme-core.\r\n   */\n  size: _propTypes2['default'].oneOf(['xs', 'sm', 'md', 'lg']),\n\n  /**\r\n   * If passed in, this component will render an img element. Otherwise, a div will be rendered.\r\n   */\n  src: _propTypes2['default'].string\n};\nAvatar.defaultProps = {\n  children: null,\n  className: null,\n  size: 'md',\n  src: null\n};\nexports['default'] = Avatar;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}