
import config from './config'; // eslint-disable-line

describe('Configuration file: ', () => {
  describe('checking for import errors', () => {
    it('should be in the components src directory', () => {
      expect(config).toBeTruthy();
    });
  });

  describe('import type', () => {
    it('should be an object', () => {
      expect(typeof config).toBe('object');
    });
  });

  describe('root configuration entries', () => {
    it('should have an entry for: defaultPersonImage that returns a string', () => {
      expect(typeof config.defaultPersonImage).toBe('string');
      expect(config.defaultPersonImage).toEqual('https://cdn.pnl.gov/images/defaults/person.png');
    });

    it('should have an entry for: defaultFacilityImage that returns a string', () => {
      expect(typeof config.defaultFacilityImage).toBe('string');
      expect(config.defaultFacilityImage).toEqual('https://cdn.pnl.gov/images/defaults/facility.png');
    });

    it('should have an entry for: defaultLocationImage that returns a string', () => {
      expect(typeof config.defaultLocationImage).toBe('string');
      expect(config.defaultLocationImage).toEqual('https://cdn.pnl.gov/images/defaults/space.png');
    });

    it('should have an entry for: scout that returns a string', () => {
      expect(typeof config.scout).toBe('string');
      expect(config.scout).toEqual('https://scout.pnl.gov/api');
    });

    it('should have an entry for: mitLocation(no parameter) that is a function that returns an empty string', () => {
      expect(typeof config.mitLocation).toBe('function');
      expect(config.mitLocation()).toEqual('');
    });

    it('should have an entry for: mitLocation(string) that is a function that returns a string', () => {
      expect(typeof config.mitLocation).toBe('function');
      expect(config.mitLocation('11451')).toEqual('https://mit2.pnl.gov/?v=map&locid=11451');
    });

    it('should have an entry for: mitLocation(integer) that is a function that returns a string', () => {
      expect(typeof config.mitLocation).toBe('function');
      expect(config.mitLocation(11451)).toEqual('https://mit2.pnl.gov/?v=map&locid=11451');
    });
  });

  describe('opwhse configuration entries', () => {
    it('should have an entry for: opwhse.self that returns a string', () => {
      expect(typeof config.opwhse.self).toBe('string');
      expect(config.opwhse.self).toEqual('https://api.pnl.gov/operations/v2/people/self');
    });

    it('should have an entry for: opwhse.selfImage that returns a string', () => {
      expect(typeof config.opwhse.selfImage).toBe('string');
      expect(config.opwhse.selfImage).toEqual('https://api.pnl.gov/operations/v2/portraits/self?type=image');
    });

    it('should have an entry for: opwhse.person(no parameter) that is a function that returns an empty string', () => {
      expect(typeof config.opwhse.person).toBe('function');
      expect(config.opwhse.person()).toEqual('');
    });

    it('should have an entry for: opwhse.person(string) that is a function that returns a string', () => {
      expect(typeof config.opwhse.person).toBe('function');
      expect(config.opwhse.person('8845258')).toEqual('https://api.pnl.gov/operations/v2/people/8845258/?expand=space,facility,department');
    });

    it('should have an entry for: opwhse.person(integer) that is a function that returns a string', () => {
      expect(typeof config.opwhse.person).toBe('function');
      expect(config.opwhse.person(8845258)).toEqual('https://api.pnl.gov/operations/v2/people/8845258/?expand=space,facility,department');
    });

    it('should have an entry for: opwhse.personImage(no parameter) that is a function that returns an empty string', () => {
      expect(typeof config.opwhse.personImage).toBe('function');
      expect(config.opwhse.personImage()).toEqual('');
    });

    it('should have an entry for: opwhse.personImage(string) that is a function that returns a string', () => {
      expect(typeof config.opwhse.personImage).toBe('function');
      expect(config.opwhse.personImage('8845258')).toEqual('https://api.pnl.gov/operations/v2/portraits/8845258?type=image');
    });

    it('should have an entry for: opwhse.personImage(integer) that is a function that returns a string', () => {
      expect(typeof config.opwhse.personImage).toBe('function');
      expect(config.opwhse.personImage(8845258)).toEqual('https://api.pnl.gov/operations/v2/portraits/8845258?type=image');
    });

    it('should have an entry for: opwhse.locationImage(no parameter) that is a function that returns an empty string', () => {
      expect(typeof config.opwhse.locationImage).toBe('function');
      expect(config.opwhse.locationImage()).toEqual('');
    });

    it('should have an entry for: opwhse.locationImage(string) that is a function that returns a string', () => {
      expect(typeof config.opwhse.locationImage).toBe('function');
      expect(config.opwhse.locationImage('11451')).toEqual('https://api.pnl.gov/operations/v2/locations/11451/image');
    });

    it('should have an entry for: opwhse.locationImage(integer) that is a function that returns a string', () => {
      expect(typeof config.opwhse.locationImage).toBe('function');
      expect(config.opwhse.locationImage(11451)).toEqual('https://api.pnl.gov/operations/v2/locations/11451/image');
    });
  });
});
