'use strict';

require('whatwg-fetch');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _react3 = require('@storybook/react');

var _reactBootstrap = require('react-bootstrap');

var _reactRouterDom = require('react-router-dom');

var _index = require('../index');

var C = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/* eslint import/no-extraneous-dependencies: ["error", {"devDependencies": true}] */
(0, _react3.storiesOf)('Header', module).add('with navigation', function () {
  var nav = _react2['default'].createElement(
    C.NavBar,
    null,
    _react2['default'].createElement(
      _reactBootstrap.Col,
      { sm: 2, componentClass: 'ul' },
      _react2['default'].createElement(C.NavItem, { to: 'tel:5095555555', text: 'Phone Home', icon: 'phone' })
    ),
    _react2['default'].createElement(
      _reactBootstrap.Col,
      { sm: 8, componentClass: 'ul' },
      _react2['default'].createElement(C.NavItem, { to: '/', icon: 'list', text: 'Dashboard', onlyActiveOnIndex: true }),
      _react2['default'].createElement(C.NavItem, { to: '/answers', icon: 'comment', text: 'Answers' }),
      _react2['default'].createElement(C.NavItem, { to: '/feedback', icon: 'thumbs-up', text: 'Feedback' }),
      _react2['default'].createElement(C.NavItem, { to: '/system-messages', icon: 'alert', text: 'System Messages' })
    ),
    _react2['default'].createElement(
      _reactBootstrap.Col,
      { sm: 2, componentClass: 'ul' },
      _react2['default'].createElement(C.NavItem, { to: 'mailto:somebody@pnnl.gov', icon: 'email', text: 'Email' })
    )
  );

  return _react2['default'].createElement(
    _reactRouterDom.BrowserRouter,
    null,
    _react2['default'].createElement(_reactRouterDom.Route, {
      path: '/',
      render: function render() {
        return _react2['default'].createElement(C.Header, {
          appTitle: 'PNNL React Core',
          hasSearch: false,
          primaryNav: nav
        });
      }
    })
  );
}).add('with custom className', function () {
  var nav = _react2['default'].createElement(
    C.NavBar,
    null,
    _react2['default'].createElement(
      _reactBootstrap.Col,
      { componentClass: 'ul', style: { textAlign: 'center' } },
      _react2['default'].createElement(C.NavItem, { to: '/', icon: 'list', text: 'Dashboard', onlyActiveOnIndex: true }),
      _react2['default'].createElement(C.NavItem, { to: '/answers', icon: 'comment', text: 'Answers' }),
      _react2['default'].createElement(C.NavItem, { to: '/feedback', icon: 'thumbs-up', text: 'Feedback' }),
      _react2['default'].createElement(C.NavItem, { to: '/system-messages', icon: 'alert', text: 'System Messages' })
    )
  );

  return _react2['default'].createElement(
    _reactRouterDom.BrowserRouter,
    null,
    _react2['default'].createElement(_reactRouterDom.Route, {
      path: '/',
      render: function render() {
        return _react2['default'].createElement(C.Header, {
          appTitle: 'PNNL React Core',
          hasSearch: false,
          primaryNav: nav,
          className: 'topaz'
        });
      }
    })
  );
}).add('with parent label', function () {
  var nav = _react2['default'].createElement(
    C.NavBar,
    null,
    _react2['default'].createElement(
      _reactBootstrap.Col,
      { componentClass: 'ul', style: { textAlign: 'center' } },
      _react2['default'].createElement(C.NavItem, { to: '/', icon: 'list', text: 'Dashboard', onlyActiveOnIndex: true }),
      _react2['default'].createElement(C.NavItem, { to: '/answers', icon: 'comment', text: 'Answers' }),
      _react2['default'].createElement(C.NavItem, { to: '/feedback', icon: 'thumbs-up', text: 'Feedback' }),
      _react2['default'].createElement(C.NavItem, { to: '/system-messages', icon: 'alert', text: 'System Messages' })
    )
  );

  return _react2['default'].createElement(
    _reactRouterDom.BrowserRouter,
    null,
    _react2['default'].createElement(_reactRouterDom.Route, {
      path: '/',
      render: function render() {
        return _react2['default'].createElement(C.Header, {
          appTitle: 'PNNL React Core',
          hasSearch: false,
          primaryNav: nav,
          parentSiteProps: {
            label: 'myPNNL /'
          }
        });
      }
    })
  );
}).add('with linked parent label', function () {
  var nav = _react2['default'].createElement(
    C.NavBar,
    null,
    _react2['default'].createElement(
      _reactBootstrap.Col,
      { componentClass: 'ul', style: { textAlign: 'center' } },
      _react2['default'].createElement(C.NavItem, { to: '/', icon: 'list', text: 'Dashboard', onlyActiveOnIndex: true }),
      _react2['default'].createElement(C.NavItem, { to: '/answers', icon: 'comment', text: 'Answers' }),
      _react2['default'].createElement(C.NavItem, { to: '/feedback', icon: 'thumbs-up', text: 'Feedback' }),
      _react2['default'].createElement(C.NavItem, { to: '/system-messages', icon: 'alert', text: 'System Messages' })
    )
  );

  return _react2['default'].createElement(
    _reactRouterDom.BrowserRouter,
    null,
    _react2['default'].createElement(_reactRouterDom.Route, {
      path: '/',
      render: function render() {
        return _react2['default'].createElement(C.Header, {
          appTitle: 'PNNL React Core',
          hasSearch: false,
          primaryNav: nav,
          parentSiteProps: {
            label: 'myPNNL /',
            linkHref: 'https://my.pnnl.gov'
          }
        });
      }
    })
  );
}).add('with linked parent label image', function () {
  var nav = _react2['default'].createElement(
    C.NavBar,
    null,
    _react2['default'].createElement(
      _reactBootstrap.Col,
      { componentClass: 'ul', style: { textAlign: 'center' } },
      _react2['default'].createElement(C.NavItem, { to: '/', icon: 'list', text: 'Dashboard', onlyActiveOnIndex: true }),
      _react2['default'].createElement(C.NavItem, { to: '/answers', icon: 'comment', text: 'Answers' }),
      _react2['default'].createElement(C.NavItem, { to: '/feedback', icon: 'thumbs-up', text: 'Feedback' }),
      _react2['default'].createElement(C.NavItem, { to: '/system-messages', icon: 'alert', text: 'System Messages' })
    )
  );

  return _react2['default'].createElement(
    _reactRouterDom.BrowserRouter,
    null,
    _react2['default'].createElement(_reactRouterDom.Route, {
      path: '/',
      render: function render() {
        return _react2['default'].createElement(C.Header, {
          appTitle: 'PNNL React Core',
          hasSearch: false,
          primaryNav: nav,
          className: 'platinum',
          parentSiteProps: {
            label: 'myPNNL /',
            linkHref: 'https://my.pnnl.gov',
            imageHref: 'https://my.pnnl.gov/themes/project/mypnnl_theme/images/myPNNL-logo.png'
          }
        });
      }
    })
  );
}).add('no nav', function () {
  return _react2['default'].createElement(
    _reactRouterDom.BrowserRouter,
    null,
    _react2['default'].createElement(_reactRouterDom.Route, {
      path: '/',
      render: function render() {
        return _react2['default'].createElement(C.Header, {
          appTitle: 'PNNL React Core',
          hasSearch: false
        });
      }
    })
  );
}); // eslint-disable-line