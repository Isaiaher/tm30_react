{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Desktop/ies_tm30_web_app/src/components/pages/Calculator/Calc.jsx\";\nimport React from 'react';\nimport Grid from 'react-bootstrap/es/Grid';\nimport Card from 'pnnl-react-core/lib/Card';\nimport Button from 'react-bootstrap/es/Button';\nimport Examples from './Examples';\nimport ProfilePopover from 'pnnl-react-core/lib/ProfilePopover';\n\nconst Calc = ({\n  me\n}) => React.createElement(Grid, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"IES TM30 Calculator\"), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(Card, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"A\"), React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"User:\", React.createElement(ProfilePopover, {\n  person: me,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Commercial:\", React.createElement(\"select\", {\n  id: \"Commercial\",\n  name: \"Commercial\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"option\", {\n  value: \"one\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"1\"), React.createElement(\"option\", {\n  value: \"two\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"2\"), React.createElement(\"option\", {\n  value: \"three\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"3\"))), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"Example:\", React.createElement(Examples, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n})), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(Button, {\n  bsSize: \"sm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"Calculate\"))), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(Card, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"B\"), React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, \"Import .spdx file\", React.createElement(\"input\", {\n  type: \"file\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})))), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), React.createElement(Card, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, \"C\"), React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \"Start Wavelength (nm):\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n})), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \"End Wavelength (nm):\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n})), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, \"Interval (nm):\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n})), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}), React.createElement(Button, {\n  bsSize: \"sm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, \"Calculate\"))));\n\nHome.propTypes = {\n  /**\r\n    * A Person object for the person you want to create the card for.\r\n    *\r\n    *\r\n    * The object needs to have the same naming convention as: https://api.pnl.gov/operations/v2/people/{hid}/?expand=space,facility\r\n    * */\n  me: PropTypes.shape({\n    id: PropTypes.string,\n    portraitLink: PropTypes.string,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    title: PropTypes.string\n  })\n};\nHome.defaultProps = {\n  me: {}\n};\n\nconst mapStateToProps = state => {\n  const me = state.me;\n  return {\n    me\n  };\n};\n\nexport default connect(mapStateToProps)(Calc);","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Desktop/ies_tm30_web_app/src/components/pages/Calculator/Calc.jsx"],"names":["React","Grid","Card","Button","Examples","ProfilePopover","Calc","me","Home","propTypes","PropTypes","shape","id","string","portraitLink","firstName","lastName","title","defaultProps","mapStateToProps","state","connect"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Grid from 'react-bootstrap/es/Grid';\r\nimport Card from 'pnnl-react-core/lib/Card';\r\nimport Button from 'react-bootstrap/es/Button';\r\nimport Examples from './Examples';\r\nimport ProfilePopover from 'pnnl-react-core/lib/ProfilePopover';\r\n\r\n\r\nconst Calc = ({ me }) => (\r\n  <Grid>\r\n    <h1>IES TM30 Calculator</h1>\r\n    <br />\r\n    <Card>\r\n      <h2>A</h2>\r\n      <form>\r\n        <label>\r\n          User:\r\n          <ProfilePopover person={me} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Commercial:\r\n          <select id=\"Commercial\" name=\"Commercial\">\r\n            <option value=\"one\">1</option>\r\n            <option value=\"two\">2</option>\r\n            <option value=\"three\">3</option>\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Example:\r\n        <Examples />\r\n        </label>\r\n        <br />\r\n        <Button bsSize=\"sm\">Calculate</Button>\r\n      </form>\r\n    </Card>\r\n    <br />\r\n    <Card>\r\n    <form>\r\n    <h2>B</h2>\r\n      <label>\r\n        Import .spdx file\r\n        <input type=\"file\" />\r\n      </label>\r\n      </form>\r\n    </Card>\r\n<br />\r\n    <Card>\r\n      <h2>C</h2>\r\n      <form>\r\n        <label>\r\n          Start Wavelength (nm): \r\n          <br />\r\n          <input></input>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          End Wavelength (nm): \r\n          <br />\r\n          <input></input>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Interval (nm): \r\n          <br />\r\n          <input></input>\r\n        </label>\r\n        <br />\r\n        <Button bsSize=\"sm\">Calculate</Button>\r\n      </form>\r\n      </Card>\r\n\r\n  </Grid>\r\n);\r\n\r\nHome.propTypes = {\r\n  /**\r\n    * A Person object for the person you want to create the card for.\r\n    *\r\n    *\r\n    * The object needs to have the same naming convention as: https://api.pnl.gov/operations/v2/people/{hid}/?expand=space,facility\r\n    * */\r\n  me: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    portraitLink: PropTypes.string,\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    title: PropTypes.string,\r\n  }),\r\n};\r\n\r\nHome.defaultProps = {\r\n  me: {},\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { me } = state;\r\n  return {\r\n    me,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Calc);\r\n\r\n"]},"metadata":{},"sourceType":"module"}