{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\"; //import bin_lines from \"./bin_lines\";\n\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n    this.xref = this.props.xref;\n    this.xref.push(this.xref[0]);\n    this.yref = this.props.yref;\n    this.yref.push(this.yref[0]);\n    this.rf = Math.round(this.props.rf);\n    this.rg = Math.round(this.props.rg);\n    this.cct = Math.round(this.props.cct);\n    this.duv = Math.round(this.props.duv * 10000) / 10000;\n    this.minus_20p_x = []; // -20% Ref Circle\n\n    this.minus_20p_y = [];\n    this.minus_10p_x = []; // -10% Ref Circle\n\n    this.minus_10p_y = [];\n    this.even_x = []; // 0% Ref Circle\n\n    this.even_y = [];\n    this.plus_10p_x = []; // +10% Ref Circle\n\n    this.plus_10p_y = [];\n    this.plus_20p_x = []; // +20% Ref Circle\n\n    this.plus_20p_y = [];\n    var theta;\n\n    for (theta = 1; theta <= 360; theta++) {\n      // -20% Ref Circle\n      this.minus_20p_x[theta] = 0.8 * Math.cos(theta * Math.PI / 180);\n      this.minus_20p_y[theta] = 0.8 * Math.sin(theta * Math.PI / 180); // -10% Ref Circle\n\n      this.minus_10p_x[theta] = 0.9 * Math.cos(theta * Math.PI / 180);\n      this.minus_10p_y[theta] = 0.9 * Math.sin(theta * Math.PI / 180); // 0% Ref Circle\n\n      this.even_x[theta] = Math.cos(theta * Math.PI / 180);\n      this.even_y[theta] = Math.sin(theta * Math.PI / 180); // +10% Ref Circle\n\n      this.plus_10p_x[theta] = 1.1 * Math.cos(theta * Math.PI / 180);\n      this.plus_10p_y[theta] = 1.1 * Math.sin(theta * Math.PI / 180); //+20% Ref Circle\n\n      this.plus_20p_x[theta] = 1.2 * Math.cos(theta * Math.PI / 180);\n      this.plus_20p_y[theta] = 1.2 * Math.sin(theta * Math.PI / 180);\n    }\n\n    this.bin_numbers = [];\n    theta = 11.5;\n\n    for (i = 1; i <= 16; i++) {\n      var x = 1.35 * Math.cos(theta * Math.PI / 180);\n      var y = 1.35 * Math.sin(theta * Math.PI / 180);\n      theta += 22.5;\n      this.bin_numbers[i - 1] = {\n        x: x,\n        y: y,\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\".concat(i),\n        font: {\n          size: 12,\n          color: \"grey\"\n        },\n        ax: 0,\n        ay: 0\n      };\n    }\n\n    this.bin_lines = [{\n      x: [-1.5, 1.5],\n      y: [0, 0],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false\n    }, {\n      x: [-1.39, 1.39],\n      y: [-0.57, 0.57],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false\n    }, {\n      x: [-1.06, 1.06],\n      y: [-1.06, 1.06],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false\n    }, {\n      x: [-0.57, 0.57],\n      y: [-1.39, 1.39],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false\n    }, {\n      x: [0, 0],\n      y: [-1.5, 1.5],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false\n    }, {\n      x: [0.57, -0.57],\n      y: [-1.39, 1.39],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false\n    }, {\n      x: [1.06, -1.06],\n      y: [-1.06, 1.06],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false\n    }, {\n      x: [1.39, -1.39],\n      y: [-0.57, 0.57],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false\n    }];\n    const colors = [\"#b45c60\", \"#cb7761\", \"#cb824b\", \"#d7ad67\", \"#ac9a5d\", \"#919E60\", \"#678B5F\", \"#62B08F\", \"#7CBABA\", \"#2C797D\", \"#54778C\", \"#7189B1\", \"#988CA9\", \"#735876\", \"#8F6682\", \"#B97B8E\"];\n    var i;\n    this.arrows = [];\n    var i_arrow;\n\n    for (i = 0; i < 16; i++) {\n      i_arrow = {\n        x: this.xtest[i],\n        y: this.ytest[i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.xref[i],\n        ay: this.yref[i],\n        arrowcolor: colors[i]\n      };\n      this.arrows.push(i_arrow);\n    }\n  }\n\n  render() {\n    return React.createElement(Plot, {\n      data: [...this.bin_lines, {\n        x: [0],\n        y: [0],\n        type: \"scatter\",\n        mode: \"markers+lines\",\n        marker: {\n          size: 22,\n          width: 50,\n          color: \"white\",\n          symbol: \"circle\",\n          opacity: 0.8\n        },\n        showlegend: false\n      }, {\n        x: [0],\n        y: [0],\n        type: \"scatter\",\n        mode: \"markers+lines\",\n        marker: {\n          size: 30,\n          width: 50,\n          color: \"white\",\n          symbol: \"circle\",\n          opacity: 0.7\n        },\n        showlegend: false\n      }, {\n        x: [0],\n        y: [0],\n        type: \"scatter\",\n        mode: \"markers\",\n        marker: {\n          size: 8,\n          width: 50,\n          color: \"grey\",\n          symbol: \"cross-thin-open\"\n        },\n        showlegend: false\n      }, {\n        name: \"-20%\",\n        x: this.minus_20p_x,\n        y: this.minus_20p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        },\n        showlegend: false\n      }, {\n        name: \"-10%\",\n        x: this.minus_10p_x,\n        y: this.minus_10p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        },\n        showlegend: false\n      }, {\n        name: \"0%\",\n        x: this.even_x,\n        y: this.even_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        },\n        showlegend: false\n      }, {\n        name: \"10%\",\n        x: this.plus_10p_x,\n        y: this.plus_10p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        },\n        showlegend: false\n      }, {\n        name: \"20%\",\n        x: this.plus_20p_x,\n        y: this.plus_20p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        },\n        showlegend: false\n      }, {\n        name: \"Test\",\n        x: this.xtest,\n        y: this.ytest,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"red\"\n        }\n      }, {\n        name: \"Reference\",\n        x: this.xref,\n        y: this.yref,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"black\"\n        }\n      }],\n      layout: {\n        autosize: true,\n        width: 700,\n        height: 600,\n        margin: {\n          t: 40,\n          l: 40,\n          b: 40\n        },\n        xaxis: {\n          visible: false,\n          range: [-1.5, 1.5],\n          title: {\n            text: \"\" //showticklabels: false\n\n          }\n        },\n        yaxis: {\n          visible: false,\n          range: [-1.5, 1.5],\n          title: {\n            text: \"\"\n          },\n          tickformat: \"\" //showticklabels: false\n\n        },\n        images: [{\n          source: \"http://localhost:8000/CVGbackground.png\",\n          //source: \"http://localhost:8000/CVG_bin_lines.png\",\n          xref: \"x\",\n          yref: \"y\",\n          x: -1.5,\n          y: 1.5,\n          sizex: 3,\n          sizey: 3,\n          sizing: \"stretch\",\n          layer: \"below\"\n        }],\n        annotations: [...this.arrows, {\n          x: -1.35,\n          y: 1.3,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.rf, \"</b><br /><i>R<sub>f</sub></i>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: 1.35,\n          y: 1.3,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.rg, \"</b><br /><i>R<sub>g</sub></i>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: 1.15,\n          y: -1.25,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<i>D<sub>uv</sub></i><br /><b>\".concat(this.duv, \"</b><br />\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: -1.25,\n          y: -1.25,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<i>CCT</i><br /><b>   \".concat(this.cct, \" K</b>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: -0.15,\n          y: -0.7,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"-20%\",\n          font: {\n            size: 11,\n            color: \"white\"\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: -0.25,\n          y: -1.11,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"+20%\",\n          font: {\n            size: 11,\n            color: \"white\"\n          },\n          ax: 0,\n          ay: 0\n        }, ...this.bin_numbers]\n      },\n      config: {\n        displayModeBar: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    });\n  }\n\n}\nexport default CVGPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx"],"names":["React","Component","Plot","CVGPlot","constructor","props","xtest","push","ytest","xref","yref","rf","Math","round","rg","cct","duv","minus_20p_x","minus_20p_y","minus_10p_x","minus_10p_y","even_x","even_y","plus_10p_x","plus_10p_y","plus_20p_x","plus_20p_y","theta","cos","PI","sin","bin_numbers","i","x","y","text","font","size","color","ax","ay","bin_lines","mode","name","line","dash","width","marker","showlegend","colors","arrows","i_arrow","showarrow","arrowhead","axref","ayref","arrowcolor","render","type","symbol","opacity","shape","smoothing","connectgaps","autosize","height","margin","t","l","b","xaxis","visible","range","title","yaxis","tickformat","images","source","sizex","sizey","sizing","layer","annotations","displayModeBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CACA;;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKD,KAAL,CAAWC,KAAxB;AACA,SAAKA,KAAL,CAAWC,IAAX,CAAgB,KAAKD,KAAL,CAAW,CAAX,CAAhB;AACA,SAAKE,KAAL,GAAa,KAAKH,KAAL,CAAWG,KAAxB;AACA,SAAKA,KAAL,CAAWD,IAAX,CAAgB,KAAKC,KAAL,CAAW,CAAX,CAAhB;AAEA,SAAKC,IAAL,GAAY,KAAKJ,KAAL,CAAWI,IAAvB;AACA,SAAKA,IAAL,CAAUF,IAAV,CAAe,KAAKE,IAAL,CAAU,CAAV,CAAf;AACA,SAAKC,IAAL,GAAY,KAAKL,KAAL,CAAWK,IAAvB;AACA,SAAKA,IAAL,CAAUH,IAAV,CAAe,KAAKG,IAAL,CAAU,CAAV,CAAf;AAEA,SAAKC,EAAL,GAAUC,IAAI,CAACC,KAAL,CAAW,KAAKR,KAAL,CAAWM,EAAtB,CAAV;AACA,SAAKG,EAAL,GAAUF,IAAI,CAACC,KAAL,CAAW,KAAKR,KAAL,CAAWS,EAAtB,CAAV;AACA,SAAKC,GAAL,GAAWH,IAAI,CAACC,KAAL,CAAW,KAAKR,KAAL,CAAWU,GAAtB,CAAX;AACA,SAAKC,GAAL,GAAWJ,IAAI,CAACC,KAAL,CAAW,KAAKR,KAAL,CAAWW,GAAX,GAAiB,KAA5B,IAAqC,KAAhD;AAEA,SAAKC,WAAL,GAAmB,EAAnB,CAjBiB,CAiBM;;AACvB,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,WAAL,GAAmB,EAAnB,CAnBiB,CAmBM;;AACvB,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,MAAL,GAAc,EAAd,CArBiB,CAqBC;;AAClB,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,UAAL,GAAkB,EAAlB,CAvBiB,CAuBK;;AACtB,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,UAAL,GAAkB,EAAlB,CAzBiB,CAyBK;;AACtB,SAAKC,UAAL,GAAkB,EAAlB;AACA,QAAIC,KAAJ;;AACA,SAAKA,KAAK,GAAG,CAAb,EAAgBA,KAAK,IAAI,GAAzB,EAA8BA,KAAK,EAAnC,EAAuC;AACrC;AACA,WAAKV,WAAL,CAAiBU,KAAjB,IAA0B,MAAMf,IAAI,CAACgB,GAAL,CAAUD,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAAhC;AACA,WAAKX,WAAL,CAAiBS,KAAjB,IAA0B,MAAMf,IAAI,CAACkB,GAAL,CAAUH,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAAhC,CAHqC,CAKrC;;AACA,WAAKV,WAAL,CAAiBQ,KAAjB,IAA0B,MAAMf,IAAI,CAACgB,GAAL,CAAUD,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAAhC;AACA,WAAKT,WAAL,CAAiBO,KAAjB,IAA0B,MAAMf,IAAI,CAACkB,GAAL,CAAUH,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAAhC,CAPqC,CASrC;;AACA,WAAKR,MAAL,CAAYM,KAAZ,IAAqBf,IAAI,CAACgB,GAAL,CAAUD,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAArB;AACA,WAAKP,MAAL,CAAYK,KAAZ,IAAqBf,IAAI,CAACkB,GAAL,CAAUH,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAArB,CAXqC,CAarC;;AACA,WAAKN,UAAL,CAAgBI,KAAhB,IAAyB,MAAMf,IAAI,CAACgB,GAAL,CAAUD,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAA/B;AACA,WAAKL,UAAL,CAAgBG,KAAhB,IAAyB,MAAMf,IAAI,CAACkB,GAAL,CAAUH,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAA/B,CAfqC,CAiBrC;;AACA,WAAKJ,UAAL,CAAgBE,KAAhB,IAAyB,MAAMf,IAAI,CAACgB,GAAL,CAAUD,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAA/B;AACA,WAAKH,UAAL,CAAgBC,KAAhB,IAAyB,MAAMf,IAAI,CAACkB,GAAL,CAAUH,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAA/B;AACD;;AAED,SAAKE,WAAL,GAAmB,EAAnB;AACAJ,IAAAA,KAAK,GAAG,IAAR;;AACA,SAAKK,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,EAAjB,EAAqBA,CAAC,EAAtB,EAA0B;AACxB,UAAIC,CAAC,GAAG,OAAOrB,IAAI,CAACgB,GAAL,CAAUD,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAAf;AACA,UAAIK,CAAC,GAAG,OAAOtB,IAAI,CAACkB,GAAL,CAAUH,KAAK,GAAGf,IAAI,CAACiB,EAAd,GAAoB,GAA7B,CAAf;AACAF,MAAAA,KAAK,IAAI,IAAT;AACA,WAAKI,WAAL,CAAiBC,CAAC,GAAG,CAArB,IAA0B;AACxBC,QAAAA,CAAC,EAAEA,CADqB;AAExBC,QAAAA,CAAC,EAAEA,CAFqB;AAGxBzB,QAAAA,IAAI,EAAE,GAHkB;AAIxBC,QAAAA,IAAI,EAAE,GAJkB;AAKxByB,QAAAA,IAAI,YAAKH,CAAL,CALoB;AAMxBI,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE,EADF;AAEJC,UAAAA,KAAK,EAAE;AAFH,SANkB;AAUxBC,QAAAA,EAAE,EAAE,CAVoB;AAWxBC,QAAAA,EAAE,EAAE;AAXoB,OAA1B;AAaD;;AAED,SAAKC,SAAL,GAAiB,CACf;AACER,MAAAA,CAAC,EAAE,CAAC,CAAC,GAAF,EAAO,GAAP,CADL;AAEEC,MAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFL;AAGEQ,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE,OAJR;AAKEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,KAAK,EAAE;AAFH,OALR;AASEC,MAAAA,MAAM,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OATV;AAUEU,MAAAA,UAAU,EAAE;AAVd,KADe,EAaf;AACEf,MAAAA,CAAC,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CADL;AAEEC,MAAAA,CAAC,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CAFL;AAGEQ,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE,OAJR;AAKEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,KAAK,EAAE;AAFH,OALR;AASEC,MAAAA,MAAM,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OATV;AAUEU,MAAAA,UAAU,EAAE;AAVd,KAbe,EAyBf;AACEf,MAAAA,CAAC,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CADL;AAEEC,MAAAA,CAAC,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CAFL;AAGEQ,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE,OAJR;AAKEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,KAAK,EAAE;AAFH,OALR;AASEC,MAAAA,MAAM,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OATV;AAUEU,MAAAA,UAAU,EAAE;AAVd,KAzBe,EAqCf;AACEf,MAAAA,CAAC,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CADL;AAEEC,MAAAA,CAAC,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CAFL;AAGEQ,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE,OAJR;AAKEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,KAAK,EAAE;AAFH,OALR;AASEC,MAAAA,MAAM,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OATV;AAUEU,MAAAA,UAAU,EAAE;AAVd,KArCe,EAiDf;AACEf,MAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CADL;AAEEC,MAAAA,CAAC,EAAE,CAAC,CAAC,GAAF,EAAO,GAAP,CAFL;AAGEQ,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE,OAJR;AAKEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,KAAK,EAAE;AAFH,OALR;AASEC,MAAAA,MAAM,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OATV;AAUEU,MAAAA,UAAU,EAAE;AAVd,KAjDe,EA6Df;AACEf,MAAAA,CAAC,EAAE,CAAC,IAAD,EAAO,CAAC,IAAR,CADL;AAEEC,MAAAA,CAAC,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CAFL;AAGEQ,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE,OAJR;AAKEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,KAAK,EAAE;AAFH,OALR;AASEC,MAAAA,MAAM,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OATV;AAUEU,MAAAA,UAAU,EAAE;AAVd,KA7De,EAyEf;AACEf,MAAAA,CAAC,EAAE,CAAC,IAAD,EAAO,CAAC,IAAR,CADL;AAEEC,MAAAA,CAAC,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CAFL;AAGEQ,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE,OAJR;AAKEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,KAAK,EAAE;AAFH,OALR;AASEC,MAAAA,MAAM,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OATV;AAUEU,MAAAA,UAAU,EAAE;AAVd,KAzEe,EAqFf;AACEf,MAAAA,CAAC,EAAE,CAAC,IAAD,EAAO,CAAC,IAAR,CADL;AAEEC,MAAAA,CAAC,EAAE,CAAC,CAAC,IAAF,EAAQ,IAAR,CAFL;AAGEQ,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE,OAJR;AAKEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,KAAK,EAAE;AAFH,OALR;AASEC,MAAAA,MAAM,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OATV;AAUEU,MAAAA,UAAU,EAAE;AAVd,KArFe,CAAjB;AAmGA,UAAMC,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,EAQb,SARa,EASb,SATa,EAUb,SAVa,EAWb,SAXa,EAYb,SAZa,EAab,SAba,EAcb,SAda,EAeb,SAfa,EAgBb,SAhBa,CAAf;AAmBA,QAAIjB,CAAJ;AACA,SAAKkB,MAAL,GAAc,EAAd;AACA,QAAIC,OAAJ;;AACA,SAAKnB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvBmB,MAAAA,OAAO,GAAG;AACRlB,QAAAA,CAAC,EAAE,KAAK3B,KAAL,CAAW0B,CAAX,CADK;AAERE,QAAAA,CAAC,EAAE,KAAK1B,KAAL,CAAWwB,CAAX,CAFK;AAGRvB,QAAAA,IAAI,EAAE,GAHE;AAIRC,QAAAA,IAAI,EAAE,GAJE;AAKRyB,QAAAA,IAAI,EAAE,EALE;AAMRiB,QAAAA,SAAS,EAAE,IANH;AAORC,QAAAA,SAAS,EAAE,CAPH;AAQRC,QAAAA,KAAK,EAAE,GARC;AASRC,QAAAA,KAAK,EAAE,GATC;AAURhB,QAAAA,EAAE,EAAE,KAAK9B,IAAL,CAAUuB,CAAV,CAVI;AAWRQ,QAAAA,EAAE,EAAE,KAAK9B,IAAL,CAAUsB,CAAV,CAXI;AAYRwB,QAAAA,UAAU,EAAEP,MAAM,CAACjB,CAAD;AAZV,OAAV;AAcA,WAAKkB,MAAL,CAAY3C,IAAZ,CAAiB4C,OAAjB;AACD;AACF;;AACDM,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,CACJ,GAAG,KAAKhB,SADJ,EAEJ;AACER,QAAAA,CAAC,EAAE,CAAC,CAAD,CADL;AAEEC,QAAAA,CAAC,EAAE,CAAC,CAAD,CAFL;AAGEwB,QAAAA,IAAI,EAAE,SAHR;AAIEhB,QAAAA,IAAI,EAAE,eAJR;AAKEK,QAAAA,MAAM,EAAE;AACNV,UAAAA,IAAI,EAAE,EADA;AAENS,UAAAA,KAAK,EAAE,EAFD;AAGNR,UAAAA,KAAK,EAAE,OAHD;AAINqB,UAAAA,MAAM,EAAE,QAJF;AAKNC,UAAAA,OAAO,EAAE;AALH,SALV;AAYEZ,QAAAA,UAAU,EAAE;AAZd,OAFI,EAgBJ;AACEf,QAAAA,CAAC,EAAE,CAAC,CAAD,CADL;AAEEC,QAAAA,CAAC,EAAE,CAAC,CAAD,CAFL;AAGEwB,QAAAA,IAAI,EAAE,SAHR;AAIEhB,QAAAA,IAAI,EAAE,eAJR;AAKEK,QAAAA,MAAM,EAAE;AACNV,UAAAA,IAAI,EAAE,EADA;AAENS,UAAAA,KAAK,EAAE,EAFD;AAGNR,UAAAA,KAAK,EAAE,OAHD;AAINqB,UAAAA,MAAM,EAAE,QAJF;AAKNC,UAAAA,OAAO,EAAE;AALH,SALV;AAYEZ,QAAAA,UAAU,EAAE;AAZd,OAhBI,EA8BJ;AACEf,QAAAA,CAAC,EAAE,CAAC,CAAD,CADL;AAEEC,QAAAA,CAAC,EAAE,CAAC,CAAD,CAFL;AAGEwB,QAAAA,IAAI,EAAE,SAHR;AAIEhB,QAAAA,IAAI,EAAE,SAJR;AAKEK,QAAAA,MAAM,EAAE;AACNV,UAAAA,IAAI,EAAE,CADA;AAENS,UAAAA,KAAK,EAAE,EAFD;AAGNR,UAAAA,KAAK,EAAE,MAHD;AAINqB,UAAAA,MAAM,EAAE;AAJF,SALV;AAWEX,QAAAA,UAAU,EAAE;AAXd,OA9BI,EA2CJ;AACEL,QAAAA,IAAI,EAAE,MADR;AAEEV,QAAAA,CAAC,EAAE,KAAKhB,WAFV;AAGEiB,QAAAA,CAAC,EAAE,KAAKhB,WAHV;AAIEwC,QAAAA,IAAI,EAAE,SAJR;AAKEd,QAAAA,IAAI,EAAE;AAAEiB,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEpB,QAAAA,IAAI,EAAE,cANR;AAOEqB,QAAAA,WAAW,EAAE,IAPf;AAQEhB,QAAAA,MAAM,EAAE;AAAET,UAAAA,KAAK,EAAE;AAAT,SARV;AASEU,QAAAA,UAAU,EAAE;AATd,OA3CI,EAsDJ;AACEL,QAAAA,IAAI,EAAE,MADR;AAEEV,QAAAA,CAAC,EAAE,KAAKd,WAFV;AAGEe,QAAAA,CAAC,EAAE,KAAKd,WAHV;AAIEsC,QAAAA,IAAI,EAAE,SAJR;AAKEd,QAAAA,IAAI,EAAE;AAAEiB,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEpB,QAAAA,IAAI,EAAE,cANR;AAOEqB,QAAAA,WAAW,EAAE,IAPf;AAQEhB,QAAAA,MAAM,EAAE;AAAET,UAAAA,KAAK,EAAE;AAAT,SARV;AASEU,QAAAA,UAAU,EAAE;AATd,OAtDI,EAiEJ;AACEL,QAAAA,IAAI,EAAE,IADR;AAEEV,QAAAA,CAAC,EAAE,KAAKZ,MAFV;AAGEa,QAAAA,CAAC,EAAE,KAAKZ,MAHV;AAIEoC,QAAAA,IAAI,EAAE,SAJR;AAKEd,QAAAA,IAAI,EAAE;AAAEiB,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEpB,QAAAA,IAAI,EAAE,cANR;AAOEqB,QAAAA,WAAW,EAAE,IAPf;AAQEhB,QAAAA,MAAM,EAAE;AAAET,UAAAA,KAAK,EAAE;AAAT,SARV;AASEU,QAAAA,UAAU,EAAE;AATd,OAjEI,EA4EJ;AACEL,QAAAA,IAAI,EAAE,KADR;AAEEV,QAAAA,CAAC,EAAE,KAAKV,UAFV;AAGEW,QAAAA,CAAC,EAAE,KAAKV,UAHV;AAIEkC,QAAAA,IAAI,EAAE,SAJR;AAKEd,QAAAA,IAAI,EAAE;AAAEiB,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEpB,QAAAA,IAAI,EAAE,cANR;AAOEqB,QAAAA,WAAW,EAAE,IAPf;AAQEhB,QAAAA,MAAM,EAAE;AAAET,UAAAA,KAAK,EAAE;AAAT,SARV;AASEU,QAAAA,UAAU,EAAE;AATd,OA5EI,EAuFJ;AACEL,QAAAA,IAAI,EAAE,KADR;AAEEV,QAAAA,CAAC,EAAE,KAAKR,UAFV;AAGES,QAAAA,CAAC,EAAE,KAAKR,UAHV;AAIEgC,QAAAA,IAAI,EAAE,SAJR;AAKEd,QAAAA,IAAI,EAAE;AAAEiB,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEpB,QAAAA,IAAI,EAAE,cANR;AAOEqB,QAAAA,WAAW,EAAE,IAPf;AAQEhB,QAAAA,MAAM,EAAE;AAAET,UAAAA,KAAK,EAAE;AAAT,SARV;AASEU,QAAAA,UAAU,EAAE;AATd,OAvFI,EAkGJ;AACEL,QAAAA,IAAI,EAAE,MADR;AAEEV,QAAAA,CAAC,EAAE,KAAK3B,KAFV;AAGE4B,QAAAA,CAAC,EAAE,KAAK1B,KAHV;AAIEkD,QAAAA,IAAI,EAAE,SAJR;AAKEd,QAAAA,IAAI,EAAE;AAAEiB,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEpB,QAAAA,IAAI,EAAE,cANR;AAOEqB,QAAAA,WAAW,EAAE,IAPf;AAQEhB,QAAAA,MAAM,EAAE;AAAET,UAAAA,KAAK,EAAE;AAAT;AARV,OAlGI,EA4GJ;AACEK,QAAAA,IAAI,EAAE,WADR;AAEEV,QAAAA,CAAC,EAAE,KAAKxB,IAFV;AAGEyB,QAAAA,CAAC,EAAE,KAAKxB,IAHV;AAIEgD,QAAAA,IAAI,EAAE,SAJR;AAKEd,QAAAA,IAAI,EAAE;AAAEiB,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEpB,QAAAA,IAAI,EAAE,cANR;AAOEqB,QAAAA,WAAW,EAAE,IAPf;AAQEhB,QAAAA,MAAM,EAAE;AAAET,UAAAA,KAAK,EAAE;AAAT;AARV,OA5GI,CADR;AAwHE,MAAA,MAAM,EAAE;AACN0B,QAAAA,QAAQ,EAAE,IADJ;AAENlB,QAAAA,KAAK,EAAE,GAFD;AAGNmB,QAAAA,MAAM,EAAE,GAHF;AAKNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE,EADG;AAENC,UAAAA,CAAC,EAAE,EAFG;AAGNC,UAAAA,CAAC,EAAE;AAHG,SALF;AAWNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,KADJ;AAELC,UAAAA,KAAK,EAAE,CAAC,CAAC,GAAF,EAAO,GAAP,CAFF;AAGLC,UAAAA,KAAK,EAAE;AACLtC,YAAAA,IAAI,EAAE,EADD,CAGP;;AAHO;AAHF,SAXD;AAmBNuC,QAAAA,KAAK,EAAE;AACLH,UAAAA,OAAO,EAAE,KADJ;AAELC,UAAAA,KAAK,EAAE,CAAC,CAAC,GAAF,EAAO,GAAP,CAFF;AAGLC,UAAAA,KAAK,EAAE;AACLtC,YAAAA,IAAI,EAAE;AADD,WAHF;AAMLwC,UAAAA,UAAU,EAAE,EANP,CAOL;;AAPK,SAnBD;AA4BNC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,MAAM,EAAE,yCADV;AAEE;AACApE,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEuB,UAAAA,CAAC,EAAE,CAAC,GALN;AAMEC,UAAAA,CAAC,EAAE,GANL;AAOE4C,UAAAA,KAAK,EAAE,CAPT;AAQEC,UAAAA,KAAK,EAAE,CART;AASEC,UAAAA,MAAM,EAAE,SATV;AAUEC,UAAAA,KAAK,EAAE;AAVT,SADM,CA5BF;AA0CNC,QAAAA,WAAW,EAAE,CACX,GAAG,KAAKhC,MADG,EAEX;AACEjB,UAAAA,CAAC,EAAE,CAAC,IADN;AAEEC,UAAAA,CAAC,EAAE,GAFL;AAGEzB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEyB,UAAAA,IAAI,eAAQ,KAAKxB,EAAb,mCALN;AAMEyB,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJC,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEC,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SAFW,EAeX;AACEP,UAAAA,CAAC,EAAE,IADL;AAEEC,UAAAA,CAAC,EAAE,GAFL;AAGEzB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEyB,UAAAA,IAAI,eAAQ,KAAKrB,EAAb,mCALN;AAMEsB,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJC,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEC,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SAfW,EA4BX;AACEP,UAAAA,CAAC,EAAE,IADL;AAEEC,UAAAA,CAAC,EAAE,CAAC,IAFN;AAGEzB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEyB,UAAAA,IAAI,0CAAmC,KAAKnB,GAAxC,eALN;AAMEoB,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJC,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEC,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SA5BW,EAyCX;AACEP,UAAAA,CAAC,EAAE,CAAC,IADN;AAEEC,UAAAA,CAAC,EAAE,CAAC,IAFN;AAGEzB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEyB,UAAAA,IAAI,kCAA2B,KAAKpB,GAAhC,WALN;AAMEqB,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJC,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEC,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SAzCW,EAsDX;AACEP,UAAAA,CAAC,EAAE,CAAC,IADN;AAEEC,UAAAA,CAAC,EAAE,CAAC,GAFN;AAGEzB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEyB,UAAAA,IAAI,QALN;AAMEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJC,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEC,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SAtDW,EAmEX;AACEP,UAAAA,CAAC,EAAE,CAAC,IADN;AAEEC,UAAAA,CAAC,EAAE,CAAC,IAFN;AAGEzB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEyB,UAAAA,IAAI,QALN;AAMEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJC,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEC,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SAnEW,EAgFX,GAAG,KAAKT,WAhFG;AA1CP,OAxHV;AAqPE,MAAA,MAAM,EAAE;AAAEoD,QAAAA,cAAc,EAAE;AAAlB,OArPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAyPD;;AA7coC;AAgdvC,eAAehF,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n//import bin_lines from \"./bin_lines\";\n\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n\n    this.xref = this.props.xref;\n    this.xref.push(this.xref[0]);\n    this.yref = this.props.yref;\n    this.yref.push(this.yref[0]);\n\n    this.rf = Math.round(this.props.rf);\n    this.rg = Math.round(this.props.rg);\n    this.cct = Math.round(this.props.cct);\n    this.duv = Math.round(this.props.duv * 10000) / 10000;\n\n    this.minus_20p_x = []; // -20% Ref Circle\n    this.minus_20p_y = [];\n    this.minus_10p_x = []; // -10% Ref Circle\n    this.minus_10p_y = [];\n    this.even_x = []; // 0% Ref Circle\n    this.even_y = [];\n    this.plus_10p_x = []; // +10% Ref Circle\n    this.plus_10p_y = [];\n    this.plus_20p_x = []; // +20% Ref Circle\n    this.plus_20p_y = [];\n    var theta;\n    for (theta = 1; theta <= 360; theta++) {\n      // -20% Ref Circle\n      this.minus_20p_x[theta] = 0.8 * Math.cos((theta * Math.PI) / 180);\n      this.minus_20p_y[theta] = 0.8 * Math.sin((theta * Math.PI) / 180);\n\n      // -10% Ref Circle\n      this.minus_10p_x[theta] = 0.9 * Math.cos((theta * Math.PI) / 180);\n      this.minus_10p_y[theta] = 0.9 * Math.sin((theta * Math.PI) / 180);\n\n      // 0% Ref Circle\n      this.even_x[theta] = Math.cos((theta * Math.PI) / 180);\n      this.even_y[theta] = Math.sin((theta * Math.PI) / 180);\n\n      // +10% Ref Circle\n      this.plus_10p_x[theta] = 1.1 * Math.cos((theta * Math.PI) / 180);\n      this.plus_10p_y[theta] = 1.1 * Math.sin((theta * Math.PI) / 180);\n\n      //+20% Ref Circle\n      this.plus_20p_x[theta] = 1.2 * Math.cos((theta * Math.PI) / 180);\n      this.plus_20p_y[theta] = 1.2 * Math.sin((theta * Math.PI) / 180);\n    }\n\n    this.bin_numbers = [];\n    theta = 11.5;\n    for (i = 1; i <= 16; i++) {\n      var x = 1.35 * Math.cos((theta * Math.PI) / 180);\n      var y = 1.35 * Math.sin((theta * Math.PI) / 180);\n      theta += 22.5;\n      this.bin_numbers[i - 1] = {\n        x: x,\n        y: y,\n        xref: \"x\",\n        yref: \"y\",\n        text: `${i}`,\n        font: {\n          size: 12,\n          color: \"grey\"\n        },\n        ax: 0,\n        ay: 0\n      };\n    }\n\n    this.bin_lines = [\n      {\n        x: [-1.5, 1.5],\n        y: [0, 0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false\n      },\n      {\n        x: [-1.39, 1.39],\n        y: [-0.57, 0.57],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false\n      },\n      {\n        x: [-1.06, 1.06],\n        y: [-1.06, 1.06],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false\n      },\n      {\n        x: [-0.57, 0.57],\n        y: [-1.39, 1.39],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false\n      },\n      {\n        x: [0, 0],\n        y: [-1.5, 1.5],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false\n      },\n      {\n        x: [0.57, -0.57],\n        y: [-1.39, 1.39],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false\n      },\n      {\n        x: [1.06, -1.06],\n        y: [-1.06, 1.06],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false\n      },\n      {\n        x: [1.39, -1.39],\n        y: [-0.57, 0.57],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false\n      }\n    ];\n\n    const colors = [\n      \"#b45c60\",\n      \"#cb7761\",\n      \"#cb824b\",\n      \"#d7ad67\",\n      \"#ac9a5d\",\n      \"#919E60\",\n      \"#678B5F\",\n      \"#62B08F\",\n      \"#7CBABA\",\n      \"#2C797D\",\n      \"#54778C\",\n      \"#7189B1\",\n      \"#988CA9\",\n      \"#735876\",\n      \"#8F6682\",\n      \"#B97B8E\"\n    ];\n\n    var i;\n    this.arrows = [];\n    var i_arrow;\n    for (i = 0; i < 16; i++) {\n      i_arrow = {\n        x: this.xtest[i],\n        y: this.ytest[i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.xref[i],\n        ay: this.yref[i],\n        arrowcolor: colors[i]\n      };\n      this.arrows.push(i_arrow);\n    }\n  }\n  render() {\n    return (\n      <Plot\n        data={[\n          ...this.bin_lines,\n          {\n            x: [0],\n            y: [0],\n            type: \"scatter\",\n            mode: \"markers+lines\",\n            marker: {\n              size: 22,\n              width: 50,\n              color: \"white\",\n              symbol: \"circle\",\n              opacity: 0.8\n            },\n            showlegend: false\n          },\n          {\n            x: [0],\n            y: [0],\n            type: \"scatter\",\n            mode: \"markers+lines\",\n            marker: {\n              size: 30,\n              width: 50,\n              color: \"white\",\n              symbol: \"circle\",\n              opacity: 0.7\n            },\n            showlegend: false\n          },\n          {\n            x: [0],\n            y: [0],\n            type: \"scatter\",\n            mode: \"markers\",\n            marker: {\n              size: 8,\n              width: 50,\n              color: \"grey\",\n              symbol: \"cross-thin-open\"\n            },\n            showlegend: false\n          },\n          {\n            name: \"-20%\",\n            x: this.minus_20p_x,\n            y: this.minus_20p_y,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"white\" },\n            showlegend: false\n          },\n          {\n            name: \"-10%\",\n            x: this.minus_10p_x,\n            y: this.minus_10p_y,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"white\" },\n            showlegend: false\n          },\n          {\n            name: \"0%\",\n            x: this.even_x,\n            y: this.even_y,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"white\" },\n            showlegend: false\n          },\n          {\n            name: \"10%\",\n            x: this.plus_10p_x,\n            y: this.plus_10p_y,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"white\" },\n            showlegend: false\n          },\n          {\n            name: \"20%\",\n            x: this.plus_20p_x,\n            y: this.plus_20p_y,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"white\" },\n            showlegend: false\n          },\n          {\n            name: \"Test\",\n            x: this.xtest,\n            y: this.ytest,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"red\" }\n          },\n          {\n            name: \"Reference\",\n            x: this.xref,\n            y: this.yref,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"black\" }\n          }\n        ]}\n        layout={{\n          autosize: true,\n          width: 700,\n          height: 600,\n\n          margin: {\n            t: 40,\n            l: 40,\n            b: 40\n          },\n\n          xaxis: {\n            visible: false,\n            range: [-1.5, 1.5],\n            title: {\n              text: \"\"\n            }\n            //showticklabels: false\n          },\n          yaxis: {\n            visible: false,\n            range: [-1.5, 1.5],\n            title: {\n              text: \"\"\n            },\n            tickformat: \"\"\n            //showticklabels: false\n          },\n          images: [\n            {\n              source: \"http://localhost:8000/CVGbackground.png\",\n              //source: \"http://localhost:8000/CVG_bin_lines.png\",\n              xref: \"x\",\n              yref: \"y\",\n              x: -1.5,\n              y: 1.5,\n              sizex: 3,\n              sizey: 3,\n              sizing: \"stretch\",\n              layer: \"below\"\n            }\n          ],\n          annotations: [\n            ...this.arrows,\n            {\n              x: -1.35,\n              y: 1.3,\n              xref: \"x\",\n              yref: \"y\",\n              text: `<b>${this.rf}</b><br /><i>R<sub>f</sub></i>`,\n              font: {\n                size: 20,\n                color: \"black\"\n              },\n              ax: 0,\n              ay: 0\n            },\n            {\n              x: 1.35,\n              y: 1.3,\n              xref: \"x\",\n              yref: \"y\",\n              text: `<b>${this.rg}</b><br /><i>R<sub>g</sub></i>`,\n              font: {\n                size: 20,\n                color: \"black\"\n              },\n              ax: 0,\n              ay: 0\n            },\n            {\n              x: 1.15,\n              y: -1.25,\n              xref: \"x\",\n              yref: \"y\",\n              text: `<i>D<sub>uv</sub></i><br /><b>${this.duv}</b><br />`,\n              font: {\n                size: 20,\n                color: \"black\"\n              },\n              ax: 0,\n              ay: 0\n            },\n            {\n              x: -1.25,\n              y: -1.25,\n              xref: \"x\",\n              yref: \"y\",\n              text: `<i>CCT</i><br /><b>   ${this.cct} K</b>`,\n              font: {\n                size: 20,\n                color: \"black\"\n              },\n              ax: 0,\n              ay: 0\n            },\n            {\n              x: -0.15,\n              y: -0.7,\n              xref: \"x\",\n              yref: \"y\",\n              text: `-20%`,\n              font: {\n                size: 11,\n                color: \"white\"\n              },\n              ax: 0,\n              ay: 0\n            },\n            {\n              x: -0.25,\n              y: -1.11,\n              xref: \"x\",\n              yref: \"y\",\n              text: `+20%`,\n              font: {\n                size: 11,\n                color: \"white\"\n              },\n              ax: 0,\n              ay: 0\n            },\n            ...this.bin_numbers\n          ]\n        }}\n        config={{ displayModeBar: false }}\n      />\n    );\n  }\n}\n\nexport default CVGPlot;\n"]},"metadata":{},"sourceType":"module"}