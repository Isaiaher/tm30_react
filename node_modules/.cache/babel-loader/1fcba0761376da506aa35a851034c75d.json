{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Avatar = require('../Avatar');\n\nvar _Avatar2 = _interopRequireDefault(_Avatar);\n\nvar _AvatarInfo = require('../AvatarInfo');\n\nvar _AvatarInfo2 = _interopRequireDefault(_AvatarInfo);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n/*\n* Leaving this as a \"smart\" component so calling components (eg. ProfilePopover)\n* can specify a ref callback function. The ref callback works differently when\n* using dumb/functional components.\n*/\n\n\nvar Person = function (_React$Component) {\n  (0, _inherits3['default'])(Person, _React$Component);\n\n  function Person() {\n    (0, _classCallCheck3['default'])(this, Person);\n    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));\n  }\n\n  Person.prototype.render = function render() {\n    var _props = this.props,\n        person = _props.person,\n        onClickCallback = _props.onClickCallback,\n        altName = _props.altName,\n        altTitle = _props.altTitle,\n        isSwapped = _props.isSwapped,\n        isCondensed = _props.isCondensed,\n        size = _props.size;\n    var align = this.props.align;\n    var compactClass = isCondensed ? 'condensed' : '';\n\n    var _className = (0, _classnames2['default'])('PnnlPerson', 'pnnl-profile-trigger', compactClass);\n\n    var fullName = person.firstName + ' ' + person.lastName;\n    var avatarText = person.firstName.slice(0, 1);\n    avatarText = avatarText.concat(person.lastName.slice(0, 1));\n\n    if (person) {\n      var avatarComponent = person.portraitLink !== undefined ? _react2['default'].createElement(_Avatar2['default'], {\n        src: person.portraitLink,\n        size: size\n      }) : _react2['default'].createElement(_Avatar2['default'], {\n        size: size\n      }, avatarText);\n      var title = fullName;\n\n      if (typeof altName === 'string' || _react2['default'].isValidElement(altName)) {\n        title = altName;\n      }\n\n      var subTitle = person.title;\n\n      if (typeof altTitle === 'string' || _react2['default'].isValidElement(altTitle)) {\n        subTitle = altTitle;\n      }\n\n      if (isSwapped) {\n        var placeholder = title;\n        title = subTitle;\n        subTitle = placeholder;\n      }\n\n      if (isCondensed) align = 'center';\n\n      var avatarInfo = _react2['default'].createElement(_AvatarInfo2['default'], {\n        avatarComponent: avatarComponent,\n        title: title,\n        subTitle: subTitle,\n        align: align\n      });\n\n      if (onClickCallback) {\n        return _react2['default'].createElement('button', {\n          className: _className,\n          onClick: onClickCallback\n        }, avatarInfo);\n      }\n\n      return _react2['default'].createElement('div', {\n        className: _className\n      }, avatarInfo);\n    }\n\n    return null;\n  };\n\n  return Person;\n}(_react2['default'].Component);\n/* eslint react/jsx-no-bind: 0, react/prefer-stateless-function:0 */\n\n\nPerson.propTypes = {\n  /**\n    * A Person object for the person you want to create the card for.\n    *\n    *\n    * The object needs to have the same naming convention as: https://api.pnl.gov/operations/v2/people/{hid}/?expand=space,facility\n    * @required\n    * */\n  person: _propTypes2['default'].shape({\n    portraitLink: _propTypes2['default'].string,\n    firstName: _propTypes2['default'].string,\n    lastName: _propTypes2['default'].string,\n    title: _propTypes2['default'].string\n  }).isRequired,\n\n  /**\n   * Which side should the Avatar be aligned on? Choosing 'center' will stack the information\n   */\n  align: _propTypes2['default'].oneOf(['left', 'right', 'center']),\n\n  /**\n    * Overrides the `name` on the Person display.\n    * */\n  altName: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].element]),\n\n  /**\n    * Overrides the `title` on the Person display.\n    * */\n  altTitle: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].element]),\n\n  /**\n    * Callback you want to run if the Person component is `clicked`.\n    * */\n  onClickCallback: _propTypes2['default'].func,\n\n  /**\n    * Swaps the `name` and `title` positions on the Person display.\n    *\n    * This will not change the styles of those two locations. It will only swap the values of the text pieces.\n    * */\n  isSwapped: _propTypes2['default'].bool,\n\n  /**\n    * Allows a condensed view of the Person display when true. By default, the `name` of the individual will\n    * appear below the image of the individual in a smaller font size, without the display of the `title`.\n    * If isSwapped is also true, the `title` of the individual will be displayed in place of the `name`.\n    *\n    * This will add a class, `condensed`, to the Person display.\n    * */\n  isCondensed: _propTypes2['default'].bool,\n\n  /**\n   * The size of the Avatar to be generated.\n   */\n  size: _propTypes2['default'].oneOf(['xs', 'sm', 'md', 'lg'])\n};\nPerson.defaultProps = {\n  align: 'left',\n  altName: undefined,\n  altTitle: undefined,\n  onClickCallback: undefined,\n  isSwapped: false,\n  isCondensed: false,\n  size: 'md'\n};\nexports['default'] = Person;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}