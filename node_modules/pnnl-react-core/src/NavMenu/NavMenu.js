/*
<PnnlNavMenu icon="thumbs-up" text="Feedback" id="feedbackMenu">
    <LinkContainer to="/feedback">
        <MenuItem>Positive</MenuItem>
    </LinkContainer>
    <LinkContainer to="/feedback">
        <MenuItem>Negative</MenuItem>
    </LinkContainer>
</PnnlNavMenu>

NOTE: LinkContainer comes from react-router-bootstrap, MenuItem from react-bootstrap.
You only need LinkContainer if you want to have the menu items be links without attaching
any actions to them yourself, otherwise MenuItem will work just fine.
*/


import React from 'react';
import PropTypes from 'prop-types';
import Dropdown from 'react-bootstrap/lib/Dropdown';
import Action from '../Action';

const NavMenu = ({
  id, icon, text, children,
}) => {
  const restProps = {
    icon,
    text,
    isMenu: true,
    iconDisplay: 'all'
  };

  return (
    <Dropdown id={id} componentClass="li" className="PnnlNavMenu">
      <Action bsRole="toggle" {...restProps} />
      <Dropdown.Menu bsRole="menu">
        {children}
      </Dropdown.Menu>
    </Dropdown>
  );
};

NavMenu.propTypes = {
  /**
   * The name of the icon to be displayed in the NavItem.
   * @required
   */
  icon: PropTypes.string.isRequired,

  /**
   * The label to be displayed underneath the icon in the NavItem.
   * @required
   */
  text: PropTypes.string.isRequired,

  /**
   * The items to be displayed in a Menu.  These will likely be LinkContainer components wrapping MenuItem components.
   * @required
   */
  children: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.node),
    PropTypes.node,
  ]).isRequired,

  /**
   * A unique ID so that react-bootstrap can link the button with the menu it toggles.
   * @required
   */
  id: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.number,
  ]).isRequired,
};

export default NavMenu;
