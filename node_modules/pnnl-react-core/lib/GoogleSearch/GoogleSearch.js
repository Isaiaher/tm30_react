'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Action = require('../Action');

var _Action2 = _interopRequireDefault(_Action);

var _Icon = require('../Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var GoogleSearch = function (_React$Component) {
  (0, _inherits3['default'])(GoogleSearch, _React$Component);

  function GoogleSearch(props) {
    (0, _classCallCheck3['default'])(this, GoogleSearch);

    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));

    _this.onTrigger = _this.onTrigger.bind(_this);

    _this.state = {
      active: false // Only applies to mobile, toggles the launch bar in/out
    };
    return _this;
  }

  GoogleSearch.prototype.onTrigger = function onTrigger() {
    var newActiveState = !this.state.active;
    var searchInput = this.searchField;
    this.setState({
      active: newActiveState
    });
    if (newActiveState) {
      searchInput.focus();
    } else {
      searchInput.blur();
    }
  };

  GoogleSearch.prototype.render = function render() {
    var _this2 = this;

    var active = this.state.active;

    var searchBoxClasses = (0, _classnames2['default'])({ active: active }, 'PnnlGoogleSearch');

    return _react2['default'].createElement(
      'form',
      { className: searchBoxClasses, method: 'get', action: 'https://search.pnl.gov/search' },
      _react2['default'].createElement('input', { type: 'hidden', name: 'as_sitesearch', value: '' }),
      _react2['default'].createElement('input', { type: 'hidden', name: 'access', value: 'a' }),
      _react2['default'].createElement('input', { type: 'hidden', name: 'output', value: 'xml_no_dtd' }),
      _react2['default'].createElement('input', { type: 'hidden', name: 'client', value: 'default_frontend' }),
      _react2['default'].createElement('input', { type: 'hidden', name: 'site', value: 'default_collection' }),
      _react2['default'].createElement('input', { type: 'hidden', name: 'proxystylesheet', value: 'default_frontend' }),
      _react2['default'].createElement('input', { type: 'hidden', name: 'as_dt', value: 'i' }),
      _react2['default'].createElement(_Action2['default'], { icon: 'search', displayType: 'SearchTrigger', onClick: this.onTrigger }),
      _react2['default'].createElement(
        _reactBootstrap.FormGroup,
        null,
        _react2['default'].createElement(
          _reactBootstrap.ControlLabel,
          { title: 'Search', htmlFor: 'q' },
          _react2['default'].createElement(_Icon2['default'], { icon: 'search' })
        ),
        _react2['default'].createElement(_reactBootstrap.FormControl, { type: 'text', name: 'q', id: 'q', ref: function ref(e) {
            _this2.searchField = e;
          }, placeholder: 'Search  Intranet' }),
        _react2['default'].createElement(_Action2['default'], { displayType: 'SearchClose', icon: 'crossmark', onClick: this.onTrigger })
      )
    );
  };

  return GoogleSearch;
}(_react2['default'].Component);

GoogleSearch.propTypes = {};

exports['default'] = GoogleSearch;
module.exports = exports['default'];