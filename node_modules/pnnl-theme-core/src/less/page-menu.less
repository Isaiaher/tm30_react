.calc-pagemenu-width(@index, @sizeClass) when (@index <= @grid-columns) {
    @size: "container-@{sizeClass}";
    .col-@{class}-@{index} & {
        width: (@index / @grid-columns) * @@size - @padding-base-horizontal;
    }
}

// Basic looping in LESS
.loop-pagemenu-width(@index, @class) when (@index >= 0) {
    .calc-pagemenu-width(@index, @class);
    // next iteration
    .loop-pagemenu-width((@index - 1), @class);
}

.PnnlPageMenuTrigger {
    display: none;
    border: 1px solid white;
    background-color: rgba(0,0,0,0.25);
    color: white;
    line-height: 1;
    border-radius: @border-radius-base;
    height: 32px;


    @media (max-width: @screen-sm-min - 1) {
        display: block;
        position: fixed;
        top: @header-small-height;
        right: 0;
        z-index: @zindex-navbar-fixed;
        margin: @padding-small-vertical @padding-base-horizontal;
    }
}

.PnnlPageMenuContainer {
    @media (max-width: @screen-sm-min - 1) {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        transform: translateY(100%);
        .animation(modalFadeOut);
        z-index: @zindex-navbar-fixed;

        &.active {
            transform: translateY(0);
            background-color: rgba(0,0,0,0.8);
            .animation(modalFadeIn);
        }
    }
}

.PnnlPageMenu {
    z-index: @zindex-navbar-fixed;
    transition: transform @default-duration @custom-timing;

    @media (max-width: @screen-sm-min - 1) {
        position: absolute;
        left: @padding-base-horizontal;
        right: @padding-base-horizontal;
        bottom: @padding-base-vertical;
        transform: translateY(150%);

        .PnnlPageMenuContainer.active & {
            transform: translateY(0);
        }
    }
    
    @media (min-width: @screen-sm-min) {
        position: fixed;
        margin-top: @padding-large-vertical * 2;
        margin-left: -@padding-base-horizontal;
        .loop-pagemenu-width(@grid-columns, ~"sm");
    }
    
    @media (min-width: @screen-md-min) {
        .loop-pagemenu-width(@grid-columns, ~"md");
    }
    
    @media (min-width: @screen-lg-min) {
        .loop-pagemenu-width(@grid-columns, ~"lg");
    }
    
    @media (min-width: @screen-xl-min) {
        .loop-pagemenu-width(@grid-columns, ~"xl");
    }
}

.PnnlPageMenuClose {
    display: none;
    @media (max-width: @screen-sm-min - 1) {
        display: block;
        position: absolute;
        top: -(@font-size-base + @padding-large-vertical);
        right: 0;
        color: white;
    }
}

/* Need to explicitly set the border-radius now that we've added a close button that steals the first-child rules */
.PnnlPageMenuClose + .PnnlPageMenuItem {
    border-top-left-radius: @border-radius-base;
    border-top-right-radius: @border-radius-base;
}

.PnnlPageMenuItem {

    &, &:link, &:visited {
        color: @link-color;
    }

    .PnnlPageItemIcon .PnnlIcon {
        transform: scale(1.5);
        transform-origin: left center;
        margin-right: @padding-base-horizontal;
        
        [class*=solid] {
            fill: transparent;
        }

        [class*=outline] {
            fill: currentColor;
        }
    }
    
    &.active, &.active:hover {
        background-color: white;
        background-image: linear-gradient(to right, @bronze, @bronze 5px, transparent 5px, transparent);
        color: @bronze;
        text-decoration: none;
        cursor: default;
        border-color: @gray-lighter; // The default

        .PnnlPageItemIcon .PnnlIcon {            
            [class*=outline] {
                fill: transparent;
            }
    
            [class*=solid] {
                fill: currentColor;
            }
        }
    }

    [class*=PnnlValidationIcon] {
        float: right;
    }
}