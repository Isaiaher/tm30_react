'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Link = require('../Link');

var _Link2 = _interopRequireDefault(_Link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var WebNavItem = function WebNavItem(_ref) {
  var text = _ref.text,
      to = _ref.to,
      onlyActiveOnIndex = _ref.onlyActiveOnIndex;

  var linkProps = {
    to: to,
    onlyActiveOnIndex: onlyActiveOnIndex
  };
  return _react2['default'].createElement(
    'li',
    { className: 'PnnlWebNavItem' },
    _react2['default'].createElement(
      _Link2['default'],
      linkProps,
      text
    )
  );
};

WebNavItem.propTypes = {
  /**
   * The label to be displayed underneath the icon in the WebNavItem.
   * @required
   */
  text: _propTypes2['default'].string.isRequired,

  /**
   * The URL/route that the WebNavItem will link to.
   * @required
   */
  to: _propTypes2['default'].string.isRequired,

  /**
   * Determines whether the NavItem will display as 'active' when the 'to' path matches the loaded path exactly, or whether it matches any sub-path.  Example: when 'false', the WebNavItem will display as 'active' for both actions/ and action/submit. This is swapped from how application Navbars work, given the more hierarchical nature of websites.
   * @private
   */
  onlyActiveOnIndex: _propTypes2['default'].bool
};

WebNavItem.defaultProps = {
  onlyActiveOnIndex: false
};

exports['default'] = WebNavItem;
module.exports = exports['default'];