{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport bin_lines from \"./bin_lines\";\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n    this.xref = this.props.xref;\n    this.xref.push(this.xref[0]);\n    this.yref = this.props.yref;\n    this.yref.push(this.yref[0]);\n    this.rf = Math.round(this.props.rf);\n    this.rg = Math.round(this.props.rg);\n    this.cct = Math.round(this.props.cct);\n    this.duv = Math.round(this.props.duv * 10000) / 10000;\n    this.bin_lines = bin_lines;\n    console.log(\"binlines = \".concat(this.bin_lines));\n    this.minus_20p_x = [];\n    this.minus_20p_y = [];\n    var theta;\n\n    for (theta = 1; theta <= 360; theta++) {\n      this.minus_20p_x[theta] = 0.8 * Math.cos(theta * Math.PI / 180);\n      this.minus_20p_y[theta] = 0.8 * Math.sin(theta * Math.PI / 180);\n    }\n\n    this.minus_10p_x = [];\n    this.minus_10p_y = [];\n    var theta;\n\n    for (theta = 1; theta <= 360; theta++) {\n      this.minus_10p_x[theta] = 0.9 * Math.cos(theta * Math.PI / 180);\n      this.minus_10p_y[theta] = 0.9 * Math.sin(theta * Math.PI / 180);\n    }\n\n    const colors = [\"#b45c60\", \"#cb7761\", \"#cb824b\", \"#d7ad67\", \"#ac9a5d\", \"#919E60\", \"#678B5F\", \"#62B08F\", \"#7CBABA\", \"#2C797D\", \"#54778C\", \"#7189B1\", \"#988CA9\", \"#735876\", \"#8F6682\", \"#B97B8E\"];\n    var i;\n    this.arrows = [];\n    var i_arrow;\n\n    for (i = 0; i < 16; i++) {\n      i_arrow = {\n        x: this.xtest[i],\n        y: this.ytest[i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.xref[i],\n        ay: this.yref[i],\n        arrowcolor: colors[i]\n      };\n      this.arrows.push(i_arrow);\n    }\n\n    console.log(this.arrows);\n  }\n\n  render() {\n    return React.createElement(Plot, {\n      data: [{\n        name: \"\",\n        x: this.minus_20p_x,\n        y: this.minus_20p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        }\n      }, {\n        name: \"\",\n        x: this.minus_10p_x,\n        y: this.minus_10p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        }\n      }, {\n        name: \"Test\",\n        x: this.xtest,\n        y: this.ytest,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"red\"\n        }\n      }, {\n        name: \"Reference\",\n        x: this.xref,\n        y: this.yref,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"black\"\n        } //...this.bin_lines\n\n      }],\n      layout: {\n        autosize: true,\n        width: 700,\n        height: 600,\n        margin: {\n          t: 40,\n          l: 40,\n          b: 40\n        },\n        xaxis: {\n          //visible: false,\n          range: [-1.5, 1.5],\n          title: {\n            text: \"\" //showticklabels: false\n\n          }\n        },\n        yaxis: {\n          //visible: false,\n          range: [-1.5, 1.5],\n          title: {\n            text: \"\"\n          },\n          tickformat: \"\" //showticklabels: false\n\n        },\n        images: [{\n          source: \"http://localhost:8000/CVGbackground.png\",\n          //source: \"http://localhost:8000/CVG_bin_lines.png\",\n          xref: \"x\",\n          yref: \"y\",\n          x: -1.5,\n          y: 1.5,\n          sizex: 3,\n          sizey: 3,\n          sizing: \"stretch\",\n          layer: \"below\"\n        }],\n        annotations: [...this.arrows, {\n          x: -1.35,\n          y: 1.3,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.rf, \"</b><br /><i>R<sub>f</sub></i>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: 1.35,\n          y: 1.3,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.rg, \"</b><br /><i>R<sub>g</sub></i>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: 1.15,\n          y: -1.25,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.duv, \"</b><br /><i>D<sub>uv</sub></i>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          ax: 0,\n          ay: 0\n        }, {\n          x: -1.25,\n          y: -1.25,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>   \".concat(this.cct, \" K</b><br /><i>CCT</i>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          ax: 0,\n          ay: 0\n        }]\n      },\n      config: {\n        displayModeBar: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }\n\n}\nexport default CVGPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/CVGPlot.jsx"],"names":["React","Component","Plot","bin_lines","CVGPlot","constructor","props","xtest","push","ytest","xref","yref","rf","Math","round","rg","cct","duv","console","log","minus_20p_x","minus_20p_y","theta","cos","PI","sin","minus_10p_x","minus_10p_y","colors","i","arrows","i_arrow","x","y","text","showarrow","arrowhead","axref","ayref","ax","ay","arrowcolor","render","name","type","line","shape","smoothing","mode","connectgaps","marker","color","autosize","width","height","margin","t","l","b","xaxis","range","title","yaxis","tickformat","images","source","sizex","sizey","sizing","layer","annotations","font","size","displayModeBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AACrCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKD,KAAL,CAAWC,KAAxB;AACA,SAAKA,KAAL,CAAWC,IAAX,CAAgB,KAAKD,KAAL,CAAW,CAAX,CAAhB;AACA,SAAKE,KAAL,GAAa,KAAKH,KAAL,CAAWG,KAAxB;AACA,SAAKA,KAAL,CAAWD,IAAX,CAAgB,KAAKC,KAAL,CAAW,CAAX,CAAhB;AAEA,SAAKC,IAAL,GAAY,KAAKJ,KAAL,CAAWI,IAAvB;AACA,SAAKA,IAAL,CAAUF,IAAV,CAAe,KAAKE,IAAL,CAAU,CAAV,CAAf;AACA,SAAKC,IAAL,GAAY,KAAKL,KAAL,CAAWK,IAAvB;AACA,SAAKA,IAAL,CAAUH,IAAV,CAAe,KAAKG,IAAL,CAAU,CAAV,CAAf;AAEA,SAAKC,EAAL,GAAUC,IAAI,CAACC,KAAL,CAAW,KAAKR,KAAL,CAAWM,EAAtB,CAAV;AACA,SAAKG,EAAL,GAAUF,IAAI,CAACC,KAAL,CAAW,KAAKR,KAAL,CAAWS,EAAtB,CAAV;AACA,SAAKC,GAAL,GAAWH,IAAI,CAACC,KAAL,CAAW,KAAKR,KAAL,CAAWU,GAAtB,CAAX;AACA,SAAKC,GAAL,GAAWJ,IAAI,CAACC,KAAL,CAAW,KAAKR,KAAL,CAAWW,GAAX,GAAiB,KAA5B,IAAqC,KAAhD;AAEA,SAAKd,SAAL,GAAiBA,SAAjB;AACAe,IAAAA,OAAO,CAACC,GAAR,sBAA0B,KAAKhB,SAA/B;AAEA,SAAKiB,WAAL,GAAmB,EAAnB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,QAAIC,KAAJ;;AACA,SAAKA,KAAK,GAAG,CAAb,EAAgBA,KAAK,IAAI,GAAzB,EAA8BA,KAAK,EAAnC,EAAuC;AACrC,WAAKF,WAAL,CAAiBE,KAAjB,IAA0B,MAAMT,IAAI,CAACU,GAAL,CAAUD,KAAK,GAAGT,IAAI,CAACW,EAAd,GAAoB,GAA7B,CAAhC;AACA,WAAKH,WAAL,CAAiBC,KAAjB,IAA0B,MAAMT,IAAI,CAACY,GAAL,CAAUH,KAAK,GAAGT,IAAI,CAACW,EAAd,GAAoB,GAA7B,CAAhC;AACD;;AAED,SAAKE,WAAL,GAAmB,EAAnB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,QAAIL,KAAJ;;AACA,SAAKA,KAAK,GAAG,CAAb,EAAgBA,KAAK,IAAI,GAAzB,EAA8BA,KAAK,EAAnC,EAAuC;AACrC,WAAKI,WAAL,CAAiBJ,KAAjB,IAA0B,MAAMT,IAAI,CAACU,GAAL,CAAUD,KAAK,GAAGT,IAAI,CAACW,EAAd,GAAoB,GAA7B,CAAhC;AACA,WAAKG,WAAL,CAAiBL,KAAjB,IAA0B,MAAMT,IAAI,CAACY,GAAL,CAAUH,KAAK,GAAGT,IAAI,CAACW,EAAd,GAAoB,GAA7B,CAAhC;AACD;;AAED,UAAMI,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,EAQb,SARa,EASb,SATa,EAUb,SAVa,EAWb,SAXa,EAYb,SAZa,EAab,SAba,EAcb,SAda,EAeb,SAfa,EAgBb,SAhBa,CAAf;AAmBA,QAAIC,CAAJ;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,QAAIC,OAAJ;;AACA,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvBE,MAAAA,OAAO,GAAG;AACRC,QAAAA,CAAC,EAAE,KAAKzB,KAAL,CAAWsB,CAAX,CADK;AAERI,QAAAA,CAAC,EAAE,KAAKxB,KAAL,CAAWoB,CAAX,CAFK;AAGRnB,QAAAA,IAAI,EAAE,GAHE;AAIRC,QAAAA,IAAI,EAAE,GAJE;AAKRuB,QAAAA,IAAI,EAAE,EALE;AAMRC,QAAAA,SAAS,EAAE,IANH;AAORC,QAAAA,SAAS,EAAE,CAPH;AAQRC,QAAAA,KAAK,EAAE,GARC;AASRC,QAAAA,KAAK,EAAE,GATC;AAURC,QAAAA,EAAE,EAAE,KAAK7B,IAAL,CAAUmB,CAAV,CAVI;AAWRW,QAAAA,EAAE,EAAE,KAAK7B,IAAL,CAAUkB,CAAV,CAXI;AAYRY,QAAAA,UAAU,EAAEb,MAAM,CAACC,CAAD;AAZV,OAAV;AAcA,WAAKC,MAAL,CAAYtB,IAAZ,CAAiBuB,OAAjB;AACD;;AACDb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKW,MAAjB;AACD;;AACDY,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,IAAI,EAAE,EADR;AAEEX,QAAAA,CAAC,EAAE,KAAKZ,WAFV;AAGEa,QAAAA,CAAC,EAAE,KAAKZ,WAHV;AAIEuB,QAAAA,IAAI,EAAE,SAJR;AAKEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEC,QAAAA,IAAI,EAAE,cANR;AAOEC,QAAAA,WAAW,EAAE,IAPf;AAQEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AARV,OADI,EAWJ;AACER,QAAAA,IAAI,EAAE,EADR;AAEEX,QAAAA,CAAC,EAAE,KAAKN,WAFV;AAGEO,QAAAA,CAAC,EAAE,KAAKN,WAHV;AAIEiB,QAAAA,IAAI,EAAE,SAJR;AAKEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEC,QAAAA,IAAI,EAAE,cANR;AAOEC,QAAAA,WAAW,EAAE,IAPf;AAQEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AARV,OAXI,EAqBJ;AACER,QAAAA,IAAI,EAAE,MADR;AAEEX,QAAAA,CAAC,EAAE,KAAKzB,KAFV;AAGE0B,QAAAA,CAAC,EAAE,KAAKxB,KAHV;AAIEmC,QAAAA,IAAI,EAAE,SAJR;AAKEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEC,QAAAA,IAAI,EAAE,cANR;AAOEC,QAAAA,WAAW,EAAE,IAPf;AAQEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AARV,OArBI,EA+BJ;AACER,QAAAA,IAAI,EAAE,WADR;AAEEX,QAAAA,CAAC,EAAE,KAAKtB,IAFV;AAGEuB,QAAAA,CAAC,EAAE,KAAKtB,IAHV;AAIEiC,QAAAA,IAAI,EAAE,SAJR;AAKEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SALR;AAMEC,QAAAA,IAAI,EAAE,cANR;AAOEC,QAAAA,WAAW,EAAE,IAPf;AAQEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SARV,CAUA;;AAVA,OA/BI,CADR;AA4CE,MAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,IADJ;AAENC,QAAAA,KAAK,EAAE,GAFD;AAGNC,QAAAA,MAAM,EAAE,GAHF;AAKNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE,EADG;AAENC,UAAAA,CAAC,EAAE,EAFG;AAGNC,UAAAA,CAAC,EAAE;AAHG,SALF;AAWNC,QAAAA,KAAK,EAAE;AACL;AACAC,UAAAA,KAAK,EAAE,CAAC,CAAC,GAAF,EAAO,GAAP,CAFF;AAGLC,UAAAA,KAAK,EAAE;AACL3B,YAAAA,IAAI,EAAE,EADD,CAGP;;AAHO;AAHF,SAXD;AAmBN4B,QAAAA,KAAK,EAAE;AACL;AACAF,UAAAA,KAAK,EAAE,CAAC,CAAC,GAAF,EAAO,GAAP,CAFF;AAGLC,UAAAA,KAAK,EAAE;AACL3B,YAAAA,IAAI,EAAE;AADD,WAHF;AAML6B,UAAAA,UAAU,EAAE,EANP,CAOL;;AAPK,SAnBD;AA4BNC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,MAAM,EAAE,yCADV;AAEE;AACAvD,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEqB,UAAAA,CAAC,EAAE,CAAC,GALN;AAMEC,UAAAA,CAAC,EAAE,GANL;AAOEiC,UAAAA,KAAK,EAAE,CAPT;AAQEC,UAAAA,KAAK,EAAE,CART;AASEC,UAAAA,MAAM,EAAE,SATV;AAUEC,UAAAA,KAAK,EAAE;AAVT,SADM,CA5BF;AA0CNC,QAAAA,WAAW,EAAE,CACX,GAAG,KAAKxC,MADG,EAEX;AACEE,UAAAA,CAAC,EAAE,CAAC,IADN;AAEEC,UAAAA,CAAC,EAAE,GAFL;AAGEvB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEuB,UAAAA,IAAI,eAAQ,KAAKtB,EAAb,mCALN;AAME2D,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJrB,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEZ,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SAFW,EAeX;AACER,UAAAA,CAAC,EAAE,IADL;AAEEC,UAAAA,CAAC,EAAE,GAFL;AAGEvB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEuB,UAAAA,IAAI,eAAQ,KAAKnB,EAAb,mCALN;AAMEwD,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJrB,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEZ,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SAfW,EA4BX;AACER,UAAAA,CAAC,EAAE,IADL;AAEEC,UAAAA,CAAC,EAAE,CAAC,IAFN;AAGEvB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEuB,UAAAA,IAAI,eAAQ,KAAKjB,GAAb,oCALN;AAMEsD,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJrB,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEZ,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SA5BW,EAyCX;AACER,UAAAA,CAAC,EAAE,CAAC,IADN;AAEEC,UAAAA,CAAC,EAAE,CAAC,IAFN;AAGEvB,UAAAA,IAAI,EAAE,GAHR;AAIEC,UAAAA,IAAI,EAAE,GAJR;AAKEuB,UAAAA,IAAI,kBAAW,KAAKlB,GAAhB,2BALN;AAMEuD,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE,EADF;AAEJrB,YAAAA,KAAK,EAAE;AAFH,WANR;AAUEZ,UAAAA,EAAE,EAAE,CAVN;AAWEC,UAAAA,EAAE,EAAE;AAXN,SAzCW;AA1CP,OA5CV;AA8IE,MAAA,MAAM,EAAE;AAAEiC,QAAAA,cAAc,EAAE;AAAlB,OA9IV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAkJD;;AAjOoC;AAoOvC,eAAerE,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport bin_lines from \"./bin_lines\";\n\nexport class CVGPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.xtest = this.props.xtest;\n    this.xtest.push(this.xtest[0]);\n    this.ytest = this.props.ytest;\n    this.ytest.push(this.ytest[0]);\n\n    this.xref = this.props.xref;\n    this.xref.push(this.xref[0]);\n    this.yref = this.props.yref;\n    this.yref.push(this.yref[0]);\n\n    this.rf = Math.round(this.props.rf);\n    this.rg = Math.round(this.props.rg);\n    this.cct = Math.round(this.props.cct);\n    this.duv = Math.round(this.props.duv * 10000) / 10000;\n\n    this.bin_lines = bin_lines;\n    console.log(`binlines = ${this.bin_lines}`);\n\n    this.minus_20p_x = [];\n    this.minus_20p_y = [];\n    var theta;\n    for (theta = 1; theta <= 360; theta++) {\n      this.minus_20p_x[theta] = 0.8 * Math.cos((theta * Math.PI) / 180);\n      this.minus_20p_y[theta] = 0.8 * Math.sin((theta * Math.PI) / 180);\n    }\n\n    this.minus_10p_x = [];\n    this.minus_10p_y = [];\n    var theta;\n    for (theta = 1; theta <= 360; theta++) {\n      this.minus_10p_x[theta] = 0.9 * Math.cos((theta * Math.PI) / 180);\n      this.minus_10p_y[theta] = 0.9 * Math.sin((theta * Math.PI) / 180);\n    }\n\n    const colors = [\n      \"#b45c60\",\n      \"#cb7761\",\n      \"#cb824b\",\n      \"#d7ad67\",\n      \"#ac9a5d\",\n      \"#919E60\",\n      \"#678B5F\",\n      \"#62B08F\",\n      \"#7CBABA\",\n      \"#2C797D\",\n      \"#54778C\",\n      \"#7189B1\",\n      \"#988CA9\",\n      \"#735876\",\n      \"#8F6682\",\n      \"#B97B8E\"\n    ];\n\n    var i;\n    this.arrows = [];\n    var i_arrow;\n    for (i = 0; i < 16; i++) {\n      i_arrow = {\n        x: this.xtest[i],\n        y: this.ytest[i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.xref[i],\n        ay: this.yref[i],\n        arrowcolor: colors[i]\n      };\n      this.arrows.push(i_arrow);\n    }\n    console.log(this.arrows);\n  }\n  render() {\n    return (\n      <Plot\n        data={[\n          {\n            name: \"\",\n            x: this.minus_20p_x,\n            y: this.minus_20p_y,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"white\" }\n          },\n          {\n            name: \"\",\n            x: this.minus_10p_x,\n            y: this.minus_10p_y,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"white\" }\n          },\n          {\n            name: \"Test\",\n            x: this.xtest,\n            y: this.ytest,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"red\" }\n          },\n          {\n            name: \"Reference\",\n            x: this.xref,\n            y: this.yref,\n            type: \"scatter\",\n            line: { shape: \"spline\", smoothing: 1.3 },\n            mode: \"lines+points\",\n            connectgaps: true,\n            marker: { color: \"black\" }\n          }\n          //...this.bin_lines\n        ]}\n        layout={{\n          autosize: true,\n          width: 700,\n          height: 600,\n\n          margin: {\n            t: 40,\n            l: 40,\n            b: 40\n          },\n\n          xaxis: {\n            //visible: false,\n            range: [-1.5, 1.5],\n            title: {\n              text: \"\"\n            }\n            //showticklabels: false\n          },\n          yaxis: {\n            //visible: false,\n            range: [-1.5, 1.5],\n            title: {\n              text: \"\"\n            },\n            tickformat: \"\"\n            //showticklabels: false\n          },\n          images: [\n            {\n              source: \"http://localhost:8000/CVGbackground.png\",\n              //source: \"http://localhost:8000/CVG_bin_lines.png\",\n              xref: \"x\",\n              yref: \"y\",\n              x: -1.5,\n              y: 1.5,\n              sizex: 3,\n              sizey: 3,\n              sizing: \"stretch\",\n              layer: \"below\"\n            }\n          ],\n          annotations: [\n            ...this.arrows,\n            {\n              x: -1.35,\n              y: 1.3,\n              xref: \"x\",\n              yref: \"y\",\n              text: `<b>${this.rf}</b><br /><i>R<sub>f</sub></i>`,\n              font: {\n                size: 20,\n                color: \"black\"\n              },\n              ax: 0,\n              ay: 0\n            },\n            {\n              x: 1.35,\n              y: 1.3,\n              xref: \"x\",\n              yref: \"y\",\n              text: `<b>${this.rg}</b><br /><i>R<sub>g</sub></i>`,\n              font: {\n                size: 20,\n                color: \"black\"\n              },\n              ax: 0,\n              ay: 0\n            },\n            {\n              x: 1.15,\n              y: -1.25,\n              xref: \"x\",\n              yref: \"y\",\n              text: `<b>${this.duv}</b><br /><i>D<sub>uv</sub></i>`,\n              font: {\n                size: 20,\n                color: \"black\"\n              },\n              ax: 0,\n              ay: 0\n            },\n            {\n              x: -1.25,\n              y: -1.25,\n              xref: \"x\",\n              yref: \"y\",\n              text: `<b>   ${this.cct} K</b><br /><i>CCT</i>`,\n              font: {\n                size: 20,\n                color: \"black\"\n              },\n              ax: 0,\n              ay: 0\n            }\n          ]\n        }}\n        config={{ displayModeBar: false }}\n      />\n    );\n  }\n}\n\nexport default CVGPlot;\n"]},"metadata":{},"sourceType":"module"}