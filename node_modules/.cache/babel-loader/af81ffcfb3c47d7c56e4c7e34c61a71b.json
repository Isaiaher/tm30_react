{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/SPDxWavelength.jsx\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nexport class SPDxWavelength extends Component {\n  /**\n   * Constructor that grabs the data passed in the props\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.errors = [];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      useResizeHandler: true,\n      style: {\n        width: \"100%\"\n      },\n      data: [{\n        name: \"Test\",\n        x: this.props.wavelength,\n        y: this.props.spd,\n        type: \"scatter\",\n        mode: \"lines+points\",\n        hovertemplate: \"%{y:.4f}\",\n        marker: {\n          color: \"black\"\n        }\n      }],\n      layout: {\n        //width: 800,\n        height: 200,\n        legend: {\n          xanchor: \"center\",\n          yanchor: \"top\",\n          y: -0.2,\n          x: 0.5,\n          orientation: \"h\"\n        },\n        margin: {\n          l: 60,\n          r: 30,\n          b: 60,\n          t: 0,\n          pad: 4\n        },\n        xaxis: {\n          title: {\n            text: \"Wavelength (nm)\"\n          },\n          tick0: 380,\n          dtick: 50\n        },\n        yaxis: {\n          title: {\n            text: \"SPD Value\"\n          },\n          tick0: 0,\n          dtick: 0.5\n        }\n      },\n      config: {\n        displaylogo: false,\n        modeBarButtons: [[\"toImage\"]],\n        responsive: true,\n        toImageButtonOptions: {\n          format: \"png\",\n          // one of png, svg, jpeg, webp\n          filename: \"Equal Luminous Flux\",\n          height: 700,\n          width: 900,\n          scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default SPDxWavelength;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/SPDxWavelength.jsx"],"names":["React","Component","Plot","SPDxWavelength","constructor","props","errors","render","width","name","x","wavelength","y","spd","type","mode","hovertemplate","marker","color","height","legend","xanchor","yanchor","orientation","margin","l","r","b","t","pad","xaxis","title","text","tick0","dtick","yaxis","displaylogo","modeBarButtons","responsive","toImageButtonOptions","format","filename","scale"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,OAAO,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAC5C;;;;AAIAG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,EAAd;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,gBAAgB,EAAE,IADpB;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,CAAC,EAAE,KAAKL,KAAL,CAAWM,UAFhB;AAGEC,QAAAA,CAAC,EAAE,KAAKP,KAAL,CAAWQ,GAHhB;AAIEC,QAAAA,IAAI,EAAE,SAJR;AAKEC,QAAAA,IAAI,EAAE,cALR;AAMEC,QAAAA,aAAa,EAAE,UANjB;AAOEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAPV,OADI,CAHR;AAcE,MAAA,MAAM,EAAE;AACN;AACAC,QAAAA,MAAM,EAAE,GAFF;AAGNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE,QADH;AAENC,UAAAA,OAAO,EAAE,KAFH;AAGNV,UAAAA,CAAC,EAAE,CAAC,GAHE;AAINF,UAAAA,CAAC,EAAE,GAJG;AAKNa,UAAAA,WAAW,EAAE;AALP,SAHF;AAUNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE,EADG;AAENC,UAAAA,CAAC,EAAE,EAFG;AAGNC,UAAAA,CAAC,EAAE,EAHG;AAINC,UAAAA,CAAC,EAAE,CAJG;AAKNC,UAAAA,GAAG,EAAE;AALC,SAVF;AAiBNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WADF;AAILC,UAAAA,KAAK,EAAE,GAJF;AAKLC,UAAAA,KAAK,EAAE;AALF,SAjBD;AAwBNC,QAAAA,KAAK,EAAE;AACLJ,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WADF;AAILC,UAAAA,KAAK,EAAE,CAJF;AAKLC,UAAAA,KAAK,EAAE;AALF;AAxBD,OAdV;AA8CE,MAAA,MAAM,EAAE;AACNE,QAAAA,WAAW,EAAE,KADP;AAENC,QAAAA,cAAc,EAAE,CAAC,CAAC,SAAD,CAAD,CAFV;AAGNC,QAAAA,UAAU,EAAE,IAHN;AAINC,QAAAA,oBAAoB,EAAE;AACpBC,UAAAA,MAAM,EAAE,KADY;AACL;AACfC,UAAAA,QAAQ,EAAE,qBAFU;AAGpBtB,UAAAA,MAAM,EAAE,GAHY;AAIpBX,UAAAA,KAAK,EAAE,GAJa;AAKpBkC,UAAAA,KAAK,EAAE,GALa,CAKT;;AALS;AAJhB,OA9CV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AA+DD;;AAzE2C;AA4E9C,eAAevC,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport class SPDxWavelength extends Component {\n  /**\n   * Constructor that grabs the data passed in the props\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.errors = [];\n  }\n  render() {\n    return (\n      <div>\n        <Plot\n          useResizeHandler={true}\n          style={{ width: \"100%\" }}\n          data={[\n            {\n              name: \"Test\",\n              x: this.props.wavelength,\n              y: this.props.spd,\n              type: \"scatter\",\n              mode: \"lines+points\",\n              hovertemplate: \"%{y:.4f}\",\n              marker: { color: \"black\" }\n            }\n          ]}\n          layout={{\n            //width: 800,\n            height: 200,\n            legend: {\n              xanchor: \"center\",\n              yanchor: \"top\",\n              y: -0.2,\n              x: 0.5,\n              orientation: \"h\"\n            },\n            margin: {\n              l: 60,\n              r: 30,\n              b: 60,\n              t: 0,\n              pad: 4\n            },\n            xaxis: {\n              title: {\n                text: \"Wavelength (nm)\"\n              },\n              tick0: 380,\n              dtick: 50\n            },\n            yaxis: {\n              title: {\n                text: \"SPD Value\"\n              },\n              tick0: 0,\n              dtick: 0.5\n            }\n          }}\n          config={{\n            displaylogo: false,\n            modeBarButtons: [[\"toImage\"]],\n            responsive: true,\n            toImageButtonOptions: {\n              format: \"png\", // one of png, svg, jpeg, webp\n              filename: \"Equal Luminous Flux\",\n              height: 700,\n              width: 900,\n              scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SPDxWavelength;\n"]},"metadata":{},"sourceType":"module"}