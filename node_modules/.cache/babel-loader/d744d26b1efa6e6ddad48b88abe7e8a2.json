{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/CVGPlot.jsx\";\n\n/**\n * Color Vector Graph\n *\n * A component for the Color Vector Graph specified in the Excel calculator.\n * This graph is fairly extensive and has a lot of moving parts.\n *\n * In it's basic form it is a scatter plot that creates a circular ploygon with the data\n * from (path_x Test, path_y Test) points and (path_x Ref, path_y Ref) points to create two\n * different circles.\n *\n * We then create different color vectors pointing from each Reference point to the Test Point.\n * The Colors are just for aesthetic purposes and are not a standard. However, they are the same\n * colors in the same odrder as the ones from \"Numerical Results\" when we colors the huebins.\n *\n * From there we create 5 White Reference circles that are -20%, -10%, 0%, +10%, and +20% of\n * the unit circle.\n *\n * Then we overlay the Huebin lines by using some simple geometry and play the huebin labels\n * a little further out than the white reference cirlces\n *\n * Finally, we position the numerical data in all four corners of the graph\n *\n * TODO - Create the ability to turn off the Huebin Labels, Huebin Dividers, and Chroma Isolines. All seperate functionality, mix and match.\n * TODO - Add the first point to the end of each White ref circle to close it\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n/**\n * CVG Plot Class\n */\n\nexport class CVGPlot extends Component {\n  /**\n   * Very extensive Constructor method. A lot of data is being used in the\n   * graph and some of it has to be rounded, other has to be calculated such\n   * as the huebin lines and the white reference circles.\n   * IMPORTANT - there is a prop called \"small\". It is a boolean to differentiate\n   * the \"Basic Results\" page CVG graph from the \"Graphical Results\" CVG graph.\n   * The Basic Results CVG graph is larger thus it is not needed to specify what\n   * small is, however, you need to specify small as {true} in the Graphical Results page.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n\n    this.createBinLines = () => {\n      this.bin_lines = [{\n        x: [-1.5, 1.5],\n        y: [0, 0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        x: [-1.39, 1.39],\n        y: [-0.57, 0.57],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        x: [-1.06, 1.06],\n        y: [-1.06, 1.06],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        x: [-0.57, 0.57],\n        y: [-1.39, 1.39],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        x: [0, 0],\n        y: [-1.5, 1.5],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        x: [0.57, -0.57],\n        y: [-1.39, 1.39],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        x: [1.06, -1.06],\n        y: [-1.06, 1.06],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        x: [1.39, -1.39],\n        y: [-0.57, 0.57],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: {\n          color: \"grey\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }];\n    };\n\n    this.createBinNumbers = () => {\n      this.bin_numbers = [];\n      var theta = 11.5;\n      var i;\n\n      for (i = 1; i <= 16; i++) {\n        var x = 1.35 * Math.cos(theta * Math.PI / 180);\n        var y = 1.35 * Math.sin(theta * Math.PI / 180);\n        theta += 22.5;\n        this.bin_numbers[i - 1] = {\n          x: x,\n          y: y,\n          xref: \"x\",\n          yref: \"y\",\n          text: \"\".concat(i),\n          font: {\n            size: 12,\n            color: \"grey\"\n          },\n          ax: 0,\n          ay: 0\n        };\n      }\n    };\n\n    this.createChromaIsolines = () => {\n      var theta;\n      var i;\n\n      for (theta = 1; theta <= 361; theta++) {\n        // -20% Ref Circle\n        this.minus_20p_x[theta] = 0.8 * Math.cos(theta * Math.PI / 180);\n        this.minus_20p_y[theta] = 0.8 * Math.sin(theta * Math.PI / 180); // -10% Ref Circle\n\n        this.minus_10p_x[theta] = 0.9 * Math.cos(theta * Math.PI / 180);\n        this.minus_10p_y[theta] = 0.9 * Math.sin(theta * Math.PI / 180); // 0% Ref Circle\n\n        this.even_x[theta] = Math.cos(theta * Math.PI / 180);\n        this.even_y[theta] = Math.sin(theta * Math.PI / 180); // +10% Ref Circle\n\n        this.plus_10p_x[theta] = 1.1 * Math.cos(theta * Math.PI / 180);\n        this.plus_10p_y[theta] = 1.1 * Math.sin(theta * Math.PI / 180); //+20% Ref Circle\n\n        this.plus_20p_x[theta] = 1.2 * Math.cos(theta * Math.PI / 180);\n        this.plus_20p_y[theta] = 1.2 * Math.sin(theta * Math.PI / 180);\n      }\n\n      this.chroma_isolines_labels = [{\n        x: -0.15,\n        y: -0.7,\n        xref: \"x\",\n        yref: \"y\",\n        text: \"-20%\",\n        font: {\n          size: 11,\n          color: \"white\"\n        },\n        ax: 0,\n        ay: 0\n      }, {\n        x: -0.25,\n        y: -1.11,\n        xref: \"x\",\n        yref: \"y\",\n        text: \"+20%\",\n        font: {\n          size: 11,\n          color: \"white\"\n        },\n        ax: 0,\n        ay: 0\n      }];\n    };\n\n    this.state = {\n      bin_lines_bool: this.props.options.bin_dividers\n    };\n    this.xtest = this.props.xtest; //x tests values\n\n    this.xtest.push(this.xtest[0]); //Make it completely round\n\n    this.ytest = this.props.ytest; //y tests values\n\n    this.ytest.push(this.ytest[0]); //Make it completely round\n\n    this.xref = this.props.xref; //x Ref values\n\n    this.xref.push(this.xref[0]); //Make it completely round\n\n    this.yref = this.props.yref; //x Ref values\n\n    this.yref.push(this.yref[0]); //Make it completely round\n\n    /**\n     * Rounding the information on the graph\n     */\n\n    this.rf = Math.round(this.props.rf);\n    this.rg = Math.round(this.props.rg);\n    this.cct = Math.round(this.props.cct);\n    this.duv = Math.round(this.props.duv * 10000) / 10000;\n    this.small_bool = this.props.small;\n    /**\n     * Determine if we are dealing with with the small version (Graphical Page)\n     * or the Bigger (Basic Results) Plot\n     */\n\n    if (this.small_bool) {\n      this.arrow_size = 2;\n      this.x_size = 325;\n      this.y_size = 325;\n      this.rg_label = [1.25, 1.2];\n      this.rf_label = [-1.25, 1.2];\n      this.duv_label = [1.1, -1.25];\n      this.cct_label = [-1.1, -1.25];\n      this.style = {\n        width: 325,\n        height: 325\n      };\n      this.small_style = {\n        position: \"inherit\",\n        display: \"inline-block\",\n        padding: \"50 50 50 50\"\n      };\n    } else if (this.props.active === \"Intermediate\") {\n      this.arrow_size = 3;\n      this.style = {\n        width: \"100%\"\n      };\n      this.x_size = 650;\n      this.y_size = 650;\n      this.rg_label = [1.35, 1.3];\n      this.rf_label = [-1.35, 1.3];\n      this.duv_label = [1.2, -1.25];\n      this.cct_label = [-1.2, -1.25];\n    } else {\n      this.arrow_size = 3;\n      this.style = {\n        width: \"100%\"\n      };\n      this.x_size = 800;\n      this.y_size = 800;\n      this.rg_label = [1.35, 1.3];\n      this.rf_label = [-1.35, 1.3];\n      this.duv_label = [1.2, -1.25];\n      this.cct_label = [-1.2, -1.25];\n    }\n    /**\n     * Setting up the Reference Circles\n     */\n\n\n    this.minus_20p_x = []; // -20% Ref Circle\n\n    this.minus_20p_y = [];\n    this.minus_10p_x = []; // -10% Ref Circle\n\n    this.minus_10p_y = [];\n    this.even_x = []; // 0% Ref Circle\n\n    this.even_y = [];\n    this.plus_10p_x = []; // +10% Ref Circle\n\n    this.plus_10p_y = [];\n    this.plus_20p_x = []; // +20% Ref Circle\n\n    this.plus_20p_y = [];\n    this.bin_lines = [];\n    this.chroma_isolines_labels = [];\n    this.black_x = [];\n    this.black_y = [];\n\n    var _theta;\n\n    for (_theta = 1; _theta <= 361; _theta++) {\n      this.black_x[_theta] = Math.cos(_theta * Math.PI / 180);\n      this.black_y[_theta] = Math.sin(_theta * Math.PI / 180);\n    }\n\n    var _i;\n\n    for (_i = 0; _i < 16; _i++) {\n      var distance = Math.sqrt(Math.pow(this.xref[_i] - this.xtest[_i], 2) + Math.pow(this.yref[_i] - this.ytest[_i], 2));\n\n      if (distance.toFixed(3) <= 0.029) {\n        if (this.xref[_i] > this.xtest[_i]) {\n          this.xref[_i] = this.xtest[_i] + 0.04;\n          this.yref[_i] = this.ytest[_i] + 0.04;\n        } else {\n          this.xref[_i] = this.xtest[_i] - 0.04;\n          this.yref[_i] = this.ytest[_i] - 0.04;\n        }\n      }\n\n      console.log(\"\".concat(_i, \": (\").concat(this.xref[_i], \", \").concat(this.yref[_i], \") --> (\").concat(this.xtest[_i], \", \").concat(this.ytest[_i], \") \\t Dist: \").concat(distance));\n    }\n\n    this.createBinLines();\n    this.createBinNumbers();\n    this.createChromaIsolines();\n    /**\n     * An array of the vector colors\n     */\n\n    const colors = [\"#e32f32\", \"#e54f4f\", \"#fa843b\", \"#feb73c\", \"#cbcb50\", \"#7fb951\", \"#44c00b\", \"#109c7b\", //8\n    \"#22bbaf\", //9\n    \"#13a2bb\", //10\n    \"#0f82c0\", //11\n    \"#3c62a8\", //12\n    \"#6d67ac\", //13\n    \"#6a4e84\", //14\n    \"#9d69a0\", //15\n    \"#a65081\" //16\n    ];\n    /**\n     * Setting up the vector arrays\n     */\n\n    this.arrows = [];\n    var i_arrow;\n\n    for (_i = 0; _i < 16; _i++) {\n      i_arrow = {\n        x: this.xtest[_i],\n        y: this.ytest[_i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        arrowwidth: this.arrow_size,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.xref[_i],\n        ay: this.yref[_i],\n        arrowcolor: colors[_i]\n      };\n      this.arrows.push(i_arrow);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.options.bin_dividers !== null) {\n      this.setState({\n        bin_lines_bool: nextProps.options.bin_dividers\n      }, () => {\n        if (!this.state.bin_lines_bool) {\n          this.bin_lines = [];\n        } else {\n          this.createBinLines();\n        }\n\n        console.log(\"New Props: bin_lines = \", this.state.bin_lines_bool);\n      });\n    }\n\n    if (nextProps.options.bin_labels !== null) {\n      this.setState({\n        bin_numbers_bool: nextProps.options.bin_labels\n      }, () => {\n        if (!this.state.bin_numbers_bool) {\n          this.bin_numbers = [];\n        } else {\n          this.createBinNumbers();\n        }\n\n        console.log(nextProps);\n        console.log(\"New Props: bin_numbers = \", this.state.bin_numbers_bool);\n      });\n    }\n\n    if (nextProps.options.chroma_isolines !== null) {\n      this.setState({\n        chroma_isolines_bool: nextProps.options.chroma_isolines\n      }, () => {\n        if (!this.state.chroma_isolines_bool) {\n          this.minus_20p_x = []; // -20% Ref Circle\n\n          this.minus_20p_y = [];\n          this.minus_10p_x = []; // -10% Ref Circle\n\n          this.minus_10p_y = [];\n          this.even_x = []; // 0% Ref Circle\n\n          this.even_y = [];\n          this.plus_10p_x = []; // +10% Ref Circle\n\n          this.plus_10p_y = [];\n          this.plus_20p_x = []; // +20% Ref Circle\n\n          this.plus_20p_y = [];\n          this.chroma_isolines_labels = [];\n        } else {\n          this.createChromaIsolines();\n        } // console.log(\n        //   \"New Props: chroma_isolines = \",\n        //   this.state.chroma_isolines_bool\n        // );\n\n      });\n    }\n  }\n  /**\n   * Setting up the bin lines\n   */\n\n\n  /**\n   * Render function for the CVGPlot\n   */\n  render() {\n    return React.createElement(\"div\", {\n      style: this.small_style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      useResizeHandler: true,\n      style: this.style,\n      data: [...this.bin_lines, {\n        x: [0],\n        y: [0],\n        type: \"scatter\",\n        mode: \"markers+lines\",\n        marker: {\n          size: 22,\n          width: 50,\n          color: \"white\",\n          symbol: \"circle\",\n          opacity: 0.8\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        x: [0],\n        y: [0],\n        type: \"scatter\",\n        mode: \"markers+lines\",\n        marker: {\n          size: 30,\n          width: 50,\n          color: \"white\",\n          symbol: \"circle\",\n          opacity: 0.7\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        x: [0],\n        y: [0],\n        type: \"scatter\",\n        mode: \"markers\",\n        marker: {\n          size: 8,\n          width: 50,\n          color: \"grey\",\n          symbol: \"cross-thin-open\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        name: \"-20%\",\n        x: this.minus_20p_x,\n        y: this.minus_20p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        name: \"-10%\",\n        x: this.minus_10p_x,\n        y: this.minus_10p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        name: \"0%\",\n        x: this.black_x,\n        y: this.black_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"black\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        name: \"10%\",\n        x: this.plus_10p_x,\n        y: this.plus_10p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        name: \"20%\",\n        x: this.plus_20p_x,\n        y: this.plus_20p_y,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"white\"\n        },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }, {\n        name: \"Test\",\n        x: this.xtest,\n        y: this.ytest,\n        type: \"scatter\",\n        line: {\n          shape: \"spline\",\n          smoothing: 1.3\n        },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: {\n          color: \"red\"\n        }\n      }, {\n        /*\n        name: \"Reference\",\n        x: this.xref,\n        y: this.yref,\n        type: \"scatter\",\n        line: { shape: \"spline\", smoothing: 1.3 },\n        mode: \"lines+points\",\n        connectgaps: true,\n        marker: { color: \"black\" }\n        */\n      }],\n      layout: {\n        showlegend: false,\n        autosize: true,\n        //width: this.x_size,\n        height: this.y_size,\n        margin: {\n          t: 0,\n          l: 0,\n          b: 0,\n          r: 0\n        },\n        xaxis: {\n          visible: false,\n          range: [-1.5, 1.5],\n          title: {\n            text: \"\"\n          }\n        },\n        yaxis: {\n          visible: false,\n          range: [-1.5, 1.5],\n          title: {\n            text: \"\"\n          },\n          tickformat: \"\"\n        },\n        images: [{\n          source: \"https://i.imgur.com/QkpOGSJ.png\",\n          xref: \"x\",\n          yref: \"y\",\n          x: -1.5,\n          y: 1.5,\n          sizex: 3,\n          sizey: 3,\n          sizing: \"stretch\",\n          layer: \"below\"\n        }],\n        annotations: [...this.arrows, {\n          x: this.rf_label[0],\n          y: this.rf_label[1],\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.rf, \"</b><br /><i>R</i><sub>f</sub>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          align: \"left\",\n          ax: 0,\n          ay: 0\n        }, {\n          x: this.rg_label[0],\n          y: this.rg_label[1],\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<b>\".concat(this.rg, \"</b><br /><i>R</i><sub>g</sub>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          align: \"right\",\n          ax: 0,\n          ay: 0\n        }, {\n          x: this.duv_label[0],\n          y: this.duv_label[1],\n          xref: \"x\",\n          yref: \"y\",\n          text: \"<i>D</i><sub>uv</sub><br /><b>\".concat(this.duv, \"</b><br />\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          align: \"right\",\n          ax: 0,\n          ay: 0\n        }, {\n          x: this.cct_label[0],\n          y: this.cct_label[1],\n          xref: \"x\",\n          yref: \"y\",\n          text: \"CCT<br><b>\".concat(this.cct, \" K</b>\"),\n          font: {\n            size: 20,\n            color: \"black\"\n          },\n          align: \"left\",\n          ax: 0,\n          ay: 0\n        }, ...this.chroma_isolines_labels, ...this.bin_numbers]\n      },\n      config: {\n        displaylogo: false,\n        modeBarButtons: [[\"toImage\"]],\n        responsive: true,\n        toImageButtonOptions: {\n          format: \"png\",\n          // one of png, svg, jpeg, webp\n          filename: \"Color Vector Graph\",\n          height: 900,\n          width: 900,\n          scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }), this.small_bool ? React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }, \"Color Vector Graphic\"), \"The Color Vector Graphic (CVG) shows a normalized version of the\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }), \"average change in (a', b') coordinates of CAM02-UCS for the CES\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }), \"within each hue-angle bin. Alternative versions of the CVG are\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720\n      },\n      __self: this\n    }), \"available in the CVG sheet. Elements of this graphic can be turned\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }), \"on or off using the menu on the Main sheet (requires recalculation).\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }), \"[Background is for visual orientation only]\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default CVGPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/CVGPlot.jsx"],"names":["React","Component","Plot","CVGPlot","constructor","props","createBinLines","bin_lines","x","y","mode","name","line","dash","width","marker","color","showlegend","hoverinfo","createBinNumbers","bin_numbers","theta","i","Math","cos","PI","sin","xref","yref","text","font","size","ax","ay","createChromaIsolines","minus_20p_x","minus_20p_y","minus_10p_x","minus_10p_y","even_x","even_y","plus_10p_x","plus_10p_y","plus_20p_x","plus_20p_y","chroma_isolines_labels","state","bin_lines_bool","options","bin_dividers","xtest","push","ytest","rf","round","rg","cct","duv","small_bool","small","arrow_size","x_size","y_size","rg_label","rf_label","duv_label","cct_label","style","height","small_style","position","display","padding","active","black_x","black_y","distance","sqrt","pow","toFixed","console","log","colors","arrows","i_arrow","showarrow","arrowhead","arrowwidth","axref","ayref","arrowcolor","componentWillReceiveProps","nextProps","setState","bin_labels","bin_numbers_bool","chroma_isolines","chroma_isolines_bool","render","type","symbol","opacity","shape","smoothing","connectgaps","autosize","margin","t","l","b","r","xaxis","visible","range","title","yaxis","tickformat","images","source","sizex","sizey","sizing","layer","annotations","align","displaylogo","modeBarButtons","responsive","toImageButtonOptions","format","filename","scale"],"mappings":"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","sourcesContent":["/**\n * Color Vector Graph\n *\n * A component for the Color Vector Graph specified in the Excel calculator.\n * This graph is fairly extensive and has a lot of moving parts.\n *\n * In it's basic form it is a scatter plot that creates a circular ploygon with the data\n * from (path_x Test, path_y Test) points and (path_x Ref, path_y Ref) points to create two\n * different circles.\n *\n * We then create different color vectors pointing from each Reference point to the Test Point.\n * The Colors are just for aesthetic purposes and are not a standard. However, they are the same\n * colors in the same odrder as the ones from \"Numerical Results\" when we colors the huebins.\n *\n * From there we create 5 White Reference circles that are -20%, -10%, 0%, +10%, and +20% of\n * the unit circle.\n *\n * Then we overlay the Huebin lines by using some simple geometry and play the huebin labels\n * a little further out than the white reference cirlces\n *\n * Finally, we position the numerical data in all four corners of the graph\n *\n * TODO - Create the ability to turn off the Huebin Labels, Huebin Dividers, and Chroma Isolines. All seperate functionality, mix and match.\n * TODO - Add the first point to the end of each White ref circle to close it\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n/**\n * CVG Plot Class\n */\nexport class CVGPlot extends Component {\n  /**\n   * Very extensive Constructor method. A lot of data is being used in the\n   * graph and some of it has to be rounded, other has to be calculated such\n   * as the huebin lines and the white reference circles.\n   * IMPORTANT - there is a prop called \"small\". It is a boolean to differentiate\n   * the \"Basic Results\" page CVG graph from the \"Graphical Results\" CVG graph.\n   * The Basic Results CVG graph is larger thus it is not needed to specify what\n   * small is, however, you need to specify small as {true} in the Graphical Results page.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      bin_lines_bool: this.props.options.bin_dividers\n    };\n    this.xtest = this.props.xtest; //x tests values\n    this.xtest.push(this.xtest[0]); //Make it completely round\n    this.ytest = this.props.ytest; //y tests values\n    this.ytest.push(this.ytest[0]); //Make it completely round\n\n    this.xref = this.props.xref; //x Ref values\n    this.xref.push(this.xref[0]); //Make it completely round\n    this.yref = this.props.yref; //x Ref values\n    this.yref.push(this.yref[0]); //Make it completely round\n\n    /**\n     * Rounding the information on the graph\n     */\n    this.rf = Math.round(this.props.rf);\n    this.rg = Math.round(this.props.rg);\n    this.cct = Math.round(this.props.cct);\n    this.duv = Math.round(this.props.duv * 10000) / 10000;\n    this.small_bool = this.props.small;\n    /**\n     * Determine if we are dealing with with the small version (Graphical Page)\n     * or the Bigger (Basic Results) Plot\n     */\n    if (this.small_bool) {\n      this.arrow_size = 2;\n      this.x_size = 325;\n      this.y_size = 325;\n      this.rg_label = [1.25, 1.2];\n      this.rf_label = [-1.25, 1.2];\n      this.duv_label = [1.1, -1.25];\n      this.cct_label = [-1.1, -1.25];\n      this.style = { width: 325, height: 325 };\n      this.small_style = {\n        position: \"inherit\",\n        display: \"inline-block\",\n        padding: \"50 50 50 50\"\n      };\n    } else if (this.props.active === \"Intermediate\") {\n      this.arrow_size = 3;\n      this.style = { width: \"100%\" };\n      this.x_size = 650;\n      this.y_size = 650;\n      this.rg_label = [1.35, 1.3];\n      this.rf_label = [-1.35, 1.3];\n      this.duv_label = [1.2, -1.25];\n      this.cct_label = [-1.2, -1.25];\n    } else {\n      this.arrow_size = 3;\n      this.style = { width: \"100%\" };\n      this.x_size = 800;\n      this.y_size = 800;\n      this.rg_label = [1.35, 1.3];\n      this.rf_label = [-1.35, 1.3];\n      this.duv_label = [1.2, -1.25];\n      this.cct_label = [-1.2, -1.25];\n    }\n    /**\n     * Setting up the Reference Circles\n     */\n    this.minus_20p_x = []; // -20% Ref Circle\n    this.minus_20p_y = [];\n    this.minus_10p_x = []; // -10% Ref Circle\n    this.minus_10p_y = [];\n    this.even_x = []; // 0% Ref Circle\n    this.even_y = [];\n    this.plus_10p_x = []; // +10% Ref Circle\n    this.plus_10p_y = [];\n    this.plus_20p_x = []; // +20% Ref Circle\n    this.plus_20p_y = [];\n    this.bin_lines = [];\n    this.chroma_isolines_labels = [];\n    this.black_x = [];\n    this.black_y = [];\n\n    var theta;\n    for (theta = 1; theta <= 361; theta++) {\n      this.black_x[theta] = Math.cos((theta * Math.PI) / 180);\n      this.black_y[theta] = Math.sin((theta * Math.PI) / 180);\n    }\n    var i;\n    for (i = 0; i < 16; i++) {\n      var distance = Math.sqrt(\n        Math.pow(this.xref[i] - this.xtest[i], 2) +\n          Math.pow(this.yref[i] - this.ytest[i], 2)\n      );\n      if (distance.toFixed(3) <= 0.029) {\n        if (this.xref[i] > this.xtest[i]) {\n          this.xref[i] = this.xtest[i] + 0.04;\n          this.yref[i] = this.ytest[i] + 0.04;\n        } else {\n          this.xref[i] = this.xtest[i] - 0.04;\n          this.yref[i] = this.ytest[i] - 0.04;\n        }\n      }\n      console.log(\n        `${i}: (${this.xref[i]}, ${this.yref[i]}) --> (${this.xtest[i]}, ${this.ytest[i]}) \\t Dist: ${distance}`\n      );\n    }\n\n    this.createBinLines();\n    this.createBinNumbers();\n    this.createChromaIsolines();\n\n    /**\n     * An array of the vector colors\n     */\n    const colors = [\n      \"#e32f32\",\n      \"#e54f4f\",\n      \"#fa843b\",\n      \"#feb73c\",\n      \"#cbcb50\",\n      \"#7fb951\",\n      \"#44c00b\",\n      \"#109c7b\", //8\n      \"#22bbaf\", //9\n      \"#13a2bb\", //10\n      \"#0f82c0\", //11\n      \"#3c62a8\", //12\n      \"#6d67ac\", //13\n      \"#6a4e84\", //14\n      \"#9d69a0\", //15\n      \"#a65081\" //16\n    ];\n    /**\n     * Setting up the vector arrays\n     */\n    this.arrows = [];\n    var i_arrow;\n    for (i = 0; i < 16; i++) {\n      i_arrow = {\n        x: this.xtest[i],\n        y: this.ytest[i],\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\",\n        showarrow: true,\n        arrowhead: 2,\n        arrowwidth: this.arrow_size,\n        axref: \"x\",\n        ayref: \"y\",\n        ax: this.xref[i],\n        ay: this.yref[i],\n        arrowcolor: colors[i]\n      };\n      this.arrows.push(i_arrow);\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.options.bin_dividers !== null) {\n      this.setState(\n        {\n          bin_lines_bool: nextProps.options.bin_dividers\n        },\n        () => {\n          if (!this.state.bin_lines_bool) {\n            this.bin_lines = [];\n          } else {\n            this.createBinLines();\n          }\n          console.log(\"New Props: bin_lines = \", this.state.bin_lines_bool);\n        }\n      );\n    }\n\n    if (nextProps.options.bin_labels !== null) {\n      this.setState(\n        {\n          bin_numbers_bool: nextProps.options.bin_labels\n        },\n        () => {\n          if (!this.state.bin_numbers_bool) {\n            this.bin_numbers = [];\n          } else {\n            this.createBinNumbers();\n          }\n          console.log(nextProps);\n          console.log(\"New Props: bin_numbers = \", this.state.bin_numbers_bool);\n        }\n      );\n    }\n\n    if (nextProps.options.chroma_isolines !== null) {\n      this.setState(\n        {\n          chroma_isolines_bool: nextProps.options.chroma_isolines\n        },\n        () => {\n          if (!this.state.chroma_isolines_bool) {\n            this.minus_20p_x = []; // -20% Ref Circle\n            this.minus_20p_y = [];\n            this.minus_10p_x = []; // -10% Ref Circle\n            this.minus_10p_y = [];\n            this.even_x = []; // 0% Ref Circle\n            this.even_y = [];\n            this.plus_10p_x = []; // +10% Ref Circle\n            this.plus_10p_y = [];\n            this.plus_20p_x = []; // +20% Ref Circle\n            this.plus_20p_y = [];\n            this.chroma_isolines_labels = [];\n          } else {\n            this.createChromaIsolines();\n          }\n          // console.log(\n          //   \"New Props: chroma_isolines = \",\n          //   this.state.chroma_isolines_bool\n          // );\n        }\n      );\n    }\n  }\n\n  /**\n   * Setting up the bin lines\n   */\n  createBinLines = () => {\n    this.bin_lines = [\n      {\n        x: [-1.5, 1.5],\n        y: [0, 0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-1.39, 1.39],\n        y: [-0.57, 0.57],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-1.06, 1.06],\n        y: [-1.06, 1.06],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-0.57, 0.57],\n        y: [-1.39, 1.39],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [0, 0],\n        y: [-1.5, 1.5],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [0.57, -0.57],\n        y: [-1.39, 1.39],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [1.06, -1.06],\n        y: [-1.06, 1.06],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [1.39, -1.39],\n        y: [-0.57, 0.57],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }\n    ];\n  };\n  /**\n   * Setting up the Bin Numbers\n   */\n  createBinNumbers = () => {\n    this.bin_numbers = [];\n    var theta = 11.5;\n    var i;\n    for (i = 1; i <= 16; i++) {\n      var x = 1.35 * Math.cos((theta * Math.PI) / 180);\n      var y = 1.35 * Math.sin((theta * Math.PI) / 180);\n      theta += 22.5;\n      this.bin_numbers[i - 1] = {\n        x: x,\n        y: y,\n        xref: \"x\",\n        yref: \"y\",\n        text: `${i}`,\n        font: {\n          size: 12,\n          color: \"grey\"\n        },\n        ax: 0,\n        ay: 0\n      };\n    }\n  };\n\n  createChromaIsolines = () => {\n    var theta;\n    var i;\n    for (theta = 1; theta <= 361; theta++) {\n      // -20% Ref Circle\n      this.minus_20p_x[theta] = 0.8 * Math.cos((theta * Math.PI) / 180);\n      this.minus_20p_y[theta] = 0.8 * Math.sin((theta * Math.PI) / 180);\n\n      // -10% Ref Circle\n      this.minus_10p_x[theta] = 0.9 * Math.cos((theta * Math.PI) / 180);\n      this.minus_10p_y[theta] = 0.9 * Math.sin((theta * Math.PI) / 180);\n\n      // 0% Ref Circle\n      this.even_x[theta] = Math.cos((theta * Math.PI) / 180);\n      this.even_y[theta] = Math.sin((theta * Math.PI) / 180);\n\n      // +10% Ref Circle\n      this.plus_10p_x[theta] = 1.1 * Math.cos((theta * Math.PI) / 180);\n      this.plus_10p_y[theta] = 1.1 * Math.sin((theta * Math.PI) / 180);\n\n      //+20% Ref Circle\n      this.plus_20p_x[theta] = 1.2 * Math.cos((theta * Math.PI) / 180);\n      this.plus_20p_y[theta] = 1.2 * Math.sin((theta * Math.PI) / 180);\n    }\n    this.chroma_isolines_labels = [\n      {\n        x: -0.15,\n        y: -0.7,\n        xref: \"x\",\n        yref: \"y\",\n        text: `-20%`,\n        font: {\n          size: 11,\n          color: \"white\"\n        },\n        ax: 0,\n        ay: 0\n      },\n      {\n        x: -0.25,\n        y: -1.11,\n        xref: \"x\",\n        yref: \"y\",\n        text: `+20%`,\n        font: {\n          size: 11,\n          color: \"white\"\n        },\n        ax: 0,\n        ay: 0\n      }\n    ];\n  };\n  /**\n   * Render function for the CVGPlot\n   */\n  render() {\n    return (\n      <div style={this.small_style}>\n        <div align=\"center\">\n          <Plot\n            useResizeHandler={true}\n            style={this.style}\n            data={[\n              ...this.bin_lines,\n              {\n                x: [0],\n                y: [0],\n                type: \"scatter\",\n                mode: \"markers+lines\",\n                marker: {\n                  size: 22,\n                  width: 50,\n                  color: \"white\",\n                  symbol: \"circle\",\n                  opacity: 0.8\n                },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                x: [0],\n                y: [0],\n                type: \"scatter\",\n                mode: \"markers+lines\",\n                marker: {\n                  size: 30,\n                  width: 50,\n                  color: \"white\",\n                  symbol: \"circle\",\n                  opacity: 0.7\n                },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                x: [0],\n                y: [0],\n                type: \"scatter\",\n                mode: \"markers\",\n                marker: {\n                  size: 8,\n                  width: 50,\n                  color: \"grey\",\n                  symbol: \"cross-thin-open\"\n                },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"-20%\",\n                x: this.minus_20p_x,\n                y: this.minus_20p_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"white\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"-10%\",\n                x: this.minus_10p_x,\n                y: this.minus_10p_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"white\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"0%\",\n                x: this.black_x,\n                y: this.black_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"black\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"10%\",\n                x: this.plus_10p_x,\n                y: this.plus_10p_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"white\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"20%\",\n                x: this.plus_20p_x,\n                y: this.plus_20p_y,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"white\" },\n                showlegend: false,\n                hoverinfo: \"skip\"\n              },\n              {\n                name: \"Test\",\n                x: this.xtest,\n                y: this.ytest,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"red\" }\n              },\n              {\n                /*\n                name: \"Reference\",\n                x: this.xref,\n                y: this.yref,\n                type: \"scatter\",\n                line: { shape: \"spline\", smoothing: 1.3 },\n                mode: \"lines+points\",\n                connectgaps: true,\n                marker: { color: \"black\" }\n                */\n              }\n            ]}\n            layout={{\n              showlegend: false,\n              autosize: true,\n              //width: this.x_size,\n              height: this.y_size,\n\n              margin: {\n                t: 0,\n                l: 0,\n                b: 0,\n                r: 0\n              },\n              xaxis: {\n                visible: false,\n                range: [-1.5, 1.5],\n                title: {\n                  text: \"\"\n                }\n              },\n              yaxis: {\n                visible: false,\n                range: [-1.5, 1.5],\n                title: {\n                  text: \"\"\n                },\n                tickformat: \"\"\n              },\n              images: [\n                {\n                  source: \"https://i.imgur.com/QkpOGSJ.png\",\n                  xref: \"x\",\n                  yref: \"y\",\n                  x: -1.5,\n                  y: 1.5,\n                  sizex: 3,\n                  sizey: 3,\n                  sizing: \"stretch\",\n                  layer: \"below\"\n                }\n              ],\n              annotations: [\n                ...this.arrows,\n                {\n                  x: this.rf_label[0],\n                  y: this.rf_label[1],\n                  xref: \"x\",\n                  yref: \"y\",\n                  text: `<b>${this.rf}</b><br /><i>R</i><sub>f</sub>`,\n                  font: {\n                    size: 20,\n                    color: \"black\"\n                  },\n                  align: \"left\",\n                  ax: 0,\n                  ay: 0\n                },\n                {\n                  x: this.rg_label[0],\n                  y: this.rg_label[1],\n                  xref: \"x\",\n                  yref: \"y\",\n                  text: `<b>${this.rg}</b><br /><i>R</i><sub>g</sub>`,\n                  font: {\n                    size: 20,\n                    color: \"black\"\n                  },\n                  align: \"right\",\n                  ax: 0,\n                  ay: 0\n                },\n                {\n                  x: this.duv_label[0],\n                  y: this.duv_label[1],\n                  xref: \"x\",\n                  yref: \"y\",\n                  text: `<i>D</i><sub>uv</sub><br /><b>${this.duv}</b><br />`,\n                  font: {\n                    size: 20,\n                    color: \"black\"\n                  },\n                  align: \"right\",\n                  ax: 0,\n                  ay: 0\n                },\n                {\n                  x: this.cct_label[0],\n                  y: this.cct_label[1],\n                  xref: \"x\",\n                  yref: \"y\",\n                  text: `CCT<br><b>${this.cct} K</b>`,\n                  font: {\n                    size: 20,\n                    color: \"black\"\n                  },\n                  align: \"left\",\n                  ax: 0,\n                  ay: 0\n                },\n                ...this.chroma_isolines_labels,\n                ...this.bin_numbers\n              ]\n            }}\n            config={{\n              displaylogo: false,\n              modeBarButtons: [[\"toImage\"]],\n              responsive: true,\n              toImageButtonOptions: {\n                format: \"png\", // one of png, svg, jpeg, webp\n                filename: \"Color Vector Graph\",\n                height: 900,\n                width: 900,\n                scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n              }\n            }}\n          />\n        </div>\n        <br />\n        {this.small_bool ? (\n          <div align=\"center\">\n            <h5>Color Vector Graphic</h5>\n            The Color Vector Graphic (CVG) shows a normalized version of the{\" \"}\n            <br />\n            average change in (a', b') coordinates of CAM02-UCS for the CES{\" \"}\n            <br />\n            within each hue-angle bin. Alternative versions of the CVG are{\" \"}\n            <br />\n            available in the CVG sheet. Elements of this graphic can be turned{\" \"}\n            <br />\n            on or off using the menu on the Main sheet (requires recalculation).{\" \"}\n            <br />\n            [Background is for visual orientation only]\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CVGPlot;\n"]},"metadata":{},"sourceType":"module"}