'use strict';

require('whatwg-fetch');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _react3 = require('@storybook/react');

var _addonActions = require('@storybook/addon-actions');

var _reactBootstrap = require('react-bootstrap');

var _index = require('../index');

var C = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// eslint-disable-line
/* eslint import/no-extraneous-dependencies: ["error", {"devDependencies": true}] */
(0, _react3.storiesOf)('Tab', module).add('in PageHeader', function () {
  return _react2['default'].createElement(
    C.PageHeader,
    { className: 'amethyst invert' },
    _react2['default'].createElement(
      _reactBootstrap.Row,
      null,
      _react2['default'].createElement(
        _reactBootstrap.Col,
        { sm: 6 },
        _react2['default'].createElement(
          _reactBootstrap.FormGroup,
          { controlId: 'formLargeText', className: 'PnnlPageTitle invert' },
          _react2['default'].createElement(_reactBootstrap.FormControl, { bsSize: 'lg', placeholder: 'Enter text', 'aria-label': 'Page Title' }),
          _react2['default'].createElement(_reactBootstrap.HelpBlock, null)
        )
      ),
      _react2['default'].createElement(
        _reactBootstrap.Col,
        { sm: 4 },
        _react2['default'].createElement(
          C.Progress,
          { activeStep: 1, invert: true },
          _react2['default'].createElement(C.ProgressStep, { key: '1', onClick: (0, _addonActions.action)('clicked step 1'), label: 'Testing 1' }),
          _react2['default'].createElement(C.ProgressStep, { key: '2', onClick: (0, _addonActions.action)('clicked step 2'), label: 'Testing 2' }),
          _react2['default'].createElement(C.ProgressStep, { key: '3', onClick: (0, _addonActions.action)('clicked step 3'), label: 'Testing 3' }),
          _react2['default'].createElement(C.ProgressStep, { key: '4', onClick: (0, _addonActions.action)('clicked step 4'), label: 'Testing 4' })
        )
      ),
      _react2['default'].createElement(
        _reactBootstrap.Col,
        { sm: 2 },
        _react2['default'].createElement(C.AvatarInfo, { title: 'Geoff Elliott', subTitle: 'Engineer', align: 'center', size: 'sm' })
      )
    ),
    _react2['default'].createElement(
      _reactBootstrap.Row,
      null,
      _react2['default'].createElement(
        _reactBootstrap.Col,
        { sm: 12 },
        _react2['default'].createElement(
          _reactBootstrap.Nav,
          { bsStyle: 'tabs', activeKey: '1' },
          _react2['default'].createElement(
            C.Tab,
            { to: '/details', validationState: 'error', active: true },
            'Details'
          ),
          _react2['default'].createElement(
            C.Tab,
            { to: '/procedure' },
            'Procedure'
          ),
          _react2['default'].createElement(
            C.Tab,
            { to: '/hazards' },
            _react2['default'].createElement(C.Icon, { icon: 'fire' }),
            ' Hazards'
          ),
          _react2['default'].createElement(
            C.Tab,
            { to: '/spaces', validationState: 'warning' },
            'Spaces'
          ),
          _react2['default'].createElement(
            C.Tab,
            { to: '/training-controlls/' },
            'Training & Controls'
          ),
          _react2['default'].createElement(
            _reactBootstrap.NavDropdown,
            { eventKey: '6', title: 'Dropdown', id: 'nav-dropdown' },
            _react2['default'].createElement(
              _reactBootstrap.MenuItem,
              { eventKey: '6.1' },
              'Action'
            ),
            _react2['default'].createElement(
              _reactBootstrap.MenuItem,
              { eventKey: '6.2' },
              'Another action'
            ),
            _react2['default'].createElement(
              _reactBootstrap.MenuItem,
              { eventKey: '6.3' },
              'Something else here'
            ),
            _react2['default'].createElement(_reactBootstrap.MenuItem, { divider: true }),
            _react2['default'].createElement(
              _reactBootstrap.MenuItem,
              { eventKey: '6.4' },
              'Separated link'
            )
          )
        )
      )
    )
  );
}); // eslint-disable-line