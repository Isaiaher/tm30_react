{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/ELFPlot.jsx\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nexport class ELFPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.spd_test = this.props.test;\n    this.spd_ref = this.props.ref_spd;\n    console.log(\"SPD_Test = \");\n    console.log(this.spd_test);\n    var i;\n    console.log(\"SPD_Ref = \");\n    console.log(this.spd_ref);\n    this.wavelength = [];\n\n    for (i = 0; i < 400; i++) {\n      this.wavelength[i] = i + 380;\n    }\n\n    console.log(\"Wavelengths = \");\n    console.log(this.wavelength);\n    this.test = [];\n\n    for (i = 0; i <= 400; i++) {//this.test[i] = this.spd_test[i];\n    }\n  }\n\n  render() {\n    return React.createElement(Plot, {\n      data: [{\n        x: this.wavelength,\n        y: this.spd_test,\n        type: \"scatter\",\n        mode: \"lines+points\",\n        marker: {\n          color: \"red\"\n        }\n      }],\n      layout: {\n        width: 500,\n        height: 400,\n        margin: {\n          l: 60,\n          r: 0,\n          b: 45,\n          t: 10,\n          pad: 4\n        },\n        xaxis: {\n          title: {\n            text: \"Wavelength (nm)\"\n          }\n        },\n        yaxis: {\n          title: {\n            text: \"Radiant Power \u000b(Equal Luminous FLux)\"\n          },\n          tickformat: \"\",\n          showticklabels: false\n        }\n      },\n      config: {\n        displayModeBar: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n}\nexport default ELFPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/ELFPlot.jsx"],"names":["React","Component","Plot","ELFPlot","constructor","props","spd_test","test","spd_ref","ref_spd","console","log","i","wavelength","render","x","y","type","mode","marker","color","width","height","margin","l","r","b","t","pad","xaxis","title","text","yaxis","tickformat","showticklabels","displayModeBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKD,KAAL,CAAWE,IAA3B;AACA,SAAKC,OAAL,GAAe,KAAKH,KAAL,CAAWI,OAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,QAAjB;AACA,QAAIM,CAAJ;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,OAAjB;AAEA,SAAKK,UAAL,GAAkB,EAAlB;;AACA,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,EAAtB,EAA0B;AACxB,WAAKC,UAAL,CAAgBD,CAAhB,IAAqBA,CAAC,GAAG,GAAzB;AACD;;AAEDF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,UAAjB;AAEA,SAAKN,IAAL,GAAY,EAAZ;;AACA,SAAKK,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,GAAjB,EAAsBA,CAAC,EAAvB,EAA2B,CACzB;AACD;AACF;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,CAAC,EAAE,KAAKF,UADV;AAEEG,QAAAA,CAAC,EAAE,KAAKV,QAFV;AAGEW,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,IAAI,EAAE,cAJR;AAKEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AALV,OADI,CADR;AAUE,MAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,GADD;AAENC,QAAAA,MAAM,EAAE,GAFF;AAGNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE,EADG;AAENC,UAAAA,CAAC,EAAE,CAFG;AAGNC,UAAAA,CAAC,EAAE,EAHG;AAINC,UAAAA,CAAC,EAAE,EAJG;AAKNC,UAAAA,GAAG,EAAE;AALC,SAHF;AAUNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD;AADF,SAVD;AAeNC,QAAAA,KAAK,EAAE;AACLF,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WADF;AAILE,UAAAA,UAAU,EAAE,EAJP;AAKLC,UAAAA,cAAc,EAAE;AALX;AAfD,OAVV;AAiCE,MAAA,MAAM,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAjCV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAqCD;;AA/DoC;AAkEvC,eAAehC,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport class ELFPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.spd_test = this.props.test;\n    this.spd_ref = this.props.ref_spd;\n    console.log(\"SPD_Test = \");\n    console.log(this.spd_test);\n    var i;\n\n    console.log(\"SPD_Ref = \");\n    console.log(this.spd_ref);\n\n    this.wavelength = [];\n    for (i = 0; i < 400; i++) {\n      this.wavelength[i] = i + 380;\n    }\n\n    console.log(\"Wavelengths = \");\n    console.log(this.wavelength);\n\n    this.test = [];\n    for (i = 0; i <= 400; i++) {\n      //this.test[i] = this.spd_test[i];\n    }\n  }\n  render() {\n    return (\n      <Plot\n        data={[\n          {\n            x: this.wavelength,\n            y: this.spd_test,\n            type: \"scatter\",\n            mode: \"lines+points\",\n            marker: { color: \"red\" }\n          }\n        ]}\n        layout={{\n          width: 500,\n          height: 400,\n          margin: {\n            l: 60,\n            r: 0,\n            b: 45,\n            t: 10,\n            pad: 4\n          },\n          xaxis: {\n            title: {\n              text: \"Wavelength (nm)\"\n            }\n          },\n          yaxis: {\n            title: {\n              text: \"Radiant Power \u000b(Equal Luminous FLux)\"\n            },\n            tickformat: \"\",\n            showticklabels: false\n          }\n        }}\n        config={{ displayModeBar: false }}\n      />\n    );\n  }\n}\n\nexport default ELFPlot;\n"]},"metadata":{},"sourceType":"module"}