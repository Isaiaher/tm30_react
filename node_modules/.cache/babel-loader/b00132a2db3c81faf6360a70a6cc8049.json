{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Tabs/Simple.jsx\";\nimport React, { Component } from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport CVGPlot from \"../Plots/CVGPlot\";\nimport Pdf from \"react-to-pdf\";\nconst ref = React.createRef();\nconst options = {\n  orientation: \"landscape\",\n  unit: \"px\",\n  format: [1080, 1080]\n};\nexport class Simple extends Component {\n  constructor(props) {\n    super(props);\n    this.tm30 = this.props.tm30; //The data from the JSON file\n\n    this.input = this.props.input;\n    this.state = {\n      options: this.props.options\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.options !== null) {\n      this.setState({\n        options: nextProps.options\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Col, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Row, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"ANSI/IES TM-30-18 Color Rendition\")), React.createElement(CVGPlot, {\n      xtest: this.tm30.path_xtest,\n      ytest: this.tm30.path_ytest,\n      xref: this.tm30.path_xref,\n      yref: this.tm30.path_yref,\n      rf: this.tm30.rg,\n      rg: this.tm30.rf,\n      cct: this.tm30.CCT[0],\n      duv: this.tm30.DUV[0],\n      options: this.state.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Row, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Color are for visual orientation purpose only. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"Created with the ANSI/IES TM-30-18 Web Calculator\"))))));\n  }\n\n}\nexport default Simple;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Tabs/Simple.jsx"],"names":["React","Component","Card","Grid","Row","Col","CVGPlot","Pdf","ref","createRef","options","orientation","unit","format","Simple","constructor","props","tm30","input","state","componentWillReceiveProps","nextProps","setState","render","width","color","path_xtest","path_ytest","path_xref","path_yref","rg","rf","CCT","DUV"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,MAAMC,GAAG,GAAGR,KAAK,CAACS,SAAN,EAAZ;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,WADC;AAEdC,EAAAA,IAAI,EAAE,IAFQ;AAGdC,EAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP;AAHM,CAAhB;AAMA,OAAO,MAAMC,MAAN,SAAqBb,SAArB,CAA+B;AACpCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,IAAL,GAAY,KAAKD,KAAL,CAAWC,IAAvB,CAFiB,CAEY;;AAC7B,SAAKC,KAAL,GAAa,KAAKF,KAAL,CAAWE,KAAxB;AACA,SAAKC,KAAL,GAAa;AACXT,MAAAA,OAAO,EAAE,KAAKM,KAAL,CAAWN;AADT,KAAb;AAGD;;AACDU,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACX,OAAV,KAAsB,IAA1B,EAAgC;AAC9B,WAAKY,QAAL,CAAc;AACZZ,QAAAA,OAAO,EAAEW,SAAS,CAACX;AADP,OAAd;AAGD;AACF;;AACDa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AADF,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AADF,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,CALF,EAcE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAE,KAAKR,IAAL,CAAUS,UADnB;AAEE,MAAA,KAAK,EAAE,KAAKT,IAAL,CAAUU,UAFnB;AAGE,MAAA,IAAI,EAAE,KAAKV,IAAL,CAAUW,SAHlB;AAIE,MAAA,IAAI,EAAE,KAAKX,IAAL,CAAUY,SAJlB;AAKE,MAAA,EAAE,EAAE,KAAKZ,IAAL,CAAUa,EALhB;AAME,MAAA,EAAE,EAAE,KAAKb,IAAL,CAAUc,EANhB;AAOE,MAAA,GAAG,EAAE,KAAKd,IAAL,CAAUe,GAAV,CAAc,CAAd,CAPP;AAQE,MAAA,GAAG,EAAE,KAAKf,IAAL,CAAUgB,GAAV,CAAc,CAAd,CARP;AASE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWT,OATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAyBE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DACiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjD,sDAzBF,CADF,CADF,CADF,CADF,CADF;AAwCD;;AAzDmC;AA4DtC,eAAeI,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport CVGPlot from \"../Plots/CVGPlot\";\nimport Pdf from \"react-to-pdf\";\nconst ref = React.createRef();\nconst options = {\n  orientation: \"landscape\",\n  unit: \"px\",\n  format: [1080, 1080]\n};\n\nexport class Simple extends Component {\n  constructor(props) {\n    super(props);\n    this.tm30 = this.props.tm30; //The data from the JSON file\n    this.input = this.props.input;\n    this.state = {\n      options: this.props.options\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.options !== null) {\n      this.setState({\n        options: nextProps.options\n      });\n    }\n  }\n  render() {\n    return (\n      <Grid>\n        <Card>\n          <Row>\n            <Col align=\"center\">\n              <div\n                style={{\n                  width: \"80%\"\n                }}\n              >\n                <Row align=\"center\">\n                  <h2\n                    style={{\n                      color: \"black\"\n                    }}\n                  >\n                    ANSI/IES TM-30-18 Color Rendition\n                  </h2>\n                </Row>\n                <CVGPlot\n                  xtest={this.tm30.path_xtest}\n                  ytest={this.tm30.path_ytest}\n                  xref={this.tm30.path_xref}\n                  yref={this.tm30.path_yref}\n                  rf={this.tm30.rg}\n                  rg={this.tm30.rf}\n                  cct={this.tm30.CCT[0]}\n                  duv={this.tm30.DUV[0]}\n                  options={this.state.options}\n                />\n                <Row align=\"center\">\n                  Color are for visual orientation purpose only. <br />\n                  Created with the ANSI/IES TM-30-18 Web Calculator\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\nexport default Simple;\n"]},"metadata":{},"sourceType":"module"}