{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Calculator/Sections/Paste.jsx\";\n\n/**\n * Paste.\n *\n * A component for the Paste option of the calculator.\n * A user can paste in an SPD and run the TM30\n * Calculation with that input.\n *\n * !The backend can not handle anything that is not a 380-780 by 1 step SPD as of 11.07.2018\n *\n * TODO Implement the Linear Interpolation functionality to the Pasting option.\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/es/Button\";\nimport { withRouter } from \"react-router-dom\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\";\nimport axios from \"axios\";\n/**\n * Paste Class\n */\n\nexport class Paste extends Component {\n  /**\n   * Constructor that sets the state and binds some handler functions\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n\n    this.handleSPDChange = event => {\n      this.setState({\n        spd_paste: event.target.value\n      }, function () {\n        console.log(\"setState completed\", this.state);\n\n        if (this.state.spd_paste !== \"\" && this.state.step !== \"\" && this.state.wavelength_end !== \"\" && this.state.wavelength_start !== \"\") {\n          this.setState({\n            disabled: false\n          });\n        } else {\n          this.setState({\n            disabled: true\n          });\n        }\n      });\n    };\n\n    this.handleStartChange = event => {\n      this.setState({\n        wavelength_start: event.target.value\n      }, function () {\n        console.log(\"setState completed\", this.state);\n\n        if (this.state.spd_paste !== \"\" && this.state.step !== \"\" && this.state.wavelength_end !== \"\" && this.state.wavelength_start !== \"\") {\n          this.setState({\n            disabled: false\n          });\n        } else {\n          this.setState({\n            disabled: true\n          });\n        }\n      });\n    };\n\n    this.handleEndChange = event => {\n      this.setState({\n        wavelength_end: event.target.value\n      }, function () {\n        console.log(\"setState completed\", this.state);\n\n        if (this.state.spd_paste !== \"\" && this.state.step !== \"\" && this.state.wavelength_end !== \"\" && this.state.wavelength_start !== \"\") {\n          this.setState({\n            disabled: false\n          });\n        } else {\n          this.setState({\n            disabled: true\n          });\n        }\n      });\n    };\n\n    this.handleStepChange = event => {\n      this.setState({\n        step: event.target.value\n      }, function () {\n        console.log(\"setState completed\", this.state);\n\n        if (this.state.spd_paste !== \"\" && this.state.step !== \"\" && this.state.wavelength_end !== \"\" && this.state.wavelength_start !== \"\") {\n          this.setState({\n            disabled: false\n          });\n        } else {\n          this.setState({\n            disabled: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      spd_paste: \"\",\n      //the SPD string inputed to the text area\n      spd_array: [],\n      //the SPD array that is made from splicing the string\n      loading: false,\n      //Boolean to control the loader\n      data: [],\n      //Data that is returned from the C code\n      wavelength_start: 380,\n      //The starting wavelength with default value of 380\n      wavelength_end: 780,\n      //The ending wavelength with default value of 780\n      step: 1,\n      //The step size with default value of 1\n      disabled: true //Boolean to control if the button is disabled or not. Default is that it is.\n\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSPDChange = this.handleSPDChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    if (this.state.wavelength_start !== 380 || this.state.wavelength_end !== 780 || this.state.step !== 1) {\n      alert(\"Sorry SPDs other than 380-780 by stepd of 1 are not permitted\");\n    } else {\n      this.setState({\n        spd_array: this.state.spd_paste.split(\"\\n\")\n      }, function () {\n        console.log(\"setState completed\", this.state); //event.preventDefault();\n\n        console.log(this.state.spd_array.length);\n\n        if (this.state.spd_array.length == 401) {\n          this.setState({\n            loading: true\n          }, () => {\n            axios.defaults.headers.common = {};\n            axios.defaults.headers.common.accept = \"application/json\";\n            axios.post(\"http://dtn3.pnl.gov:8080/api/tm30Paste\", {\n              //.post(\"http://localhost:5000/api/tm30Paste\", {\n              info: this.state.spd_array\n            }).then(res => {\n              return res.data;\n            }).then(data => {\n              this.setState({\n                loading: false,\n                data: data.data,\n                tableReady: true\n              });\n              /**\n               * Used later to store the data in cache\n               * localStorage.setItem(\"data\", JSON.stringify(this.state.data));\n               */\n\n              /**\n               * Pushes the data to the Reports page and redirects to that page\n               */\n\n              this.props.history.push({\n                pathname: \"/Report\",\n                state: {\n                  data: this.state.data\n                }\n              });\n            });\n          });\n        } else {\n          alert(\"SPD size does not match interval size\");\n        }\n      });\n    }\n  }\n\n  render() {\n    var loading = this.state.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Option C\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Start Wavelength (nm):\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleStartChange,\n      defaultValue: 380,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"End Wavelength (nm):\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleEndChange,\n      defaultValue: 780,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Interval (nm):\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleStepChange,\n      defaultValue: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\",\n        width: \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Paste in your SPD\"), React.createElement(\"textarea\", {\n      rows: \"5\",\n      cols: \"50\",\n      onChange: this.handleSPDChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \" \", \"Calculating Results \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), \" \", React.createElement(LoadingSpinner, {\n      color: \"copper\",\n      size: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), \" \")) : React.createElement(Button, {\n      bsSize: \"sm\",\n      onClick: this.handleSubmit,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Calculate\")));\n  }\n\n}\nexport default withRouter(Paste);","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Calculator/Sections/Paste.jsx"],"names":["React","Component","Button","withRouter","LoadingSpinner","axios","Paste","constructor","props","handleSPDChange","event","setState","spd_paste","target","value","console","log","state","step","wavelength_end","wavelength_start","disabled","handleStartChange","handleEndChange","handleStepChange","spd_array","loading","data","handleSubmit","bind","alert","split","length","defaults","headers","common","accept","post","info","then","res","tableReady","history","push","pathname","render","position","display","width"],"mappings":"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","sourcesContent":["/**\n * Paste.\n *\n * A component for the Paste option of the calculator.\n * A user can paste in an SPD and run the TM30\n * Calculation with that input.\n *\n * !The backend can not handle anything that is not a 380-780 by 1 step SPD as of 11.07.2018\n *\n * TODO Implement the Linear Interpolation functionality to the Pasting option.\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/es/Button\";\nimport { withRouter } from \"react-router-dom\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\";\nimport axios from \"axios\";\n\n/**\n * Paste Class\n */\nexport class Paste extends Component {\n  /**\n   * Constructor that sets the state and binds some handler functions\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      spd_paste: \"\", //the SPD string inputed to the text area\n      spd_array: [], //the SPD array that is made from splicing the string\n      loading: false, //Boolean to control the loader\n      data: [], //Data that is returned from the C code\n      wavelength_start: 380, //The starting wavelength with default value of 380\n      wavelength_end: 780, //The ending wavelength with default value of 780\n      step: 1, //The step size with default value of 1\n      disabled: true //Boolean to control if the button is disabled or not. Default is that it is.\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSPDChange = this.handleSPDChange.bind(this);\n  }\n\n  handleSPDChange = event => {\n    this.setState({ spd_paste: event.target.value }, function() {\n      console.log(\"setState completed\", this.state);\n      if (\n        this.state.spd_paste !== \"\" &&\n        this.state.step !== \"\" &&\n        this.state.wavelength_end !== \"\" &&\n        this.state.wavelength_start !== \"\"\n      ) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    });\n  };\n\n  handleStartChange = event => {\n    this.setState({ wavelength_start: event.target.value }, function() {\n      console.log(\"setState completed\", this.state);\n      if (\n        this.state.spd_paste !== \"\" &&\n        this.state.step !== \"\" &&\n        this.state.wavelength_end !== \"\" &&\n        this.state.wavelength_start !== \"\"\n      ) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    });\n  };\n\n  handleEndChange = event => {\n    this.setState({ wavelength_end: event.target.value }, function() {\n      console.log(\"setState completed\", this.state);\n      if (\n        this.state.spd_paste !== \"\" &&\n        this.state.step !== \"\" &&\n        this.state.wavelength_end !== \"\" &&\n        this.state.wavelength_start !== \"\"\n      ) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    });\n  };\n\n  handleStepChange = event => {\n    this.setState({ step: event.target.value }, function() {\n      console.log(\"setState completed\", this.state);\n      if (\n        this.state.spd_paste !== \"\" &&\n        this.state.step !== \"\" &&\n        this.state.wavelength_end !== \"\" &&\n        this.state.wavelength_start !== \"\"\n      ) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    });\n  };\n\n  handleSubmit(event) {\n    if (\n      this.state.wavelength_start !== 380 ||\n      this.state.wavelength_end !== 780 ||\n      this.state.step !== 1\n    ) {\n      alert(\"Sorry SPDs other than 380-780 by stepd of 1 are not permitted\");\n    } else {\n      this.setState(\n        { spd_array: this.state.spd_paste.split(\"\\n\") },\n        function() {\n          console.log(\"setState completed\", this.state);\n          //event.preventDefault();\n          console.log(this.state.spd_array.length);\n          if (this.state.spd_array.length == 401) {\n            this.setState({ loading: true }, () => {\n              axios.defaults.headers.common = {};\n              axios.defaults.headers.common.accept = \"application/json\";\n              axios\n                .post(\"http://dtn3.pnl.gov:8080/api/tm30Paste\", {\n                  //.post(\"http://localhost:5000/api/tm30Paste\", {\n                  info: this.state.spd_array\n                })\n                .then(res => {\n                  return res.data;\n                })\n                .then(data => {\n                  this.setState({\n                    loading: false,\n                    data: data.data,\n                    tableReady: true\n                  });\n                  /**\n                   * Used later to store the data in cache\n                   * localStorage.setItem(\"data\", JSON.stringify(this.state.data));\n                   */\n\n                  /**\n                   * Pushes the data to the Reports page and redirects to that page\n                   */\n                  this.props.history.push({\n                    pathname: \"/Report\",\n                    state: {\n                      data: this.state.data\n                    }\n                  });\n                });\n            });\n          } else {\n            alert(\"SPD size does not match interval size\");\n          }\n        }\n      );\n    }\n  }\n  render() {\n    var loading = this.state.loading;\n    return (\n      <div>\n        <h2>Option C</h2>\n        <form>\n          <div style={{ position: \"inherit\", display: \"inline-block\" }}>\n            <label>\n              Start Wavelength (nm):\n              <br />\n              <input\n                onChange={this.handleStartChange}\n                defaultValue={380}\n              ></input>\n            </label>\n            <br />\n            <label>\n              End Wavelength (nm):\n              <br />\n              <input onChange={this.handleEndChange} defaultValue={780}></input>\n            </label>\n            <br />\n            <label>\n              Interval (nm):\n              <br />\n              <input onChange={this.handleStepChange} defaultValue={1}></input>\n            </label>\n          </div>\n          <div\n            style={{\n              position: \"inherit\",\n              display: \"inline-block\",\n              width: \"5%\"\n            }}\n          ></div>\n          <div style={{ position: \"inherit\", display: \"inline-block\" }}>\n            <h3>Paste in your SPD</h3>\n            <textarea\n              rows=\"5\"\n              cols=\"50\"\n              onChange={this.handleSPDChange}\n            ></textarea>\n          </div>\n          <br />\n          {loading ? (\n            <div>\n              <label>\n                {\" \"}\n                Calculating Results <br />{\" \"}\n                <LoadingSpinner color=\"copper\" size={6} />{\" \"}\n              </label>\n            </div>\n          ) : (\n            <Button\n              bsSize=\"sm\"\n              onClick={this.handleSubmit}\n              disabled={this.state.disabled}\n            >\n              Calculate\n            </Button>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Paste);\n"]},"metadata":{},"sourceType":"module"}