{"ast":null,"code":"/* eslint new-cap: 0 */\nimport { takeLatest, put } from 'redux-saga/effects';\nimport api from '../lib/restApiHelper';\nimport { ME_FETCH_START, ME_FETCH_SUCCESS, ME_FETCH_ERROR } from '../actions/me'; // A worker saga. Does all the hard API working code.\n// Worker sagas will get resumed whenever the Saga-Middleware gets a response back from the yielded code.\n\nfunction* fetchCurrentUser(action) {\n  try {\n    const response = yield api.GET(\"\".concat(process.env.REACT_APP_API_OPWHSE, \"/jsonapi/people/\").concat(action.hid, \"?include=department,facilities,spaces\"), {\n      headers: {\n        'Content-Type': 'application/vnd.api+json'\n      }\n    });\n    yield put({\n      type: ME_FETCH_SUCCESS,\n      payload: response\n    });\n  } catch (error) {\n    yield put({\n      type: ME_FETCH_ERROR,\n      payload: error\n    });\n  }\n}\n\nexport default function* meSaga() {\n  yield takeLatest(ME_FETCH_START, fetchCurrentUser);\n}","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Desktop/ies_tm30_web_app/src/sagas/me.js"],"names":["takeLatest","put","api","ME_FETCH_START","ME_FETCH_SUCCESS","ME_FETCH_ERROR","fetchCurrentUser","action","response","GET","process","env","REACT_APP_API_OPWHSE","hid","headers","type","payload","error","meSaga"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,cAHF,QAIO,eAJP,C,CAMA;AACA;;AACA,UAAUC,gBAAV,CAA2BC,MAA3B,EAAmC;AACjC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAJ,WAAWC,OAAO,CAACC,GAAR,CAAYC,oBAAvB,6BAA8DL,MAAM,CAACM,GAArE,4CAAiH;AACtIC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAD6H,KAAjH,CAAvB;AAGA,UAAMb,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAEX,gBAAR;AAA0BY,MAAAA,OAAO,EAAER;AAAnC,KAAD,CAAT;AACD,GALD,CAKE,OAAOS,KAAP,EAAc;AACd,UAAMhB,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAEV,cAAR;AAAwBW,MAAAA,OAAO,EAAEC;AAAjC,KAAD,CAAT;AACD;AACF;;AAED,eAAe,UAAUC,MAAV,GAAmB;AAChC,QAAMlB,UAAU,CAACG,cAAD,EAAiBG,gBAAjB,CAAhB;AACD","sourcesContent":["/* eslint new-cap: 0 */\r\nimport { takeLatest, put } from 'redux-saga/effects';\r\n\r\nimport api from '../lib/restApiHelper';\r\nimport {\r\n  ME_FETCH_START,\r\n  ME_FETCH_SUCCESS,\r\n  ME_FETCH_ERROR\r\n} from '../actions/me';\r\n\r\n// A worker saga. Does all the hard API working code.\r\n// Worker sagas will get resumed whenever the Saga-Middleware gets a response back from the yielded code.\r\nfunction* fetchCurrentUser(action) {\r\n  try {\r\n    const response = yield api.GET(`${process.env.REACT_APP_API_OPWHSE}/jsonapi/people/${action.hid}?include=department,facilities,spaces`, {\r\n      headers: { 'Content-Type': 'application/vnd.api+json' }\r\n    });\r\n    yield put({ type: ME_FETCH_SUCCESS, payload: response });\r\n  } catch (error) {\r\n    yield put({ type: ME_FETCH_ERROR, payload: error });\r\n  }\r\n}\r\n\r\nexport default function* meSaga() {\r\n  yield takeLatest(ME_FETCH_START, fetchCurrentUser);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}