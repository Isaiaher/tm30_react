{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Report.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\"; //import { Col, Row } from \"react-bootstrap\";\n\nimport LHSPlot from \"./LHSPlot\";\nimport LCSPlot from \"./LCSPlot\";\nimport LCFPlot from \"./LCFPlot\";\nimport ELFPlot from \"./ELFPlot\";\nimport CVGPlot from \"./CVGPlot\";\nimport Action from \"pnnl-react-core/lib/Action\";\nimport ActionBar from \"pnnl-react-core/lib/ActionBar\";\nimport PageItem from \"react-bootstrap/es/PageItem\";\nimport Pagination from \"react-bootstrap/es/Pagination\";\nvar tm30_data;\n\nclass Report extends React.Component {\n  constructor(props) {\n    super(props);\n    let active = \"Basic\";\n    let items = [];\n    let basic = \"Basic\";\n    let numerical = \"Numerical\";\n    let simple = \"Simple\";\n    let graphical = \"Graphical\";\n    let intermediate = \"Intermediate\";\n    let full = \"Full\";\n    items.push(React.createElement(Pagination.Item, {\n      key: basic,\n      active: basic === active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, basic));\n    items.push(React.createElement(Pagination.Item, {\n      key: graphical,\n      active: graphical === active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, graphical));\n    items.push(React.createElement(Pagination.Item, {\n      key: numerical,\n      active: numerical === active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, numerical));\n    items.push(React.createElement(Pagination.Item, {\n      key: simple,\n      active: simple === active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, simple));\n    items.push(React.createElement(Pagination.Item, {\n      key: intermediate,\n      active: intermediate === active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, intermediate));\n    items.push(React.createElement(Pagination.Item, {\n      key: full,\n      active: full === active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, full));\n    this.pagination = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, items));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Report Page\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), !(this.props.location.state == null) ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }) : React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"No data Calculated\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Click on Calculator above\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Choose which way to calculate data\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Click Calculate and you will be redirected here\")))), !(this.props.location.state == null) ? React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, console.log(this.props.location.state.data), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Basic Results\")), React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Col, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), this.pagination)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })) :\n    /*\r\n    <div class=\"reportImage\">\r\n      <ModalImage\r\n        small=\"http://localhost:8000/tm30_output.png\"\r\n        large=\"http://localhost:8000/tm30_output.png\"\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n    */\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Report;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Report.jsx"],"names":["React","PropTypes","Link","Card","Grid","Row","Col","LHSPlot","LCSPlot","LCFPlot","ELFPlot","CVGPlot","Action","ActionBar","PageItem","Pagination","tm30_data","Report","Component","constructor","props","active","items","basic","numerical","simple","graphical","intermediate","full","push","pagination","render","location","state","console","log","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"pnnl-react-core/lib/Card\";\r\nimport Grid from \"react-bootstrap/es/Grid\";\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\n//import { Col, Row } from \"react-bootstrap\";\r\nimport LHSPlot from \"./LHSPlot\";\r\nimport LCSPlot from \"./LCSPlot\";\r\nimport LCFPlot from \"./LCFPlot\";\r\nimport ELFPlot from \"./ELFPlot\";\r\nimport CVGPlot from \"./CVGPlot\";\r\nimport Action from \"pnnl-react-core/lib/Action\";\r\nimport ActionBar from \"pnnl-react-core/lib/ActionBar\";\r\nimport PageItem from \"react-bootstrap/es/PageItem\";\r\nimport Pagination from \"react-bootstrap/es/Pagination\";\r\n\r\nvar tm30_data;\r\n\r\nclass Report extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let active = \"Basic\";\r\n    let items = [];\r\n    let basic = \"Basic\";\r\n    let numerical = \"Numerical\";\r\n    let simple = \"Simple\";\r\n    let graphical = \"Graphical\";\r\n    let intermediate = \"Intermediate\";\r\n    let full = \"Full\";\r\n    items.push(\r\n      <Pagination.Item key={basic} active={basic === active}>\r\n        {basic}\r\n      </Pagination.Item>\r\n    );\r\n    items.push(\r\n      <Pagination.Item key={graphical} active={graphical === active}>\r\n        {graphical}\r\n      </Pagination.Item>\r\n    );\r\n    items.push(\r\n      <Pagination.Item key={numerical} active={numerical === active}>\r\n        {numerical}\r\n      </Pagination.Item>\r\n    );\r\n    items.push(\r\n      <Pagination.Item key={simple} active={simple === active}>\r\n        {simple}\r\n      </Pagination.Item>\r\n    );\r\n    items.push(\r\n      <Pagination.Item key={intermediate} active={intermediate === active}>\r\n        {intermediate}\r\n      </Pagination.Item>\r\n    );\r\n    items.push(\r\n      <Pagination.Item key={full} active={full === active}>\r\n        {full}\r\n      </Pagination.Item>\r\n    );\r\n\r\n    this.pagination = (\r\n      <div>\r\n        <Pagination>{items}</Pagination>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Report Page</h1>\r\n        <br />\r\n        {!(this.props.location.state == null) ? (\r\n          <div>\r\n            {\r\n              // <ResultsTable data={this.props.location.state.data} />\r\n            }\r\n          </div>\r\n        ) : (\r\n          <Card>\r\n            <h2>No data Calculated</h2>\r\n            <h5>\r\n              <ol>\r\n                <li>Click on Calculator above</li> <br />\r\n                <li>Choose which way to calculate data</li> <br />\r\n                <li>Click Calculate and you will be redirected here</li>\r\n              </ol>\r\n            </h5>\r\n          </Card>\r\n        )}\r\n        {!(this.props.location.state == null) ? (\r\n          <Grid>\r\n            {console.log(this.props.location.state.data)}\r\n            <Row>\r\n              <Col xs={4}></Col>\r\n              <Col xs={4}>\r\n                <h2 align=\"center\">Basic Results</h2>\r\n              </Col>\r\n              <Col xs={4}></Col>\r\n            </Row>\r\n            <Row>\r\n              <Col align=\"center\">\r\n                {\" \"}\r\n                <br />\r\n                {this.pagination}\r\n              </Col>\r\n            </Row>\r\n            {/*\r\n            <Row>\r\n              <Col>\r\n                <Card>\r\n                  <table>\r\n                    <tr>\r\n                      <th>Variable</th>\r\n                      <th>Test</th>\r\n                      <th>Ref</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>CCT</td>\r\n                      <td>\r\n                        {\r\n                          this.props.location.state.data.tm30.Numerical_Results\r\n                            .CCT[0]\r\n                        }\r\n                      </td>\r\n                      <td>\r\n                        {\r\n                          this.props.location.state.data.tm30.Numerical_Results\r\n                            .CCT[1]\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>DUV</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        {\r\n                          this.props.location.state.data.tm30.Numerical_Results\r\n                            .DUV[0]\r\n                        }\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        {\r\n                          this.props.location.state.data.tm30.Numerical_Results\r\n                            .DUV[1]\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>u</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        {\r\n                          this.props.location.state.data.tm30.Numerical_Results\r\n                            .u[0]\r\n                        }\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        {\r\n                          this.props.location.state.data.tm30.Numerical_Results\r\n                            .u[1]\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>v</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        {\r\n                          this.props.location.state.data.tm30.Numerical_Results\r\n                            .v[0]\r\n                        }\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        {\r\n                          this.props.location.state.data.tm30.Numerical_Results\r\n                            .v[1]\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n                      */}\r\n            <br />\r\n            {/*\r\n            <LCSGoogleGraph\r\n              data={\r\n                this.props.location.state.data.tm30.Numerical_Results\r\n                  .local_chroma_shift\r\n              }\r\n            ></LCSGoogleGraph>\r\n\r\n            <br />\r\n\r\n            <LHSGoogleGraph\r\n              data={\r\n                this.props.location.state.data.tm30.Numerical_Results\r\n                  .local_hue_shift\r\n              }\r\n            ></LHSGoogleGraph>\r\n\r\n            <br />\r\n\r\n            <LCFGoogleGraph\r\n              data={\r\n                this.props.location.state.data.tm30.Numerical_Results\r\n                  .local_color_fidelity\r\n              }\r\n            ></LCFGoogleGraph>\r\n            <br />\r\n            <Card>\r\n              <LCSd3\r\n                data={\r\n                  this.props.location.state.data.tm30.Numerical_Results\r\n                    .local_chroma_shift\r\n                }\r\n              ></LCSd3>\r\n            </Card>\r\n\r\n            <br />\r\n              */}\r\n            {/*\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Card>\r\n                  <LCSPlot\r\n                    data={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .local_chroma_shift\r\n                    }\r\n                  ></LCSPlot>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Card>\r\n                  <LHSPlot\r\n                    data={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .local_hue_shift\r\n                    }\r\n                  ></LHSPlot>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Card>\r\n                  <LCFPlot\r\n                    data={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .local_color_fidelity\r\n                    }\r\n                  ></LCFPlot>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Card>\r\n                  <ELFPlot\r\n                    test={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .normalized_SPD_test\r\n                    }\r\n                    ref_spd={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .normalized_SPD_ref\r\n                    }\r\n                  ></ELFPlot>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              {<Col xs={2}></Col>}\r\n              <Col xs={8}>\r\n                <Card>\r\n                  <CVGPlot\r\n                    xtest={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .path_xtest\r\n                    }\r\n                    ytest={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .path_ytest\r\n                    }\r\n                    xref={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .path_xref\r\n                    }\r\n                    yref={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .path_yref\r\n                    }\r\n                    rf={\r\n                      this.props.location.state.data.tm30.Numerical_Results.rg\r\n                    }\r\n                    rg={\r\n                      this.props.location.state.data.tm30.Numerical_Results.rf\r\n                    }\r\n                    cct={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .CCT[0]\r\n                    }\r\n                    duv={\r\n                      this.props.location.state.data.tm30.Numerical_Results\r\n                        .DUV[0]\r\n                    }\r\n                  ></CVGPlot>\r\n                </Card>\r\n              </Col>\r\n              {<Col xs={2}></Col>}\r\n            </Row>\r\n            */}\r\n\r\n            {/*\r\n            <ActionBar fluid>\r\n              <Col sm={4}>\r\n                <Action to=\"/Home\" icon=\"share\" text=\"Submit\" />\r\n              </Col>\r\n              <Col sm={4}>\r\n                <Action to=\"/Home\" icon=\"info\" text=\"Details\" />\r\n              </Col>\r\n              <Col sm={4}>\r\n                <Action to=\"/Home\" icon=\"trash\" text=\"Delete\" />\r\n              </Col>\r\n            </ActionBar>\r\n                  */}\r\n          </Grid>\r\n        ) : (\r\n          /*\r\n          <div class=\"reportImage\">\r\n            <ModalImage\r\n              small=\"http://localhost:8000/tm30_output.png\"\r\n              large=\"http://localhost:8000/tm30_output.png\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        */\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Report;\r\n"]},"metadata":{},"sourceType":"module"}