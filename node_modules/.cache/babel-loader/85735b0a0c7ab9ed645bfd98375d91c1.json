{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Report.jsx\";\n\n/**\n * Report.\n *\n * The main Report page. By default it will display the Basic tab.\n * From there you can navigate using the page chnager at the top.\n * The other options are Graphical, Numerical, Simple, Intermediate, and Full.\n * These are all based off of the Excel calculator.\n *\n * TODO - Break the Basic Report into a component instead of living inside the Reports page.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n\n/**\n * Imports\n */\nimport React from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport LHSPlot from \"./Plots/LHSPlot\";\nimport LCSPlot from \"./Plots/LCSPlot\";\nimport LCFPlot from \"./Plots/LCFPlot\";\nimport ELFPlot from \"./Plots/ELFPlot\";\nimport CVGPlot from \"./Plots/CVGPlot\";\nimport Pagination from \"react-bootstrap/es/Pagination\";\nimport Numerical from \"./Tabs/Numerical\";\nimport Graphical from \"./Tabs/Graphical\";\nimport Button from \"react-bootstrap/es/Button\";\nimport Simple from \"./Tabs/Simple\";\nimport Intermediate from \"./Tabs/Intermediate\"; //import Button from \"@material-ui/core/Button\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Pdf from \"react-to-pdf\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport htmlToImage from \"html-to-image\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\"; //var htmlToImage = require(\"html-to-image\");\n\nconst ref = React.createRef();\nconst options = {\n  orientation: \"landscape\",\n  unit: \"px\",\n  format: [1200, 1200]\n};\nconst CustCheckBox = withStyles({\n  root: {\n    color: \"#d3761d\",\n    \"&$checked\": {\n      color: \"#d3761d\"\n    }\n  },\n  checked: {}\n})(props => React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n})));\n/**\n * Report Class\n */\n\nclass Report extends React.Component {\n  /**\n   * Create state and the active field.\n   * \"active\" is responsible for which\n   * tab you currently are on.\n   *\n   */\n\n  /**\n   * Constructor that mostly just defines constants so Report's render\n   * knows which page to display based off of the state and which tab is\n   * selected on the page.\n   * Also binds the pageChanged handler.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n\n    this.handleJSONDownload = () => {\n      var fileDownload = require(\"js-file-download\");\n\n      fileDownload(this.json, \"\".concat(this.props.location.state.name, \".json\"));\n    };\n\n    this.handleXMLDownload = () => {\n      var fileDownload = require(\"js-file-download\");\n\n      fileDownload(this.xml, \"\".concat(this.props.location.state.name, \".xml\"));\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n      console.log(this.state);\n    };\n\n    this.handleClose = event => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleBinLabels = event => {\n      if (this.state.bin_labels) {\n        this.setState({\n          bin_labels: false\n        });\n      } else {\n        this.setState({\n          bin_labels: true\n        });\n      }\n    };\n\n    this.handleBinDividers = event => {\n      if (this.state.bin_dividers) {\n        this.setState({\n          bin_dividers: false\n        });\n      } else {\n        this.setState({\n          bin_dividers: true\n        });\n      }\n    };\n\n    this.handleChromaIsolines = event => {\n      if (this.state.chroma_isolines) {\n        this.setState({\n          chroma_isolines: false\n        });\n      } else {\n        this.setState({\n          chroma_isolines: true\n        });\n      }\n    };\n\n    this.handleHTMLtoImage = event => {\n      if (this.state.active === \"Intermediate\" || this.state.active === \"Simple\") {\n        var name = \"\".concat(this.name, \"-\").concat(this.state.active, \".png\");\n\n        var fileDownload = require(\"js-file-download\");\n\n        htmlToImage.toBlob(document.getElementById(\"\".concat(this.state.active))).then(function (dataUrl) {\n          fileDownload(dataUrl, name);\n        });\n      }\n    };\n\n    if (!(this.props.location.state == null)) {\n      this.json = JSON.stringify(this.props.location.state.data); //console.log(\"IMPORTANT\");\n      //console.log(this.json);\n\n      var convert = require(\"xml-js\");\n\n      this.xml = convert.json2xml(this.props.location.state.data, {\n        compact: true,\n        spaces: 4\n      });\n    }\n\n    this.pageChanged = this.pageChanged.bind(this);\n    this.items = [];\n    this.basic = \"Basic\";\n    this.numerical = \"Numerical\";\n    this.simple = \"Simple\";\n    this.graphical = \"Graphical\";\n    this.intermediate = \"Intermediate\";\n    this.full = \"Full\";\n    this.state = {\n      active: \"Basic\",\n      width: 0,\n      height: 0,\n      bin_labels: true,\n      bin_dividers: true,\n      chroma_isolines: true,\n      loading: false\n    };\n\n    if (!(this.props.location.state == null)) {\n      this.name = this.props.location.state.name;\n    }\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleHTMLtoImage = this.handleHTMLtoImage.bind(this); //this.htmlToImage = this.htmlToImage.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  holder(num) {\n    return {\n      height: num\n    };\n  }\n\n  /**\n   * This isn't working the way it is intended\n   */\n\n  /*\n  handleHTMLtoImage = event => {\n    this.startSpinner(this.stopSpinner);\n  };\n   startSpinner(_callback) {\n    //console.log(this.state.active);\n    var name = `${this.name}-${this.state.active}.png`;\n    var fileDownload = require(\"js-file-download\");\n    this.setState(\n      {\n        loading: true\n      },\n      () => {\n        console.log(this.state.loading);\n        htmlToImage\n          .toBlob(document.getElementById(`${this.state.active}`))\n          .then(function(dataUrl) {\n            fileDownload(dataUrl, name);\n          });\n        _callback();\n      }\n    );\n  }\n   stopSpinner = () => {\n    this.setState({\n      loading: false\n    });\n    console.log(this.state.loading);\n  };\n  */\n\n  /**\n   * Handler for changing the tab on the Reports page.\n   * @param {*} e //The event of changing tabs. Contains the tesxt of the tab\n   */\n  pageChanged(e) {\n    if (!(e.target.text == null)) {\n      this.setState({\n        active: e.target.text\n      });\n    }\n  }\n  /**\n   * Render function for the Reports page.\n   * Fairly extensive because Report is the handler for all the\n   * Report pages explained above. So depending on which tab is selected,\n   * the page will display different content.\n   *\n   * If an SPD calculation has not been calculated then there will be instructions on how to run\n   * one rather than errors showing.\n   * ! If the user leaves the tab then the SPD information will leave Cache\n   *\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, !(this.props.location.state == null) ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      style: {\n        height: this.state.height - 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"No data Calculated\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Click on Calculator above\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Choose which way to calculate data\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Click Calculate and you will be redirected here\")))), !(this.props.location.state == null) ? React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xs: 4,\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, this.props.location.state.name === \"\" ? React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"No SPD Name Specified\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, this.props.location.state.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Download Data:\"), React.createElement(Button, {\n      onClick: this.handleJSONDownload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"JSON\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\"), React.createElement(Button, {\n      onClick: this.handleXMLDownload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"XML\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\"), this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \" \", \"Downloading Image \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), \" \", React.createElement(LoadingSpinner, {\n      color: \"copper\",\n      size: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), \" \")) : React.createElement(Button, {\n      onClick: this.handleHTMLtoImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Image\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Options\"), React.createElement(Menu, {\n      id: \"simple-menu\",\n      anchorEl: this.state.anchorEl,\n      keepMounted: true,\n      open: Boolean(this.state.anchorEl),\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \" \", React.createElement(FormControlLabel, {\n      control: React.createElement(CustCheckBox, {\n        icon: React.createElement(CheckBoxOutlineBlankIcon, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }),\n        checkedIcon: React.createElement(CheckBoxIcon, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }),\n        checked: this.state.bin_labels,\n        onChange: this.handleBinLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }),\n      labelPlacement: \"end\",\n      label: React.createElement(\"span\", {\n        style: {\n          fontSize: \"1.5rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Bin Labels\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \" \", React.createElement(FormControlLabel, {\n      control: React.createElement(CustCheckBox, {\n        icon: React.createElement(CheckBoxOutlineBlankIcon, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }),\n        checkedIcon: React.createElement(CheckBoxIcon, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          },\n          __self: this\n        }),\n        checked: this.state.bin_dividers,\n        onChange: this.handleBinDividers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }),\n      labelPlacement: \"end\",\n      label: React.createElement(\"span\", {\n        style: {\n          fontSize: \"1.5rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Bin Dividers\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \" \", React.createElement(FormControlLabel, {\n      control: React.createElement(CustCheckBox, {\n        icon: React.createElement(CheckBoxOutlineBlankIcon, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }),\n        checkedIcon: React.createElement(CheckBoxIcon, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }),\n        checked: this.state.chroma_isolines,\n        onChange: this.handleChromaIsolines,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }),\n      labelPlacement: \"end\",\n      label: React.createElement(\"span\", {\n        style: {\n          fontSize: \"1.5rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Chroma Isolines\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    })))))), React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(Col, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      onClick: this.pageChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(Pagination.Item, {\n      key: this.basic,\n      active: this.basic === this.state.active || this.state.active == null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, this.basic), React.createElement(Pagination.Item, {\n      key: this.graphical,\n      active: this.graphical === this.state.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, this.graphical), React.createElement(Pagination.Item, {\n      key: this.numerical,\n      active: this.numerical === this.state.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, this.numerical), React.createElement(Pagination.Item, {\n      key: this.simple,\n      active: this.simple === this.state.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, this.simple), React.createElement(Pagination.Item, {\n      key: this.intermediate,\n      active: this.intermediate === this.state.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, this.intermediate), React.createElement(Pagination.Item, {\n      key: this.full,\n      active: this.full === this.state.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, this.full)))), this.state.active === \"Basic\" ? React.createElement(\"div\", {\n      style: {\n        width: \"125%\",\n        marginLeft: \"-15%\",\n        padding: \"50, 50, 50, 50\"\n      },\n      ref: ref,\n      id: \"Basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      md: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \" \", React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.holder(400),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(ELFPlot, {\n      test: this.props.location.state.data.tm30.Numerical_Results.normalized_SPD_test,\n      ref_spd: this.props.location.state.data.tm30.Numerical_Results.normalized_SPD_ref,\n      wavelengths: this.props.location.state.data.tm30.input.Wavelength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 12,\n      md: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.holder(400),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(LCSPlot, {\n      data: this.props.location.state.data.tm30.Numerical_Results.local_chroma_shift,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      md: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(CVGPlot, {\n      xtest: this.props.location.state.data.tm30.Numerical_Results.path_xtest,\n      ytest: this.props.location.state.data.tm30.Numerical_Results.path_ytest,\n      xref: this.props.location.state.data.tm30.Numerical_Results.path_xref,\n      yref: this.props.location.state.data.tm30.Numerical_Results.path_yref,\n      rf: this.props.location.state.data.tm30.Numerical_Results.rg,\n      rg: this.props.location.state.data.tm30.Numerical_Results.rf,\n      cct: this.props.location.state.data.tm30.Numerical_Results.CCT[0],\n      duv: this.props.location.state.data.tm30.Numerical_Results.DUV[0],\n      options: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      xs: 12,\n      md: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.holder(400),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(LHSPlot, {\n      data: this.props.location.state.data.tm30.Numerical_Results.local_hue_shift,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.holder(380),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, React.createElement(LCFPlot, {\n      data: this.props.location.state.data.tm30.Numerical_Results.local_color_fidelity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    })))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }), this.state.active === \"Numerical\" ? React.createElement(Numerical, {\n      tm30: this.props.location.state.data.tm30.Numerical_Results,\n      input: this.props.location.state.data.tm30.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }), this.state.active === \"Graphical\" ? React.createElement(Graphical, {\n      tm30: this.props.location.state.data.tm30.Numerical_Results,\n      input: this.props.location.state.data.tm30.input,\n      options: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }), this.state.active === \"Simple\" ? React.createElement(\"div\", {\n      ref: ref,\n      id: \"Simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, React.createElement(Simple, {\n      tm30: this.props.location.state.data.tm30.Numerical_Results,\n      input: this.props.location.state.data.tm30.input,\n      options: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }), this.state.active === \"Intermediate\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {//width: \"115%\",\n        //marginLeft: \"-10%\",\n        //padding: \"50, 50, 50, 50\"\n      },\n      ref: ref,\n      id: \"Intermediate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(Intermediate, {\n      tm30: this.props.location.state.data.tm30.Numerical_Results,\n      input: this.props.location.state.data.tm30.input,\n      active: this.state.active,\n      options: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    })))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }));\n  }\n\n}\n/**\n * Export the Report Component\n */\n\n\nexport default Report;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Report.jsx"],"names":["React","Card","Grid","Row","Col","LHSPlot","LCSPlot","LCFPlot","ELFPlot","CVGPlot","Pagination","Numerical","Graphical","Button","Simple","Intermediate","Checkbox","Menu","MenuItem","Pdf","withStyles","CheckBoxOutlineBlankIcon","CheckBoxIcon","FormControlLabel","htmlToImage","LoadingSpinner","ref","createRef","options","orientation","unit","format","CustCheckBox","root","color","checked","props","Report","Component","constructor","handleJSONDownload","fileDownload","require","json","location","state","name","handleXMLDownload","xml","handleClick","event","setState","anchorEl","currentTarget","console","log","handleClose","handleBinLabels","bin_labels","handleBinDividers","bin_dividers","handleChromaIsolines","chroma_isolines","handleHTMLtoImage","active","toBlob","document","getElementById","then","dataUrl","JSON","stringify","data","convert","json2xml","compact","spaces","pageChanged","bind","items","basic","numerical","simple","graphical","intermediate","full","width","height","loading","updateWindowDimensions","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","innerHeight","holder","num","e","target","text","render","Boolean","fontSize","marginLeft","padding","tm30","Numerical_Results","normalized_SPD_test","normalized_SPD_ref","input","Wavelength","local_chroma_shift","path_xtest","path_ytest","path_xref","path_yref","rg","rf","CCT","DUV","local_hue_shift","local_color_fidelity"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAcA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,4BAA3B,C,CACA;;AACA,MAAMC,GAAG,GAAG1B,KAAK,CAAC2B,SAAN,EAAZ;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,WADC;AAEdC,EAAAA,IAAI,EAAE,IAFQ;AAGdC,EAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP;AAHM,CAAhB;AAMA,MAAMC,YAAY,GAAGZ,UAAU,CAAC;AAC9Ba,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,SADH;AAEJ,iBAAa;AACXA,MAAAA,KAAK,EAAE;AADI;AAFT,GADwB;AAO9BC,EAAAA,OAAO,EAAE;AAPqB,CAAD,CAAV,CAQlBC,KAAK,IAAI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAC;AAAhB,GAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GARS,CAArB;AAUA;;;;AAGA,MAAMC,MAAN,SAAqBrC,KAAK,CAACsC,SAA3B,CAAqC;AACnC;;;;;;;AAMA;;;;;;;AAOAC,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiDnBI,kBAjDmB,GAiDE,MAAM;AACzB,UAAIC,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACAD,MAAAA,YAAY,CAAC,KAAKE,IAAN,YAAe,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0BC,IAAzC,WAAZ;AACD,KApDkB;;AAAA,SAsDnBC,iBAtDmB,GAsDC,MAAM;AACxB,UAAIN,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACAD,MAAAA,YAAY,CAAC,KAAKO,GAAN,YAAc,KAAKZ,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0BC,IAAxC,UAAZ;AACD,KAzDkB;;AAAA,SA+DnBG,WA/DmB,GA+DLC,KAAK,IAAI;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEF,KAAK,CAACG;AADJ,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACD,KApEkB;;AAAA,SAsEnBW,WAtEmB,GAsELN,KAAK,IAAI;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KA1EkB;;AAAA,SA4EnBK,eA5EmB,GA4EDP,KAAK,IAAI;AACzB,UAAI,KAAKL,KAAL,CAAWa,UAAf,EAA2B;AACzB,aAAKP,QAAL,CAAc;AACZO,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD,OAJD,MAIO;AACL,aAAKP,QAAL,CAAc;AACZO,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD;AACF,KAtFkB;;AAAA,SAwFnBC,iBAxFmB,GAwFCT,KAAK,IAAI;AAC3B,UAAI,KAAKL,KAAL,CAAWe,YAAf,EAA6B;AAC3B,aAAKT,QAAL,CAAc;AACZS,UAAAA,YAAY,EAAE;AADF,SAAd;AAGD,OAJD,MAIO;AACL,aAAKT,QAAL,CAAc;AACZS,UAAAA,YAAY,EAAE;AADF,SAAd;AAGD;AACF,KAlGkB;;AAAA,SAoGnBC,oBApGmB,GAoGIX,KAAK,IAAI;AAC9B,UAAI,KAAKL,KAAL,CAAWiB,eAAf,EAAgC;AAC9B,aAAKX,QAAL,CAAc;AACZW,UAAAA,eAAe,EAAE;AADL,SAAd;AAGD,OAJD,MAIO;AACL,aAAKX,QAAL,CAAc;AACZW,UAAAA,eAAe,EAAE;AADL,SAAd;AAGD;AACF,KA9GkB;;AAAA,SAgHnBC,iBAhHmB,GAgHCb,KAAK,IAAI;AAC3B,UACE,KAAKL,KAAL,CAAWmB,MAAX,KAAsB,cAAtB,IACA,KAAKnB,KAAL,CAAWmB,MAAX,KAAsB,QAFxB,EAGE;AACA,YAAIlB,IAAI,aAAM,KAAKA,IAAX,cAAmB,KAAKD,KAAL,CAAWmB,MAA9B,SAAR;;AACA,YAAIvB,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACAlB,QAAAA,WAAW,CACRyC,MADH,CACUC,QAAQ,CAACC,cAAT,WAA2B,KAAKtB,KAAL,CAAWmB,MAAtC,EADV,EAEGI,IAFH,CAEQ,UAASC,OAAT,EAAkB;AACtB5B,UAAAA,YAAY,CAAC4B,OAAD,EAAUvB,IAAV,CAAZ;AACD,SAJH;AAKD;AACF,KA7HkB;;AAEjB,QAAI,EAAE,KAAKV,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,IAA6B,IAA/B,CAAJ,EAA0C;AACxC,WAAKF,IAAL,GAAY2B,IAAI,CAACC,SAAL,CAAe,KAAKnC,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAAzC,CAAZ,CADwC,CAExC;AACA;;AACA,UAAIC,OAAO,GAAG/B,OAAO,CAAC,QAAD,CAArB;;AACA,WAAKM,GAAL,GAAWyB,OAAO,CAACC,QAAR,CAAiB,KAAKtC,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA3C,EAAiD;AAC1DG,QAAAA,OAAO,EAAE,IADiD;AAE1DC,QAAAA,MAAM,EAAE;AAFkD,OAAjD,CAAX;AAID;;AACD,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,OAAb;AACA,SAAKC,SAAL,GAAiB,WAAjB;AACA,SAAKC,MAAL,GAAc,QAAd;AACA,SAAKC,SAAL,GAAiB,WAAjB;AACA,SAAKC,YAAL,GAAoB,cAApB;AACA,SAAKC,IAAL,GAAY,MAAZ;AACA,SAAKxC,KAAL,GAAa;AACXmB,MAAAA,MAAM,EAAE,OADG;AAEXsB,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,MAAM,EAAE,CAHG;AAIX7B,MAAAA,UAAU,EAAE,IAJD;AAKXE,MAAAA,YAAY,EAAE,IALH;AAMXE,MAAAA,eAAe,EAAE,IANN;AAOX0B,MAAAA,OAAO,EAAE;AAPE,KAAb;;AASA,QAAI,EAAE,KAAKpD,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,IAA6B,IAA/B,CAAJ,EAA0C;AACxC,WAAKC,IAAL,GAAY,KAAKV,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0BC,IAAtC;AACD;;AACD,SAAK2C,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BX,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKf,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBe,IAAvB,CAA4B,IAA5B,CAAzB,CAjCiB,CAkCjB;AACD;;AACDY,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,sBAAL;AACAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKH,sBAAvC;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,sBAA1C;AACD;;AAEDA,EAAAA,sBAAsB,GAAG;AACvB,SAAKtC,QAAL,CAAc;AAAEmC,MAAAA,KAAK,EAAEK,MAAM,CAACI,UAAhB;AAA4BR,MAAAA,MAAM,EAAEI,MAAM,CAACK;AAA3C,KAAd;AACD;;AAYDC,EAAAA,MAAM,CAACC,GAAD,EAAM;AACV,WAAO;AAAEX,MAAAA,MAAM,EAAEW;AAAV,KAAP;AACD;;AAkED;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;;;AAIArB,EAAAA,WAAW,CAACsB,CAAD,EAAI;AACb,QAAI,EAAEA,CAAC,CAACC,MAAF,CAASC,IAAT,IAAiB,IAAnB,CAAJ,EAA8B;AAC5B,WAAKlD,QAAL,CAAc;AACZa,QAAAA,MAAM,EAAEmC,CAAC,CAACC,MAAF,CAASC;AADL,OAAd;AAGD;AACF;AACD;;;;;;;;;;;;;AAWAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,EAAE,KAAKlE,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,IAA6B,IAA/B,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC;AACE,MAAA,KAAK,EAAE;AACL0C,QAAAA,MAAM,EAAE,KAAK1C,KAAL,CAAW0C,MAAX,GAAoB;AADvB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,OACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrC,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,OAE8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF9C,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHF,CAHF,CANF,CAJJ,EAqBG,EAAE,KAAKnD,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,IAA6B,IAA/B,IACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0BC,IAA1B,KAAmC,EAAnC,GACC;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB,KAAKV,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0BC,IAA9C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKN,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAKE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKO,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,EAkBG,KAAKF,KAAL,CAAW2C,OAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,wBAEoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFpB,EAE2B,GAF3B,EAGE,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,QAAtB;AAA+B,MAAA,IAAI,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAG6C,GAH7C,CAFF,CADD,GAUC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKzB,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA5BJ,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKd,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWO,QAFvB;AAGE,MAAA,WAAW,MAHb;AAIE,MAAA,IAAI,EAAEmD,OAAO,CAAC,KAAK1D,KAAL,CAAWO,QAAZ,CAJf;AAKE,MAAA,OAAO,EAAE,KAAKI,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,YAAD;AACE,QAAA,IAAI,EACF,oBAAC,wBAAD;AACE,UAAA,KAAK,EAAE;AAAEgD,YAAAA,QAAQ,EAAE;AAAZ,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAME,QAAA,WAAW,EACT,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ;AASE,QAAA,OAAO,EAAE,KAAK3D,KAAL,CAAWa,UATtB;AAUE,QAAA,QAAQ,EAAE,KAAKD,eAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAeE,MAAA,cAAc,EAAC,KAfjB;AAgBE,MAAA,KAAK,EACH;AAAM,QAAA,KAAK,EAAE;AAAE+C,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAPF,EAgCE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,YAAD;AACE,QAAA,IAAI,EACF,oBAAC,wBAAD;AACE,UAAA,KAAK,EAAE;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAME,QAAA,WAAW,EACT,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ;AASE,QAAA,OAAO,EAAE,KAAK3D,KAAL,CAAWe,YATtB;AAUE,QAAA,QAAQ,EAAE,KAAKD,iBAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAeE,MAAA,cAAc,EAAC,KAfjB;AAgBE,MAAA,KAAK,EACH;AAAM,QAAA,KAAK,EAAE;AAAE6C,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAhCF,EAyDE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,YAAD;AACE,QAAA,IAAI,EACF,oBAAC,wBAAD;AACE,UAAA,KAAK,EAAE;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAME,QAAA,WAAW,EACT,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ;AASE,QAAA,OAAO,EAAE,KAAK3D,KAAL,CAAWiB,eATtB;AAUE,QAAA,QAAQ,EAAE,KAAKD,oBAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAeE,MAAA,cAAc,EAAC,KAfjB;AAgBE,MAAA,KAAK,EACH;AAAM,QAAA,KAAK,EAAE;AAAE2C,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAzDF,CAFF,CAnCF,CAJJ,CAFF,EAyIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzIF,CAJF,EA+IE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAK3B,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD,CAAY,IAAZ;AACE,MAAA,GAAG,EAAE,KAAKG,KADZ;AAEE,MAAA,MAAM,EACJ,KAAKA,KAAL,KAAe,KAAKnC,KAAL,CAAWmB,MAA1B,IACA,KAAKnB,KAAL,CAAWmB,MAAX,IAAqB,IAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKgB,KAPR,CADF,EAUE,oBAAC,UAAD,CAAY,IAAZ;AACE,MAAA,GAAG,EAAE,KAAKG,SADZ;AAEE,MAAA,MAAM,EAAE,KAAKA,SAAL,KAAmB,KAAKtC,KAAL,CAAWmB,MAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKmB,SAJR,CAVF,EAgBE,oBAAC,UAAD,CAAY,IAAZ;AACE,MAAA,GAAG,EAAE,KAAKF,SADZ;AAEE,MAAA,MAAM,EAAE,KAAKA,SAAL,KAAmB,KAAKpC,KAAL,CAAWmB,MAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKiB,SAJR,CAhBF,EAsBE,oBAAC,UAAD,CAAY,IAAZ;AACE,MAAA,GAAG,EAAE,KAAKC,MADZ;AAEE,MAAA,MAAM,EAAE,KAAKA,MAAL,KAAgB,KAAKrC,KAAL,CAAWmB,MAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKkB,MAJR,CAtBF,EA4BE,oBAAC,UAAD,CAAY,IAAZ;AACE,MAAA,GAAG,EAAE,KAAKE,YADZ;AAEE,MAAA,MAAM,EAAE,KAAKA,YAAL,KAAsB,KAAKvC,KAAL,CAAWmB,MAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKoB,YAJR,CA5BF,EAkCE,oBAAC,UAAD,CAAY,IAAZ;AACE,MAAA,GAAG,EAAE,KAAKC,IADZ;AAEE,MAAA,MAAM,EAAE,KAAKA,IAAL,KAAc,KAAKxC,KAAL,CAAWmB,MAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKqB,IAJR,CAlCF,CADF,CADF,CA/IF,EA4LG,KAAKxC,KAAL,CAAWmB,MAAX,KAAsB,OAAtB,GACC;AACE,MAAA,KAAK,EAAE;AACLsB,QAAAA,KAAK,EAAE,MADF;AAELmB,QAAAA,UAAU,EAAE,MAFP;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OADT;AAME,MAAA,GAAG,EAAEhF,GANP;AAOE,MAAA,EAAE,EAAC,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE,KAAKuE,MAAL,CAAY,GAAZ,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EACF,KAAK7D,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CACGC,iBADH,CACqBC,mBAHzB;AAKE,MAAA,OAAO,EACL,KAAKzE,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CACGC,iBADH,CACqBE,kBAPzB;AASE,MAAA,WAAW,EACT,KAAK1E,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCI,KAApC,CAA0CC,UAV9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFF,CADF,EAqBE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE,KAAKf,MAAL,CAAY,GAAZ,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EACF,KAAK7D,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CACGC,iBADH,CACqBK,kBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CArBF,CAVF,EA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,EA6CE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,KAAK,EACH,KAAK7E,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAApC,CACGM,UAHP;AAKE,MAAA,KAAK,EACH,KAAK9E,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAApC,CACGO,UAPP;AASE,MAAA,IAAI,EACF,KAAK/E,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAApC,CACGQ,SAXP;AAaE,MAAA,IAAI,EACF,KAAKhF,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAApC,CACGS,SAfP;AAiBE,MAAA,EAAE,EACA,KAAKjF,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAApC,CACGU,EAnBP;AAqBE,MAAA,EAAE,EACA,KAAKlF,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAApC,CACGW,EAvBP;AAyBE,MAAA,GAAG,EACD,KAAKnF,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAApC,CACGY,GADH,CACO,CADP,CA1BJ;AA6BE,MAAA,GAAG,EACD,KAAKpF,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAApC,CACGa,GADH,CACO,CADP,CA9BJ;AAiCE,MAAA,OAAO,EAAE,KAAK5E,KAjChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAwCE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE,KAAKoD,MAAL,CAAY,GAAZ,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EACF,KAAK7D,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CACGC,iBADH,CACqBc,eAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAcE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE,KAAKzB,MAAL,CAAY,GAAZ,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EACF,KAAK7D,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CACGC,iBADH,CACqBe,oBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAdF,CAxCF,CA7CF,CADD,GAkHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9SJ,EAgTG,KAAK9E,KAAL,CAAWmB,MAAX,KAAsB,WAAtB,GACC,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE,KAAK5B,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAD5C;AAEE,MAAA,KAAK,EAAE,KAAKxE,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCI,KAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtTJ,EAwTG,KAAKlE,KAAL,CAAWmB,MAAX,KAAsB,WAAtB,GACC,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE,KAAK5B,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAD5C;AAEE,MAAA,KAAK,EAAE,KAAKxE,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCI,KAF7C;AAGE,MAAA,OAAO,EAAE,KAAKlE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/TJ,EAiUG,KAAKA,KAAL,CAAWmB,MAAX,KAAsB,QAAtB,GACC;AAAK,MAAA,GAAG,EAAEtC,GAAV;AAAe,MAAA,EAAE,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE,KAAKU,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAD5C;AAEE,MAAA,KAAK,EAAE,KAAKxE,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCI,KAF7C;AAGE,MAAA,OAAO,EAAE,KAAKlE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1UJ,EA4UG,KAAKA,KAAL,CAAWmB,MAAX,KAAsB,cAAtB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EACH,CACE;AACA;AACA;AAHF,OAFJ;AAQE,MAAA,GAAG,EAAEtC,GARP;AASE,MAAA,EAAE,EAAC,cATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,IAAI,EACF,KAAKU,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCC,iBAFxC;AAIE,MAAA,KAAK,EAAE,KAAKxE,KAAL,CAAWQ,QAAX,CAAoBC,KAApB,CAA0B2B,IAA1B,CAA+BmC,IAA/B,CAAoCI,KAJ7C;AAKE,MAAA,MAAM,EAAE,KAAKlE,KAAL,CAAWmB,MALrB;AAME,MAAA,OAAO,EAAE,KAAKnB,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,CADF,CADD,GA0BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtWJ,CADD,GA2WC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhYJ,CADF;AAqYD;;AA5kBkC;AA8kBrC;;;;;AAGA,eAAeR,MAAf","sourcesContent":["/**\n * Report.\n *\n * The main Report page. By default it will display the Basic tab.\n * From there you can navigate using the page chnager at the top.\n * The other options are Graphical, Numerical, Simple, Intermediate, and Full.\n * These are all based off of the Excel calculator.\n *\n * TODO - Break the Basic Report into a component instead of living inside the Reports page.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React from \"react\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Col from \"react-bootstrap/es/Col\";\nimport LHSPlot from \"./Plots/LHSPlot\";\nimport LCSPlot from \"./Plots/LCSPlot\";\nimport LCFPlot from \"./Plots/LCFPlot\";\nimport ELFPlot from \"./Plots/ELFPlot\";\nimport CVGPlot from \"./Plots/CVGPlot\";\nimport Pagination from \"react-bootstrap/es/Pagination\";\nimport Numerical from \"./Tabs/Numerical\";\nimport Graphical from \"./Tabs/Graphical\";\nimport Button from \"react-bootstrap/es/Button\";\nimport Simple from \"./Tabs/Simple\";\nimport Intermediate from \"./Tabs/Intermediate\";\n//import Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Pdf from \"react-to-pdf\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport htmlToImage from \"html-to-image\";\nimport LoadingSpinner from \"pnnl-react-core/lib/Loader\";\n//var htmlToImage = require(\"html-to-image\");\nconst ref = React.createRef();\nconst options = {\n  orientation: \"landscape\",\n  unit: \"px\",\n  format: [1200, 1200]\n};\n\nconst CustCheckBox = withStyles({\n  root: {\n    color: \"#d3761d\",\n    \"&$checked\": {\n      color: \"#d3761d\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\n/**\n * Report Class\n */\nclass Report extends React.Component {\n  /**\n   * Create state and the active field.\n   * \"active\" is responsible for which\n   * tab you currently are on.\n   *\n   */\n  /**\n   * Constructor that mostly just defines constants so Report's render\n   * knows which page to display based off of the state and which tab is\n   * selected on the page.\n   * Also binds the pageChanged handler.\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    if (!(this.props.location.state == null)) {\n      this.json = JSON.stringify(this.props.location.state.data);\n      //console.log(\"IMPORTANT\");\n      //console.log(this.json);\n      var convert = require(\"xml-js\");\n      this.xml = convert.json2xml(this.props.location.state.data, {\n        compact: true,\n        spaces: 4\n      });\n    }\n    this.pageChanged = this.pageChanged.bind(this);\n    this.items = [];\n    this.basic = \"Basic\";\n    this.numerical = \"Numerical\";\n    this.simple = \"Simple\";\n    this.graphical = \"Graphical\";\n    this.intermediate = \"Intermediate\";\n    this.full = \"Full\";\n    this.state = {\n      active: \"Basic\",\n      width: 0,\n      height: 0,\n      bin_labels: true,\n      bin_dividers: true,\n      chroma_isolines: true,\n      loading: false\n    };\n    if (!(this.props.location.state == null)) {\n      this.name = this.props.location.state.name;\n    }\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleHTMLtoImage = this.handleHTMLtoImage.bind(this);\n    //this.htmlToImage = this.htmlToImage.bind(this);\n  }\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  handleJSONDownload = () => {\n    var fileDownload = require(\"js-file-download\");\n    fileDownload(this.json, `${this.props.location.state.name}.json`);\n  };\n\n  handleXMLDownload = () => {\n    var fileDownload = require(\"js-file-download\");\n    fileDownload(this.xml, `${this.props.location.state.name}.xml`);\n  };\n\n  holder(num) {\n    return { height: num };\n  }\n\n  handleClick = event => {\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n    console.log(this.state);\n  };\n\n  handleClose = event => {\n    this.setState({\n      anchorEl: null\n    });\n  };\n\n  handleBinLabels = event => {\n    if (this.state.bin_labels) {\n      this.setState({\n        bin_labels: false\n      });\n    } else {\n      this.setState({\n        bin_labels: true\n      });\n    }\n  };\n\n  handleBinDividers = event => {\n    if (this.state.bin_dividers) {\n      this.setState({\n        bin_dividers: false\n      });\n    } else {\n      this.setState({\n        bin_dividers: true\n      });\n    }\n  };\n\n  handleChromaIsolines = event => {\n    if (this.state.chroma_isolines) {\n      this.setState({\n        chroma_isolines: false\n      });\n    } else {\n      this.setState({\n        chroma_isolines: true\n      });\n    }\n  };\n\n  handleHTMLtoImage = event => {\n    if (\n      this.state.active === \"Intermediate\" ||\n      this.state.active === \"Simple\"\n    ) {\n      var name = `${this.name}-${this.state.active}.png`;\n      var fileDownload = require(\"js-file-download\");\n      htmlToImage\n        .toBlob(document.getElementById(`${this.state.active}`))\n        .then(function(dataUrl) {\n          fileDownload(dataUrl, name);\n        });\n    }\n  };\n\n  /**\n   * This isn't working the way it is intended\n   */\n  /*\n  handleHTMLtoImage = event => {\n    this.startSpinner(this.stopSpinner);\n  };\n\n  startSpinner(_callback) {\n    //console.log(this.state.active);\n    var name = `${this.name}-${this.state.active}.png`;\n    var fileDownload = require(\"js-file-download\");\n    this.setState(\n      {\n        loading: true\n      },\n      () => {\n        console.log(this.state.loading);\n        htmlToImage\n          .toBlob(document.getElementById(`${this.state.active}`))\n          .then(function(dataUrl) {\n            fileDownload(dataUrl, name);\n          });\n        _callback();\n      }\n    );\n  }\n\n  stopSpinner = () => {\n    this.setState({\n      loading: false\n    });\n    console.log(this.state.loading);\n  };\n  */\n  /**\n   * Handler for changing the tab on the Reports page.\n   * @param {*} e //The event of changing tabs. Contains the tesxt of the tab\n   */\n  pageChanged(e) {\n    if (!(e.target.text == null)) {\n      this.setState({\n        active: e.target.text\n      });\n    }\n  }\n  /**\n   * Render function for the Reports page.\n   * Fairly extensive because Report is the handler for all the\n   * Report pages explained above. So depending on which tab is selected,\n   * the page will display different content.\n   *\n   * If an SPD calculation has not been calculated then there will be instructions on how to run\n   * one rather than errors showing.\n   * ! If the user leaves the tab then the SPD information will leave Cache\n   *\n   */\n  render() {\n    return (\n      <div>\n        {!(this.props.location.state == null) ? (\n          <div></div>\n        ) : (\n          <div\n            style={{\n              height: this.state.height - 300\n            }}\n          >\n            <br />\n            <Card>\n              <h2>No data Calculated</h2>\n\n              <ol>\n                <li>Click on Calculator above</li> <br />\n                <li>Choose which way to calculate data</li> <br />\n                <li>Click Calculate and you will be redirected here</li>\n              </ol>\n            </Card>\n          </div>\n        )}\n        {!(this.props.location.state == null) ? (\n          <Grid>\n            {\n              //(this.name = this.props.location.state.name)\n            }\n            <Row>\n              <Col xs={4}></Col>\n              <Col xs={4} align=\"center\">\n                {this.props.location.state.name === \"\" ? (\n                  <h1 align=\"center\">No SPD Name Specified</h1>\n                ) : (\n                  <div>\n                    <h1 align=\"center\">{this.props.location.state.name}</h1>\n                    <div>Download Data:</div>\n                    <Button onClick={this.handleJSONDownload}>JSON</Button>\n                    <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                    <Button onClick={this.handleXMLDownload}>XML</Button>\n                    <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                    {/*}\n                    <Pdf\n                      targetRef={ref}\n                      filename={`${this.props.location.state.name}.pdf`}\n                      x={75}\n                      y={50}\n                      options={options}\n                    >\n                      {({ toPdf }) => <Button onClick={toPdf}>PDF</Button>}\n                    </Pdf>\n                */}\n                    {this.state.loading ? (\n                      <div>\n                        <br />\n                        <label>\n                          {\" \"}\n                          Downloading Image <br />{\" \"}\n                          <LoadingSpinner color=\"copper\" size={6} />{\" \"}\n                        </label>\n                      </div>\n                    ) : (\n                      <Button onClick={this.handleHTMLtoImage}>Image</Button>\n                    )}\n                    {\n                      //<Save />\n                    }\n                    <br />\n                    <br />\n                    <div>\n                      <Button onClick={this.handleClick}>Options</Button>\n                      <Menu\n                        id=\"simple-menu\"\n                        anchorEl={this.state.anchorEl}\n                        keepMounted\n                        open={Boolean(this.state.anchorEl)}\n                        onClose={this.handleClose}\n                      >\n                        <MenuItem>\n                          {\" \"}\n                          <FormControlLabel\n                            control={\n                              <CustCheckBox\n                                icon={\n                                  <CheckBoxOutlineBlankIcon\n                                    style={{ fontSize: 20 }}\n                                  />\n                                }\n                                checkedIcon={\n                                  <CheckBoxIcon style={{ fontSize: 20 }} />\n                                }\n                                checked={this.state.bin_labels}\n                                onChange={this.handleBinLabels}\n                              />\n                            }\n                            labelPlacement=\"end\"\n                            label={\n                              <span style={{ fontSize: \"1.5rem\" }}>\n                                Bin Labels\n                              </span>\n                            }\n                          />\n                        </MenuItem>\n                        <MenuItem>\n                          {\" \"}\n                          <FormControlLabel\n                            control={\n                              <CustCheckBox\n                                icon={\n                                  <CheckBoxOutlineBlankIcon\n                                    style={{ fontSize: 20 }}\n                                  />\n                                }\n                                checkedIcon={\n                                  <CheckBoxIcon style={{ fontSize: 20 }} />\n                                }\n                                checked={this.state.bin_dividers}\n                                onChange={this.handleBinDividers}\n                              />\n                            }\n                            labelPlacement=\"end\"\n                            label={\n                              <span style={{ fontSize: \"1.5rem\" }}>\n                                Bin Dividers\n                              </span>\n                            }\n                          />\n                        </MenuItem>\n                        <MenuItem>\n                          {\" \"}\n                          <FormControlLabel\n                            control={\n                              <CustCheckBox\n                                icon={\n                                  <CheckBoxOutlineBlankIcon\n                                    style={{ fontSize: 20 }}\n                                  />\n                                }\n                                checkedIcon={\n                                  <CheckBoxIcon style={{ fontSize: 20 }} />\n                                }\n                                checked={this.state.chroma_isolines}\n                                onChange={this.handleChromaIsolines}\n                              />\n                            }\n                            labelPlacement=\"end\"\n                            label={\n                              <span style={{ fontSize: \"1.5rem\" }}>\n                                Chroma Isolines\n                              </span>\n                            }\n                          />\n                        </MenuItem>\n                      </Menu>\n                    </div>\n                  </div>\n                )}\n                {/*this.state.active === \"Basic\" ||\n                this.state.active === \"Graphical\" ||\n                this.state.active === \"Numerical\" ? (\n                  <h1 align=\"center\">{`${this.state.active}`} Results</h1>\n                ) : (\n                  <h1 align=\"center\">{`${this.state.active}`} Report</h1>\n                )*/}\n              </Col>\n              <Col xs={4}></Col>\n            </Row>\n            <Row>\n              <Col align=\"center\">\n                <Pagination onClick={this.pageChanged}>\n                  <Pagination.Item\n                    key={this.basic}\n                    active={\n                      this.basic === this.state.active ||\n                      this.state.active == null\n                    }\n                  >\n                    {this.basic}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.graphical}\n                    active={this.graphical === this.state.active}\n                  >\n                    {this.graphical}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.numerical}\n                    active={this.numerical === this.state.active}\n                  >\n                    {this.numerical}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.simple}\n                    active={this.simple === this.state.active}\n                  >\n                    {this.simple}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.intermediate}\n                    active={this.intermediate === this.state.active}\n                  >\n                    {this.intermediate}\n                  </Pagination.Item>\n                  <Pagination.Item\n                    key={this.full}\n                    active={this.full === this.state.active}\n                  >\n                    {this.full}\n                  </Pagination.Item>\n                </Pagination>\n              </Col>\n            </Row>\n            {this.state.active === \"Basic\" ? (\n              <div\n                style={{\n                  width: \"125%\",\n                  marginLeft: \"-15%\",\n                  padding: \"50, 50, 50, 50\"\n                }}\n                ref={ref}\n                id=\"Basic\"\n              >\n                <br />\n                <Row>\n                  <Col xs={12} md={7}>\n                    {\" \"}\n                    <Card>\n                      <div style={this.holder(400)}>\n                        <ELFPlot\n                          test={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.normalized_SPD_test\n                          }\n                          ref_spd={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.normalized_SPD_ref\n                          }\n                          wavelengths={\n                            this.props.location.state.data.tm30.input.Wavelength\n                          }\n                        ></ELFPlot>\n                      </div>\n                    </Card>\n                  </Col>\n                  <Col xs={12} md={5}>\n                    <Card>\n                      <div style={this.holder(400)}>\n                        <LCSPlot\n                          data={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.local_chroma_shift\n                          }\n                        ></LCSPlot>\n                      </div>\n                    </Card>\n                  </Col>\n                </Row>\n                <br />\n                <Row>\n                  <Col xs={12} md={7}>\n                    <Card>\n                      <CVGPlot\n                        xtest={\n                          this.props.location.state.data.tm30.Numerical_Results\n                            .path_xtest\n                        }\n                        ytest={\n                          this.props.location.state.data.tm30.Numerical_Results\n                            .path_ytest\n                        }\n                        xref={\n                          this.props.location.state.data.tm30.Numerical_Results\n                            .path_xref\n                        }\n                        yref={\n                          this.props.location.state.data.tm30.Numerical_Results\n                            .path_yref\n                        }\n                        rf={\n                          this.props.location.state.data.tm30.Numerical_Results\n                            .rg\n                        }\n                        rg={\n                          this.props.location.state.data.tm30.Numerical_Results\n                            .rf\n                        }\n                        cct={\n                          this.props.location.state.data.tm30.Numerical_Results\n                            .CCT[0]\n                        }\n                        duv={\n                          this.props.location.state.data.tm30.Numerical_Results\n                            .DUV[0]\n                        }\n                        options={this.state}\n                      ></CVGPlot>\n                    </Card>\n                  </Col>\n                  <Col xs={12} md={5}>\n                    <Card>\n                      <div style={this.holder(400)}>\n                        <LHSPlot\n                          data={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.local_hue_shift\n                          }\n                        ></LHSPlot>\n                      </div>\n                    </Card>\n\n                    <br />\n\n                    <Card>\n                      <div style={this.holder(380)}>\n                        <LCFPlot\n                          data={\n                            this.props.location.state.data.tm30\n                              .Numerical_Results.local_color_fidelity\n                          }\n                        ></LCFPlot>\n                      </div>\n                    </Card>\n                  </Col>\n                </Row>\n              </div>\n            ) : (\n              <div></div>\n            )}\n            {this.state.active === \"Numerical\" ? (\n              <Numerical\n                tm30={this.props.location.state.data.tm30.Numerical_Results}\n                input={this.props.location.state.data.tm30.input}\n              />\n            ) : (\n              <div></div>\n            )}\n            {this.state.active === \"Graphical\" ? (\n              <Graphical\n                tm30={this.props.location.state.data.tm30.Numerical_Results}\n                input={this.props.location.state.data.tm30.input}\n                options={this.state}\n              />\n            ) : (\n              <div></div>\n            )}\n            {this.state.active === \"Simple\" ? (\n              <div ref={ref} id=\"Simple\">\n                <Simple\n                  tm30={this.props.location.state.data.tm30.Numerical_Results}\n                  input={this.props.location.state.data.tm30.input}\n                  options={this.state}\n                />\n              </div>\n            ) : (\n              <div></div>\n            )}\n            {this.state.active === \"Intermediate\" ? (\n              <div>\n                <div\n                  style={\n                    {\n                      //width: \"115%\",\n                      //marginLeft: \"-10%\",\n                      //padding: \"50, 50, 50, 50\"\n                    }\n                  }\n                  ref={ref}\n                  id=\"Intermediate\"\n                >\n                  <Card>\n                    <Intermediate\n                      tm30={\n                        this.props.location.state.data.tm30.Numerical_Results\n                      }\n                      input={this.props.location.state.data.tm30.input}\n                      active={this.state.active}\n                      options={this.state}\n                    />\n                  </Card>\n                </div>\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </Grid>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n/**\n * Export the Report Component\n */\nexport default Report;\n"]},"metadata":{},"sourceType":"module"}