import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import Avatar from '../Avatar';

const AvatarInfo = (props) => {
  const {
    align,
    className,
    size,
    title,
    subTitle,
  } = props;

  let { avatarComponent } = props;

  const classes = classNames(
    'PnnlAvatarInfo',
    className,
    {
      'PnnlAvatarInfo-left': (align === 'left'),
      'PnnlAvatarInfo-right': (align === 'right'),
      'PnnlAvatarInfo-center': (align === 'center'),
    }
  );

  if (avatarComponent === null) {
    let avatarText;
    if (title && typeof title === 'string') {
      const titleWords = title.split(' ');
      avatarText = titleWords[0].slice(0, 1);
      if (titleWords[1]) {
        avatarText = avatarText.concat(titleWords[1].slice(0, 1));
      }
    }
    avatarComponent = (
      <Avatar size={size} key={1}>{avatarText}</Avatar>
    );
  } else {
    avatarComponent = React.cloneElement(avatarComponent, { key: 1 });
  }

  let content = [
    avatarComponent,
    <span key={2}>
      <strong>{title}</strong>
      {subTitle && <small>{subTitle}</small>}
    </span>
  ];

  if (align === 'right') {
    content.reverse();
  } else if (align === 'center') {
    content = [
      (subTitle && typeof subTitle === 'string') && <strong key={2}>{subTitle}</strong>,
      avatarComponent,
      <small key={3}>{title}</small>,
      (subTitle && React.isValidElement(subTitle)) && subTitle
    ];
  }

  return (
    <div className={classes}>
      {content}
    </div>
  );
};

AvatarInfo.propTypes = {
  /**
   * Which side should the Avatar be aligned on? Choosing 'center' will stack the information
   */
  align: PropTypes.oneOf(['left', 'right', 'center']),
  /**
   * An Avatar to display instead of the default one created by the component.
   */
  avatarComponent: PropTypes.node,
  /**
   * The css class name of the root `div` or `img` element. Can be one of our standard color names to set the background color, or "text-*" with a color to specify the icon/text color.
   */
  className: PropTypes.string,
  /**
   * This is the size of the avatar. Our breakpoints are consistent with Boostrap grid breakpoints. 'md' is the default. These translate into a className, and the actual sizes are defined in pnnl-theme-core.
   */
  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg']),
  /**
   * The main info label to display.  Often the name of the person, space, or building being represented.
   */
  title: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.element
  ]),
  /**
   * Secondary info to display.  Often this is the role of the person, room number of the space, or address of the building.
   */
  subTitle: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.element
  ]),
};

AvatarInfo.defaultProps = {
  align: 'left',
  avatarComponent: null,
  className: null,
  size: 'md',
  subTitle: null,
  title: null
};

export default AvatarInfo;
