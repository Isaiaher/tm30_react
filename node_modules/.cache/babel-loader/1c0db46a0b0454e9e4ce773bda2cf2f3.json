{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/HBAPlot.jsx\";\n\n/**\n * Hue-Angle Bin Average Coordinates\n *\n * A component for the Hue-Angle Bin Average Coordinates. This graph is\n * similar to the CVG plot, but it uses the Hue-Bin average numbers, (The average (a', b') coordinates of CAM02-UCS )\n * thus the ploygons are not as round and more jagged. It also does not have\n * the reference circles and the extra information displayed on the plot.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n/**\n * HBAPlot Class\n */\n\nexport class HBAPlot extends Component {\n  /**\n   * Constructor to initialize variables with props data\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.a_prime_test_j = this.props.a_prime_test_j;\n    this.a_prime_test_j.push(this.a_prime_test_j[0]); //Connect the polygon completely\n\n    this.b_prime_test_j = this.props.b_prime_test_j;\n    this.b_prime_test_j.push(this.b_prime_test_j[0]); //Connect the polygon completely\n\n    this.a_prime_ref_j = this.props.a_prime_ref_j;\n    this.a_prime_ref_j.push(this.a_prime_ref_j[0]); //Connect the polygon completely\n\n    this.b_prime_ref_j = this.props.b_prime_ref_j;\n    this.b_prime_ref_j.push(this.b_prime_ref_j[0]); //Connect the polygon completely\n\n    var theta;\n    var i;\n    /**\n     * Creating the Bin Numbers\n     */\n\n    this.bin_numbers = [];\n    theta = 11.5;\n\n    for (i = 1; i <= 16; i++) {\n      var x = 35 * Math.cos(theta * Math.PI / 180);\n      var y = 35 * Math.sin(theta * Math.PI / 180);\n      theta += 22.5;\n      this.bin_numbers[i - 1] = {\n        x: x,\n        y: y,\n        xref: \"x\",\n        yref: \"y\",\n        text: \"\".concat(i),\n        font: {\n          size: 12,\n          color: \"black\"\n        },\n        ax: 0,\n        ay: 0\n      };\n    }\n    /**\n     * Creating Bin lines\n     * Important - these are different than the CVG lines\n     * because this graph's scale is much larger so the lines extend\n     * much further.\n     */\n\n\n    this.bin_lines = [{\n      x: [-60, 60],\n      y: [0, 0],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false,\n      hoverinfo: \"skip\"\n    }, {\n      x: [-55.43, 55.43],\n      y: [-22.96, 22.96],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false,\n      hoverinfo: \"skip\"\n    }, {\n      x: [-42.43, 42.43],\n      y: [-42.43, 42.43],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false,\n      hoverinfo: \"skip\"\n    }, {\n      x: [-22.96, 22.96],\n      y: [-55.43, 55.43],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false,\n      hoverinfo: \"skip\"\n    }, {\n      x: [0, 0],\n      y: [-60.0, 60.0],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false,\n      hoverinfo: \"skip\"\n    }, {\n      x: [55.43, -55.43],\n      y: [-22.96, 22.96],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false,\n      hoverinfo: \"skip\"\n    }, {\n      x: [22.96, -22.96],\n      y: [-55.43, 55.43],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false,\n      hoverinfo: \"skip\"\n    }, {\n      x: [42.43, -42.43],\n      y: [-42.43, 42.43],\n      mode: \"lines\",\n      name: \"Solid\",\n      line: {\n        dash: \"5px\",\n        width: 1\n      },\n      marker: {\n        color: \"grey\"\n      },\n      showlegend: false,\n      hoverinfo: \"skip\"\n    }];\n  }\n  /**\n   * Render method for HBAPlot\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        position: \"inherit\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [...this.bin_lines, {\n        name: \"Test\",\n        x: this.a_prime_test_j,\n        y: this.b_prime_test_j,\n        type: \"scatter\",\n        mode: \"lines+markers\",\n        connectgaps: true,\n        marker: {\n          symbol: \"square\",\n          color: \"red\"\n        }\n      }, {\n        name: \"Reference\",\n        x: this.a_prime_ref_j,\n        y: this.b_prime_ref_j,\n        type: \"scatter\",\n        mode: \"lines+markers\",\n        connectgaps: true,\n        marker: {\n          symbol: \"square\",\n          color: \"black\"\n        }\n      }],\n      layout: {\n        showlegend: false,\n        width: 400,\n        height: 400,\n        margin: {\n          l: 50,\n          r: 40,\n          b: 55,\n          t: 30,\n          pad: 4\n        },\n        xaxis: {\n          showgrid: false,\n          showline: true,\n          zeroline: false,\n          ticks: \"outside\",\n          showticklabels: true,\n          title: {\n            text: \"a'\"\n          },\n          range: [-40, 40]\n        },\n        yaxis: {\n          ticks: \"outside\",\n          zeroline: false,\n          showgrid: false,\n          showline: true,\n          showticklabels: true,\n          title: {\n            text: \"b'\"\n          },\n          range: [-40, 40]\n        },\n        images: [{\n          source: \"https://i.imgur.com/QkpOGSJ.png\",\n          xref: \"x\",\n          yref: \"y\",\n          x: -40,\n          y: 40,\n          sizex: 80,\n          sizey: 80,\n          sizing: \"stretch\",\n          layer: \"below\"\n        }],\n        annotations: [...this.bin_numbers]\n      },\n      config: {\n        displayModeBar: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Hue-Angle Bin Average Coordinates\"), \"The average (a', b') coordinates of CAM02-UCS are calculated for the\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), \"CES within each of 16 hue-angle bins. Rg is based on the area of the\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), \"polygons for the test and reference conditions. The three types of\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), \"\\\"Local\\\" values are based on the difference in coordinates for each\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), \"hue-angle bin. [Background is for visual orientation only]\"));\n  }\n\n}\nexport default HBAPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/HBAPlot.jsx"],"names":["React","Component","Plot","HBAPlot","constructor","props","a_prime_test_j","push","b_prime_test_j","a_prime_ref_j","b_prime_ref_j","theta","i","bin_numbers","x","Math","cos","PI","y","sin","xref","yref","text","font","size","color","ax","ay","bin_lines","mode","name","line","dash","width","marker","showlegend","hoverinfo","render","position","display","type","connectgaps","symbol","height","margin","l","r","b","t","pad","xaxis","showgrid","showline","zeroline","ticks","showticklabels","title","range","yaxis","images","source","sizex","sizey","sizing","layer","annotations","displayModeBar"],"mappings":"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","sourcesContent":["/**\n * Hue-Angle Bin Average Coordinates\n *\n * A component for the Hue-Angle Bin Average Coordinates. This graph is\n * similar to the CVG plot, but it uses the Hue-Bin average numbers, (The average (a', b') coordinates of CAM02-UCS )\n * thus the ploygons are not as round and more jagged. It also does not have\n * the reference circles and the extra information displayed on the plot.\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n/**\n * HBAPlot Class\n */\nexport class HBAPlot extends Component {\n  /**\n   * Constructor to initialize variables with props data\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    this.a_prime_test_j = this.props.a_prime_test_j;\n    this.a_prime_test_j.push(this.a_prime_test_j[0]); //Connect the polygon completely\n    this.b_prime_test_j = this.props.b_prime_test_j;\n    this.b_prime_test_j.push(this.b_prime_test_j[0]); //Connect the polygon completely\n\n    this.a_prime_ref_j = this.props.a_prime_ref_j;\n    this.a_prime_ref_j.push(this.a_prime_ref_j[0]); //Connect the polygon completely\n    this.b_prime_ref_j = this.props.b_prime_ref_j;\n    this.b_prime_ref_j.push(this.b_prime_ref_j[0]); //Connect the polygon completely\n\n    var theta;\n    var i;\n\n    /**\n     * Creating the Bin Numbers\n     */\n    this.bin_numbers = [];\n    theta = 11.5;\n    for (i = 1; i <= 16; i++) {\n      var x = 35 * Math.cos((theta * Math.PI) / 180);\n      var y = 35 * Math.sin((theta * Math.PI) / 180);\n      theta += 22.5;\n      this.bin_numbers[i - 1] = {\n        x: x,\n        y: y,\n        xref: \"x\",\n        yref: \"y\",\n        text: `${i}`,\n        font: {\n          size: 12,\n          color: \"black\"\n        },\n        ax: 0,\n        ay: 0\n      };\n    }\n\n    /**\n     * Creating Bin lines\n     * Important - these are different than the CVG lines\n     * because this graph's scale is much larger so the lines extend\n     * much further.\n     */\n    this.bin_lines = [\n      {\n        x: [-60, 60],\n        y: [0, 0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-55.43, 55.43],\n        y: [-22.96, 22.96],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-42.43, 42.43],\n        y: [-42.43, 42.43],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [-22.96, 22.96],\n        y: [-55.43, 55.43],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [0, 0],\n        y: [-60.0, 60.0],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [55.43, -55.43],\n        y: [-22.96, 22.96],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [22.96, -22.96],\n        y: [-55.43, 55.43],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      },\n      {\n        x: [42.43, -42.43],\n        y: [-42.43, 42.43],\n        mode: \"lines\",\n        name: \"Solid\",\n        line: {\n          dash: \"5px\",\n          width: 1\n        },\n        marker: { color: \"grey\" },\n        showlegend: false,\n        hoverinfo: \"skip\"\n      }\n    ];\n  }\n  /**\n   * Render method for HBAPlot\n   */\n  render() {\n    return (\n      <div style={{ position: \"inherit\", display: \"inline-block\" }}>\n        <Plot\n          data={[\n            ...this.bin_lines,\n            {\n              name: \"Test\",\n              x: this.a_prime_test_j,\n              y: this.b_prime_test_j,\n              type: \"scatter\",\n              mode: \"lines+markers\",\n              connectgaps: true,\n              marker: { symbol: \"square\", color: \"red\" }\n            },\n            {\n              name: \"Reference\",\n              x: this.a_prime_ref_j,\n              y: this.b_prime_ref_j,\n              type: \"scatter\",\n              mode: \"lines+markers\",\n              connectgaps: true,\n              marker: { symbol: \"square\", color: \"black\" }\n            }\n          ]}\n          layout={{\n            showlegend: false,\n            width: 400,\n            height: 400,\n            margin: {\n              l: 50,\n              r: 40,\n              b: 55,\n              t: 30,\n              pad: 4\n            },\n\n            xaxis: {\n              showgrid: false,\n              showline: true,\n              zeroline: false,\n              ticks: \"outside\",\n              showticklabels: true,\n              title: {\n                text: \"a'\"\n              },\n              range: [-40, 40]\n            },\n            yaxis: {\n              ticks: \"outside\",\n              zeroline: false,\n              showgrid: false,\n              showline: true,\n              showticklabels: true,\n              title: {\n                text: \"b'\"\n              },\n              range: [-40, 40]\n            },\n            images: [\n              {\n                source: \"https://i.imgur.com/QkpOGSJ.png\",\n                xref: \"x\",\n                yref: \"y\",\n                x: -40,\n                y: 40,\n                sizex: 80,\n                sizey: 80,\n                sizing: \"stretch\",\n                layer: \"below\"\n              }\n            ],\n            annotations: [...this.bin_numbers]\n          }}\n          config={{ displayModeBar: false }}\n        />\n        <div align=\"center\">\n          <h5>Hue-Angle Bin Average Coordinates</h5>\n          The average (a', b') coordinates of CAM02-UCS are calculated for the{\" \"}\n          <br />\n          CES within each of 16 hue-angle bins. Rg is based on the area of the{\" \"}\n          <br />\n          polygons for the test and reference conditions. The three types of{\" \"}\n          <br />\n          \"Local\" values are based on the difference in coordinates for each{\" \"}\n          <br />\n          hue-angle bin. [Background is for visual orientation only]\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HBAPlot;\n"]},"metadata":{},"sourceType":"module"}