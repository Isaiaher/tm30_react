'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _NavLink = require('react-router-dom/NavLink');

var _NavLink2 = _interopRequireDefault(_NavLink);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var Link = function (_React$Component) {
  (0, _inherits3['default'])(Link, _React$Component);

  function Link() {
    (0, _classCallCheck3['default'])(this, Link);
    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
  }

  Link.prototype.isInternal = function isInternal() {
    var to = this.props.to;

    return to.indexOf('http') !== 0 && to.indexOf('mailto') !== 0 && to.indexOf('tel') !== 0 && to.indexOf('sip') !== 0 && to.indexOf('pnnlinstaller') !== 0;
  };

  Link.prototype.render = function render() {
    var _props = this.props,
        to = _props.to,
        children = _props.children,
        className = _props.className,
        activeClassName = _props.activeClassName,
        onlyActiveOnIndex = _props.onlyActiveOnIndex;


    if (this.isInternal()) {
      return _react2['default'].createElement(
        _NavLink2['default'],
        { to: to, className: className, activeClassName: activeClassName, exact: onlyActiveOnIndex },
        children
      );
    }

    return _react2['default'].createElement(
      'a',
      { href: to, className: className },
      children
    );
  };

  return Link;
}(_react2['default'].Component);

exports['default'] = Link;


Link.propTypes = {
  /**
    * The URL that you want to link to.
    * @required
    * */
  to: _propTypes2['default'].string.isRequired,
  /**
    * The link passed as children
    * @required
    * */
  children: _propTypes2['default'].node.isRequired,
  /**
    * A class to apply to the link, if you need app-specific styling
    * */
  className: _propTypes2['default'].string,
  /**
    * The class to apply when the link is active (may we suggest "active"?)
    * */
  activeClassName: _propTypes2['default'].string,
  /**
    * When this is true the active class will only be applied when the path matches exactly, not for any sub-page matches
    * */
  onlyActiveOnIndex: _propTypes2['default'].bool
};

Link.defaultProps = {
  activeClassName: 'active',
  onlyActiveOnIndex: true,
  className: ''
};
module.exports = exports['default'];