{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Calculator/Calc.jsx\";\n\n/**\r\n * Calc.\r\n *\r\n * A component for the Calculator page of the program.\r\n * Contains three different \"Sections\" or input options\r\n *\r\n * A - Example\r\n * - The user is able to select an Example SPD to send to the server for it to run\r\n *\r\n * B - File Input\r\n * - The user is able to choose an SPDX file that the app will parse and send the SPD and Wavelength information to the Server\r\n *\r\n * C - Paste Option\r\n * - The user is able to specify the details on their Wavelength 9Start, end, and Step size)\r\n * and then paste in the SPD (In a newline seperated format) to send to the Server to run\r\n *\r\n * !The backend can not handle anything that is not a 380-780 by 1 step SPD as of 11.07.2018\r\n *\r\n * TODO Implement the Linear Interpolation functionality to the Pasting option.\r\n *\r\n * @author Isaiah Scheel.\r\n * @since  11.07.2019\r\n */\n\n/**\r\n * Imports\r\n */\nimport React from \"react\";\nimport Grid from \"react-bootstrap/es/Grid\";\nimport Card from \"pnnl-react-core/lib/Card\";\nimport Examples from \"./Sections/Examples\";\nimport FileInput from \"./Sections/FileInput\";\nimport Paste from \"./Sections/Paste\";\nimport Col from \"react-bootstrap/es/Col\";\nimport Row from \"react-bootstrap/es/Row\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nconst CustCheckBox = withStyles({\n  root: {\n    color: \"#d3761d\",\n    \"&$checked\": {\n      color: \"#d3761d\"\n    }\n  },\n  checked: {}\n})(props => React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n})));\n/**\r\n * The Calc class. Just uses all three options as seperate components\r\n */\n\nclass Calc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      cvglines: true\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: this.state.height - 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"CVG Options\"), React.createElement(Checkbox, {\n      icon: React.createElement(CheckBoxOutlineBlankIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }),\n      checkedIcon: React.createElement(CheckBoxIcon, {\n        fontSize: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      checked: this.state.cvglines //onChange={}\n      ,\n      value: \"checkedG\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Input SPD from Library\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Example:\"), React.createElement(\"div\", {\n      className: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Examples, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Import .spdx File\"), React.createElement(FileInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      xs: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Paste, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Calc;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Calculator/Calc.jsx"],"names":["React","Grid","Card","Examples","FileInput","Paste","Col","Row","Checkbox","withStyles","CheckBoxOutlineBlankIcon","CheckBoxIcon","CustCheckBox","root","color","checked","props","Calc","Component","constructor","state","width","height","cvglines","updateWindowDimensions","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","setState","innerWidth","innerHeight","render"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,YAAY,GAAGH,UAAU,CAAC;AAC9BI,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,SADH;AAEJ,iBAAa;AACXA,MAAAA,KAAK,EAAE;AADI;AAFT,GADwB;AAO9BC,EAAAA,OAAO,EAAE;AAPqB,CAAD,CAAV,CAQlBC,KAAK,IAAI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAC;AAAhB,GAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GARS,CAArB;AAUA;;;;AAGA,MAAMC,IAAN,SAAmBjB,KAAK,CAACkB,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKI,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,MAAM,EAAE,CAFG;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,sBAAL;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,sBAAvC;AACD;;AAEDK,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKN,sBAA1C;AACD;;AAEDA,EAAAA,sBAAsB,GAAG;AACvB,SAAKO,QAAL,CAAc;AAAEV,MAAAA,KAAK,EAAEM,MAAM,CAACK,UAAhB;AAA4BV,MAAAA,MAAM,EAAEK,MAAM,CAACM;AAA3C,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,KAAK,EAAE;AACLZ,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAAX,GAAoB;AADvB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,oBAAC,wBAAD;AAA0B,QAAA,QAAQ,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR;AAEE,MAAA,WAAW,EAAE,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFf;AAGE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,QAHtB,CAIE;AAJF;AAKE,MAAA,KAAK,EAAC,UALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CAFF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAiBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF,EAsBE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,CADF,CADF,EA6BE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CA7BF,EAmCE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAnCF,CAjBF,CALF,CADF;AAmED;;AA3FgC;;AA8FnC,eAAeN,IAAf","sourcesContent":["/**\r\n * Calc.\r\n *\r\n * A component for the Calculator page of the program.\r\n * Contains three different \"Sections\" or input options\r\n *\r\n * A - Example\r\n * - The user is able to select an Example SPD to send to the server for it to run\r\n *\r\n * B - File Input\r\n * - The user is able to choose an SPDX file that the app will parse and send the SPD and Wavelength information to the Server\r\n *\r\n * C - Paste Option\r\n * - The user is able to specify the details on their Wavelength 9Start, end, and Step size)\r\n * and then paste in the SPD (In a newline seperated format) to send to the Server to run\r\n *\r\n * !The backend can not handle anything that is not a 380-780 by 1 step SPD as of 11.07.2018\r\n *\r\n * TODO Implement the Linear Interpolation functionality to the Pasting option.\r\n *\r\n * @author Isaiah Scheel.\r\n * @since  11.07.2019\r\n */\r\n/**\r\n * Imports\r\n */\r\nimport React from \"react\";\r\nimport Grid from \"react-bootstrap/es/Grid\";\r\nimport Card from \"pnnl-react-core/lib/Card\";\r\nimport Examples from \"./Sections/Examples\";\r\nimport FileInput from \"./Sections/FileInput\";\r\nimport Paste from \"./Sections/Paste\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\nconst CustCheckBox = withStyles({\r\n  root: {\r\n    color: \"#d3761d\",\r\n    \"&$checked\": {\r\n      color: \"#d3761d\"\r\n    }\r\n  },\r\n  checked: {}\r\n})(props => <Checkbox color=\"default\" {...props} />);\r\n\r\n/**\r\n * The Calc class. Just uses all three options as seperate components\r\n */\r\nclass Calc extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      cvglines: true\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: this.state.height - 300\r\n        }}\r\n      >\r\n        <Grid>\r\n          <br />\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Card>\r\n                <h2>CVG Options</h2>\r\n                <Checkbox\r\n                  icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                  checkedIcon={<CheckBoxIcon fontSize=\"xl\" />}\r\n                  checked={this.state.cvglines}\r\n                  //onChange={}\r\n                  value=\"checkedG\"\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col xs={4}>\r\n              <Card>\r\n                <h2>Input SPD from Library</h2>\r\n                {/*<label>\r\n          User:\r\n          <select id=\"User\" name=\"User\">\r\n            <option value=\"one\">1</option>\r\n            <option value=\"two\">2</option>\r\n            <option value=\"three\">3</option>\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Commercial:\r\n          <select id=\"Commercial\" name=\"Commercial\">\r\n            <option value=\"one\">1</option>\r\n            <option value=\"two\">2</option>\r\n            <option value=\"three\">3</option>\r\n          </select>\r\n        </label>\r\n        <br />\r\n        */}\r\n                <label>Example:</label>\r\n                <div className=\"select\">\r\n                  <Examples />\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={3}>\r\n              <Card>\r\n                <h2>Import .spdx File</h2>\r\n                <FileInput />\r\n              </Card>\r\n            </Col>\r\n            <Col xs={5}>\r\n              <Card>\r\n                <Paste />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calc;\r\n"]},"metadata":{},"sourceType":"module"}