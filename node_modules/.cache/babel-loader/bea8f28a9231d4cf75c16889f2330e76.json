{"ast":null,"code":"var _jsxFileName = \"/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/LCSPlot.jsx\";\n\n/**\n * Local Chroma Shift Bar Graph\n *\n * A component for the Chroma Shift Bar Graph. Your basic\n * bar graph with the \"local_chroma_shift\" data from the returned JSON\n * from the C code. There are a few conditionals if it is Big (Graphical Results)\n * or not (the basic results). The difference between the two is pixel size and\n * spacing between the bars.\n *\n * TODO - Add the Samples per bin (m) above each bar\n * TODO - Shows the exact percentages over the hover rather than the rounded\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport Card from \"pnnl-react-core/lib/Card\";\n/**\n * LCSPlot Class\n */\n\nexport class LCSPlot extends Component {\n  /**\n   * Constructor that pulls in data from the props.\n   * Also uses the \"long\" variable boolean to check\n   * if it is the graph for the Graphical page\n   * which will make the graph longer and have more\n   * spacing in between the bars\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    var lcs = this.props.data;\n    var i;\n    this.long = this.props.long;\n    /**\n     * Check whether it is the long graph or not.\n     * The long graph is used in the graphical results\n     * tab in the report page.\n     */\n\n    if (this.long) {\n      this.width = 800;\n      this.height = 400;\n      this.bar_gap = 5;\n    } else {\n      this.width = 550;\n      this.height = 400;\n      this.bar_gap = 0;\n    }\n\n    this.x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n    this.y = [lcs[0] / 100, lcs[1] / 100, lcs[2] / 100, lcs[3] / 100, lcs[4] / 100, lcs[5] / 100, lcs[6] / 100, lcs[7] / 100, lcs[8] / 100, lcs[9] / 100, lcs[10] / 100, lcs[11] / 100, lcs[12] / 100, lcs[13] / 100, lcs[14] / 100, lcs[15] / 100];\n    this.y_rounded = [];\n\n    for (i = 0; i < 16; i++) {\n      this.y_rounded[i] = \"\".concat(Math.round(this.y[i] * 100), \"%\");\n    }\n    /**\n     * Colors for each bar/Huebin. Used throughout the code.\n     */\n\n\n    this.bar_colors = [\"#b45c60\", \"#cb7761\", \"#cb824b\", \"#d7ad67\", \"#ac9a5d\", \"#919E60\", \"#678B5F\", \"#62B08F\", \"#7CBABA\", \"#2C797D\", \"#54778C\", \"#7189B1\", \"#988CA9\", \"#735876\", \"#8F6682\", \"#B97B8E\"];\n    this.y_full = [lcs[0], lcs[1], lcs[2], lcs[3], lcs[4], lcs[5], lcs[6], lcs[7], lcs[8], lcs[9], lcs[10], lcs[11], lcs[12], lcs[13], lcs[14], lcs[15]];\n  }\n\n  render() {\n    return React.createElement(Plot, {\n      useResizeHandler: true,\n      style: {\n        width: \"100%\"\n      },\n      title: null,\n      data: [{\n        name: \"\",\n        type: \"bar\",\n        x: this.x,\n        y: this.y,\n        marker: {\n          color: this.bar_colors\n        },\n        textfont: {\n          size: 14\n        },\n        outsidetextfont: {\n          size: 20\n        },\n        text: this.y_rounded,\n        textangle: \"-90\",\n        textposition: \"outside\",\n        hovertemplate: \"R<sub>cs,h%{x}</sub>: %{y}\" //hoverinfo: \"y\"\n\n      }],\n      layout: {\n        //width: this.width,\n        height: this.height,\n        margin: {\n          l: 60,\n          r: 10,\n          b: 45,\n          t: 10,\n          pad: 4\n        },\n        xaxis: {\n          title: {\n            text: \"Hue-Angle Bin (<i>j</i>)\"\n          },\n          tickmode: \"linear\"\n        },\n        yaxis: {\n          tickmode: \"array\",\n          tickvals: [-0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4],\n          ticktext: [\"-40%\", \"-30%\", \"-20%\", \"-10%\", \"0%\", \"10%\", \"20%\", \"30%\", \"40%\"],\n          //range: [-0.4, 0.4],\n          title: {\n            text: \"Local Chroma Shift (<i>R</i><sub>cs,hj</sub>)\" //tickformat: \"%\"\n\n          }\n        },\n        bargap: this.bar_gap\n      },\n      config: {\n        displaylogo: false,\n        modeBarButtons: [[\"toImage\"]],\n        responsive: true,\n        toImageButtonOptions: {\n          format: \"png\",\n          // one of png, svg, jpeg, webp\n          filename: \"Local Chroma Shift\",\n          height: 700,\n          width: 900,\n          scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    });\n  }\n\n}\nexport default LCSPlot;","map":{"version":3,"sources":["/Users/sche566/OneDrive - PNNL/Code/ies_tm30_web_app/React App/src/components/pages/Report/Plots/LCSPlot.jsx"],"names":["React","Component","Plot","Card","LCSPlot","constructor","props","lcs","data","i","long","width","height","bar_gap","x","y","y_rounded","Math","round","bar_colors","y_full","render","name","type","marker","color","textfont","size","outsidetextfont","text","textangle","textposition","hovertemplate","margin","l","r","b","t","pad","xaxis","title","tickmode","yaxis","tickvals","ticktext","bargap","displaylogo","modeBarButtons","responsive","toImageButtonOptions","format","filename","scale"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAgBA;;;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA;;;;AAGA,OAAO,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AACrC;;;;;;;;AAQAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,QAAIC,GAAG,GAAG,KAAKD,KAAL,CAAWE,IAArB;AACA,QAAIC,CAAJ;AAEA,SAAKC,IAAL,GAAY,KAAKJ,KAAL,CAAWI,IAAvB;AACA;;;;;;AAKA,QAAI,KAAKA,IAAT,EAAe;AACb,WAAKC,KAAL,GAAa,GAAb;AACA,WAAKC,MAAL,GAAc,GAAd;AACA,WAAKC,OAAL,GAAe,CAAf;AACD,KAJD,MAIO;AACL,WAAKF,KAAL,GAAa,GAAb;AACA,WAAKC,MAAL,GAAc,GAAd;AACA,WAAKC,OAAL,GAAe,CAAf;AACD;;AAED,SAAKC,CAAL,GAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,CAAT;AACA,SAAKC,CAAL,GAAS,CACPR,GAAG,CAAC,CAAD,CAAH,GAAS,GADF,EAEPA,GAAG,CAAC,CAAD,CAAH,GAAS,GAFF,EAGPA,GAAG,CAAC,CAAD,CAAH,GAAS,GAHF,EAIPA,GAAG,CAAC,CAAD,CAAH,GAAS,GAJF,EAKPA,GAAG,CAAC,CAAD,CAAH,GAAS,GALF,EAMPA,GAAG,CAAC,CAAD,CAAH,GAAS,GANF,EAOPA,GAAG,CAAC,CAAD,CAAH,GAAS,GAPF,EAQPA,GAAG,CAAC,CAAD,CAAH,GAAS,GARF,EASPA,GAAG,CAAC,CAAD,CAAH,GAAS,GATF,EAUPA,GAAG,CAAC,CAAD,CAAH,GAAS,GAVF,EAWPA,GAAG,CAAC,EAAD,CAAH,GAAU,GAXH,EAYPA,GAAG,CAAC,EAAD,CAAH,GAAU,GAZH,EAaPA,GAAG,CAAC,EAAD,CAAH,GAAU,GAbH,EAcPA,GAAG,CAAC,EAAD,CAAH,GAAU,GAdH,EAePA,GAAG,CAAC,EAAD,CAAH,GAAU,GAfH,EAgBPA,GAAG,CAAC,EAAD,CAAH,GAAU,GAhBH,CAAT;AAmBA,SAAKS,SAAL,GAAiB,EAAjB;;AAEA,SAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvB,WAAKO,SAAL,CAAeP,CAAf,cAAuBQ,IAAI,CAACC,KAAL,CAAW,KAAKH,CAAL,CAAON,CAAP,IAAY,GAAvB,CAAvB;AACD;AACD;;;;;AAGA,SAAKU,UAAL,GAAkB,CAChB,SADgB,EAEhB,SAFgB,EAGhB,SAHgB,EAIhB,SAJgB,EAKhB,SALgB,EAMhB,SANgB,EAOhB,SAPgB,EAQhB,SARgB,EAShB,SATgB,EAUhB,SAVgB,EAWhB,SAXgB,EAYhB,SAZgB,EAahB,SAbgB,EAchB,SAdgB,EAehB,SAfgB,EAgBhB,SAhBgB,CAAlB;AAkBA,SAAKC,MAAL,GAAc,CACZb,GAAG,CAAC,CAAD,CADS,EAEZA,GAAG,CAAC,CAAD,CAFS,EAGZA,GAAG,CAAC,CAAD,CAHS,EAIZA,GAAG,CAAC,CAAD,CAJS,EAKZA,GAAG,CAAC,CAAD,CALS,EAMZA,GAAG,CAAC,CAAD,CANS,EAOZA,GAAG,CAAC,CAAD,CAPS,EAQZA,GAAG,CAAC,CAAD,CARS,EASZA,GAAG,CAAC,CAAD,CATS,EAUZA,GAAG,CAAC,CAAD,CAVS,EAWZA,GAAG,CAAC,EAAD,CAXS,EAYZA,GAAG,CAAC,EAAD,CAZS,EAaZA,GAAG,CAAC,EAAD,CAbS,EAcZA,GAAG,CAAC,EAAD,CAdS,EAeZA,GAAG,CAAC,EAAD,CAfS,EAgBZA,GAAG,CAAC,EAAD,CAhBS,CAAd;AAkBD;;AACDc,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AACE,MAAA,gBAAgB,EAAE,IADpB;AAEE,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,KAAK,EAAE,IAHT;AAIE,MAAA,IAAI,EAAE,CACJ;AACEW,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,IAAI,EAAE,KAFR;AAGET,QAAAA,CAAC,EAAE,KAAKA,CAHV;AAIEC,QAAAA,CAAC,EAAE,KAAKA,CAJV;AAKES,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,KAAKN;AADN,SALV;AAQEO,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE;AADE,SARZ;AAWEC,QAAAA,eAAe,EAAE;AACfD,UAAAA,IAAI,EAAE;AADS,SAXnB;AAcEE,QAAAA,IAAI,EAAE,KAAKb,SAdb;AAeEc,QAAAA,SAAS,EAAE,KAfb;AAgBEC,QAAAA,YAAY,EAAE,SAhBhB;AAiBEC,QAAAA,aAAa,8BAjBf,CAkBE;;AAlBF,OADI,CAJR;AA0BE,MAAA,MAAM,EAAE;AACN;AACApB,QAAAA,MAAM,EAAE,KAAKA,MAFP;AAGNqB,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE,EADG;AAENC,UAAAA,CAAC,EAAE,EAFG;AAGNC,UAAAA,CAAC,EAAE,EAHG;AAINC,UAAAA,CAAC,EAAE,EAJG;AAKNC,UAAAA,GAAG,EAAE;AALC,SAHF;AAUNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AACLX,YAAAA,IAAI,EAAE;AADD,WADF;AAILY,UAAAA,QAAQ,EAAE;AAJL,SAVD;AAgBNC,QAAAA,KAAK,EAAE;AACLD,UAAAA,QAAQ,EAAE,OADL;AAELE,UAAAA,QAAQ,EAAE,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,EAAa,CAAC,GAAd,EAAmB,CAAC,GAApB,EAAyB,CAAzB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,CAFL;AAGLC,UAAAA,QAAQ,EAAE,CACR,MADQ,EAER,MAFQ,EAGR,MAHQ,EAIR,MAJQ,EAKR,IALQ,EAMR,KANQ,EAOR,KAPQ,EAQR,KARQ,EASR,KATQ,CAHL;AAcL;AACAJ,UAAAA,KAAK,EAAE;AACLX,YAAAA,IAAI,EAAE,+CADD,CAGP;;AAHO;AAfF,SAhBD;AAoCNgB,QAAAA,MAAM,EAAE,KAAKhC;AApCP,OA1BV;AAgEE,MAAA,MAAM,EAAE;AACNiC,QAAAA,WAAW,EAAE,KADP;AAENC,QAAAA,cAAc,EAAE,CAAC,CAAC,SAAD,CAAD,CAFV;AAGNC,QAAAA,UAAU,EAAE,IAHN;AAINC,QAAAA,oBAAoB,EAAE;AACpBC,UAAAA,MAAM,EAAE,KADY;AACL;AACfC,UAAAA,QAAQ,EAAE,oBAFU;AAGpBvC,UAAAA,MAAM,EAAE,GAHY;AAIpBD,UAAAA,KAAK,EAAE,GAJa;AAKpByC,UAAAA,KAAK,EAAE,GALa,CAKT;;AALS;AAJhB,OAhEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AA+ED;;AA/KoC;AAkLvC,eAAehD,OAAf","sourcesContent":["/**\n * Local Chroma Shift Bar Graph\n *\n * A component for the Chroma Shift Bar Graph. Your basic\n * bar graph with the \"local_chroma_shift\" data from the returned JSON\n * from the C code. There are a few conditionals if it is Big (Graphical Results)\n * or not (the basic results). The difference between the two is pixel size and\n * spacing between the bars.\n *\n * TODO - Add the Samples per bin (m) above each bar\n * TODO - Shows the exact percentages over the hover rather than the rounded\n *\n *\n * @author Isaiah Scheel.\n * @since  11.07.2019\n */\n/**\n * Imports\n */\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport Card from \"pnnl-react-core/lib/Card\";\n/**\n * LCSPlot Class\n */\nexport class LCSPlot extends Component {\n  /**\n   * Constructor that pulls in data from the props.\n   * Also uses the \"long\" variable boolean to check\n   * if it is the graph for the Graphical page\n   * which will make the graph longer and have more\n   * spacing in between the bars\n   * @param {*} props\n   */\n  constructor(props) {\n    super(props);\n    var lcs = this.props.data;\n    var i;\n\n    this.long = this.props.long;\n    /**\n     * Check whether it is the long graph or not.\n     * The long graph is used in the graphical results\n     * tab in the report page.\n     */\n    if (this.long) {\n      this.width = 800;\n      this.height = 400;\n      this.bar_gap = 5;\n    } else {\n      this.width = 550;\n      this.height = 400;\n      this.bar_gap = 0;\n    }\n\n    this.x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n    this.y = [\n      lcs[0] / 100,\n      lcs[1] / 100,\n      lcs[2] / 100,\n      lcs[3] / 100,\n      lcs[4] / 100,\n      lcs[5] / 100,\n      lcs[6] / 100,\n      lcs[7] / 100,\n      lcs[8] / 100,\n      lcs[9] / 100,\n      lcs[10] / 100,\n      lcs[11] / 100,\n      lcs[12] / 100,\n      lcs[13] / 100,\n      lcs[14] / 100,\n      lcs[15] / 100\n    ];\n\n    this.y_rounded = [];\n\n    for (i = 0; i < 16; i++) {\n      this.y_rounded[i] = `${Math.round(this.y[i] * 100)}%`;\n    }\n    /**\n     * Colors for each bar/Huebin. Used throughout the code.\n     */\n    this.bar_colors = [\n      \"#b45c60\",\n      \"#cb7761\",\n      \"#cb824b\",\n      \"#d7ad67\",\n      \"#ac9a5d\",\n      \"#919E60\",\n      \"#678B5F\",\n      \"#62B08F\",\n      \"#7CBABA\",\n      \"#2C797D\",\n      \"#54778C\",\n      \"#7189B1\",\n      \"#988CA9\",\n      \"#735876\",\n      \"#8F6682\",\n      \"#B97B8E\"\n    ];\n    this.y_full = [\n      lcs[0],\n      lcs[1],\n      lcs[2],\n      lcs[3],\n      lcs[4],\n      lcs[5],\n      lcs[6],\n      lcs[7],\n      lcs[8],\n      lcs[9],\n      lcs[10],\n      lcs[11],\n      lcs[12],\n      lcs[13],\n      lcs[14],\n      lcs[15]\n    ];\n  }\n  render() {\n    return (\n      <Plot\n        useResizeHandler={true}\n        style={{ width: \"100%\" }}\n        title={null}\n        data={[\n          {\n            name: \"\",\n            type: \"bar\",\n            x: this.x,\n            y: this.y,\n            marker: {\n              color: this.bar_colors\n            },\n            textfont: {\n              size: 14\n            },\n            outsidetextfont: {\n              size: 20\n            },\n            text: this.y_rounded,\n            textangle: \"-90\",\n            textposition: \"outside\",\n            hovertemplate: `R<sub>cs,h%{x}</sub>: %{y}`\n            //hoverinfo: \"y\"\n          }\n        ]}\n        layout={{\n          //width: this.width,\n          height: this.height,\n          margin: {\n            l: 60,\n            r: 10,\n            b: 45,\n            t: 10,\n            pad: 4\n          },\n          xaxis: {\n            title: {\n              text: \"Hue-Angle Bin (<i>j</i>)\"\n            },\n            tickmode: \"linear\"\n          },\n          yaxis: {\n            tickmode: \"array\",\n            tickvals: [-0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4],\n            ticktext: [\n              \"-40%\",\n              \"-30%\",\n              \"-20%\",\n              \"-10%\",\n              \"0%\",\n              \"10%\",\n              \"20%\",\n              \"30%\",\n              \"40%\"\n            ],\n            //range: [-0.4, 0.4],\n            title: {\n              text: \"Local Chroma Shift (<i>R</i><sub>cs,hj</sub>)\"\n            }\n            //tickformat: \"%\"\n          },\n          bargap: this.bar_gap\n        }}\n        config={{\n          displaylogo: false,\n          modeBarButtons: [[\"toImage\"]],\n          responsive: true,\n          toImageButtonOptions: {\n            format: \"png\", // one of png, svg, jpeg, webp\n            filename: \"Local Chroma Shift\",\n            height: 700,\n            width: 900,\n            scale: 1.5 // Multiply title/legend/axis/canvas sizes by this factor\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default LCSPlot;\n"]},"metadata":{},"sourceType":"module"}