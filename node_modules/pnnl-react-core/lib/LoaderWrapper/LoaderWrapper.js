'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _elementType = require('prop-types-extra/lib/elementType');

var _elementType2 = _interopRequireDefault(_elementType);

var _Loader = require('../Loader');

var _Loader2 = _interopRequireDefault(_Loader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var LoaderWrapper = function (_React$Component) {
  (0, _inherits3['default'])(LoaderWrapper, _React$Component);

  function LoaderWrapper() {
    (0, _classCallCheck3['default'])(this, LoaderWrapper);
    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
  }

  LoaderWrapper.prototype.render = function render() {
    var _props = this.props,
        show = _props.show,
        children = _props.children,
        className = _props.className,
        Loading = _props.loadingComponent,
        message = _props.message;


    if (!show) {
      return children;
    }

    if (Loading) {
      return _react2['default'].createElement(Loading, null);
    }

    var _className = (0, _classnames2['default'])('pnnl-loader-wrapper', className);

    return _react2['default'].createElement(
      'div',
      { className: _className },
      _react2['default'].createElement(
        'h2',
        null,
        _react2['default'].createElement(_Loader2['default'], { show: true, color: 'silver' }),
        ' ',
        message
      )
    );
  };

  return LoaderWrapper;
}(_react2['default'].Component);

LoaderWrapper.propTypes = {
  /**
     * Set the visibility of the wrapper. When `show` is false, it will display the children component(s)
     */
  show: _propTypes2['default'].bool,

  /**
     * Used to add additional CSS classes to the root of the progress bar wrapper.
     * */
  className: _propTypes2['default'].string,

  /**
     * A `<Loader/>` component to used for the display when `show` is true.
     */
  loadingComponent: _elementType2['default'],

  /**
     * A loading message used by the component to display while it is being shown. Does not apply if a `loading` element is provided.
     */
  message: _propTypes2['default'].string,

  children: _propTypes2['default'].oneOfType([_propTypes2['default'].arrayOf(_propTypes2['default'].node), _propTypes2['default'].node]).isRequired
};

LoaderWrapper.defaultProps = {
  show: false,
  message: 'Loading...',
  className: null,
  loadingComponent: null
};

exports['default'] = LoaderWrapper;
module.exports = exports['default'];